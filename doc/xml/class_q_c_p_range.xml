<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_q_c_p_range" kind="class" language="C++" prot="public">
    <compoundname>QCPRange</compoundname>
    <includes refid="qcustomplot_8h" local="no">qcustomplot.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double QCPRange::lower</definition>
        <argsstring></argsstring>
        <name>lower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="479" column="10" bodyfile="qcustomplot.h" bodystart="479" bodyend="-1"/>
        <referencedby refid="class_q_c_p_color_map_data_1af1a36385c78ab624cd617065602408b6" compoundref="qcustomplot_8cpp" startline="19965" endline="19971">QCPColorMapData::cellToCoord</referencedby>
        <referencedby refid="class_q_c_p_range_1af57d4a37a45d0101177ca30fae5d4ca8" compoundref="qcustomplot_8cpp" startline="1330" endline="1333">center</referencedby>
        <referencedby refid="class_q_c_p_color_gradient_1a0599545c859268b025d2060dea741cea" compoundref="qcustomplot_8cpp" startline="11368" endline="11391">QCPColorGradient::color</referencedby>
        <referencedby refid="class_q_c_p_color_gradient_1aaf423ceb943e177b0ed2c48c811d83dc" compoundref="qcustomplot_8cpp" startline="11293" endline="11357">QCPColorGradient::colorize</referencedby>
        <referencedby refid="class_q_c_p_range_1ae9842b48b6d38dc5e9607358e3083cc8" compoundref="qcustomplot_8cpp" startline="1446" endline="1449">contains</referencedby>
        <referencedby refid="class_q_c_p_color_map_data_1aca5b29e0ca2f299c9060fc6e1f74d0c8" compoundref="qcustomplot_8cpp" startline="19942" endline="19948">QCPColorMapData::coordToCell</referencedby>
        <referencedby refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</referencedby>
        <referencedby refid="class_q_c_p_color_map_data_1a2c33807b008cdb9e1394245c294c0eaf" compoundref="qcustomplot_8cpp" startline="19685" endline="19693">QCPColorMapData::data</referencedby>
        <referencedby refid="class_q_c_p_color_map_1a3b0f45a3177be9522d5e9b8cd8ae122d" compoundref="qcustomplot_8cpp" startline="20404" endline="20470">QCPColorMap::draw</referencedby>
        <referencedby refid="class_q_c_p_grid_1aee4e95d54acabbe298d6dda0dd86c0a4" compoundref="qcustomplot_8cpp" startline="3779" endline="3845">QCPGrid::drawGridLines</referencedby>
        <referencedby refid="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" compoundref="qcustomplot_8cpp" startline="1353" endline="1359">expand</referencedby>
        <referencedby refid="class_q_c_p_axis_1a626eef437c874148df1a5ac78506d463" compoundref="qcustomplot_8cpp" startline="5607" endline="5668">QCPAxis::generateAutoTicks</referencedby>
        <referencedby refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" compoundref="qcustomplot_8cpp" startline="17221" endline="17298">QCPCurve::getCurveData</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae6425d5df537c08159f794cb18c051c3" compoundref="qcustomplot_8cpp" startline="16506" endline="16613">QCPGraph::getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_curve_1a1b24b1384d72862e8294688501ffa01d" compoundref="qcustomplot_8cpp" startline="17943" endline="17976">QCPCurve::getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_bars_1a0161ff6af64e025543c66130bcaa7ffd" compoundref="qcustomplot_8cpp" startline="19048" endline="19095">QCPBars::getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_color_map_1af294ea4d207e6e3411fb05c69e2c7fa9" compoundref="qcustomplot_8cpp" startline="20493" endline="20512">QCPColorMap::getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_financial_1a13da88ffd42ad192a672d54f3f233d15" compoundref="qcustomplot_8cpp" startline="21083" endline="21116">QCPFinancial::getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" compoundref="qcustomplot_8cpp" startline="15661" endline="15840">QCPGraph::getPreparedData</referencedby>
        <referencedby refid="class_q_c_p_graph_1ac23c7702ca836c7055f48e6fc3295ca4" compoundref="qcustomplot_8cpp" startline="16621" endline="16728">QCPGraph::getValueRange</referencedby>
        <referencedby refid="class_q_c_p_curve_1a12fcfce09ffa9965b3e01555d968d378" compoundref="qcustomplot_8cpp" startline="17979" endline="18012">QCPCurve::getValueRange</referencedby>
        <referencedby refid="class_q_c_p_bars_1af71b8e6ee0b800f0b79f2b6e692afee2" compoundref="qcustomplot_8cpp" startline="19098" endline="19129">QCPBars::getValueRange</referencedby>
        <referencedby refid="class_q_c_p_color_map_1a06cebc3006df6a156be2c9395be6fa0b" compoundref="qcustomplot_8cpp" startline="20515" endline="20534">QCPColorMap::getValueRange</referencedby>
        <referencedby refid="class_q_c_p_financial_1a91c698076647d58223f49e7248d1487e" compoundref="qcustomplot_8cpp" startline="21119" endline="21161">QCPFinancial::getValueRange</referencedby>
        <referencedby refid="class_q_c_p_axis_rect_1a4baf3d5dd69166788f6ceda0ea182c6e" compoundref="qcustomplot_8cpp" startline="12508" endline="12550">QCPAxisRect::mouseMoveEvent</referencedby>
        <referencedby refid="class_q_c_p_axis_1a18f3a68f2b691af1fd34b6593c886630" compoundref="qcustomplot_8cpp" startline="5150" endline="5165">QCPAxis::moveRange</referencedby>
        <referencedby refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" compoundref="qcustomplot_8cpp" startline="1339" endline="1343">normalize</referencedby>
        <referencedby refid="class_q_c_p_range_1a9f8d1fdcf4b6d19779f1c3d9a14b09c9" compoundref="qcustomplot_8h" startline="484" endline="484">operator==</referencedby>
        <referencedby refid="class_q_c_p_axis_1a536ef8f624cac59b6b6fdcb495723c57" compoundref="qcustomplot_8cpp" startline="5286" endline="5319">QCPAxis::pixelToCoord</referencedby>
        <referencedby refid="class_q_c_p_color_map_data_1ab235ade8a4d64bd3adb26a99b3dd57ee" compoundref="qcustomplot_8cpp" startline="19884" endline="19901">QCPColorMapData::recalculateDataBounds</referencedby>
        <referencedby refid="class_q_c_p_axis_1a499345f02ebce4b23d8ccec96e58daa9" compoundref="qcustomplot_8cpp" startline="5237" endline="5281">QCPAxis::rescale</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1a425983db4478543924ddbd04ea20a356" compoundref="qcustomplot_8cpp" startline="14062" endline="14119">QCPColorScale::rescaleDataRange</referencedby>
        <referencedby refid="class_q_c_p_graph_1a051fb77b459ba1ae8d65552c67f45e94" compoundref="qcustomplot_8cpp" startline="15011" endline="15038">QCPGraph::rescaleKeyAxis</referencedby>
        <referencedby refid="class_q_c_p_abstract_plottable_1ae96b83c961e257da116c6acf9c7da308" compoundref="qcustomplot_8cpp" startline="7050" endline="7080">QCPAbstractPlottable::rescaleKeyAxis</referencedby>
        <referencedby refid="class_q_c_p_graph_1a9e0e620a56932c4df80a3762c2f93608" compoundref="qcustomplot_8cpp" startline="15047" endline="15074">QCPGraph::rescaleValueAxis</referencedby>
        <referencedby refid="class_q_c_p_abstract_plottable_1aa1e408bb2d13999150c3f7f8a8579ca9" compoundref="qcustomplot_8cpp" startline="7090" endline="7120">QCPAbstractPlottable::rescaleValueAxis</referencedby>
        <referencedby refid="class_q_c_p_range_1a808751fdd9b17ef52327ba011df2e5f1" compoundref="qcustomplot_8cpp" startline="1436" endline="1441">sanitizedForLinScale</referencedby>
        <referencedby refid="class_q_c_p_range_1a3d66288d66e1d6df3636075eb42502ee" compoundref="qcustomplot_8cpp" startline="1387" endline="1430">sanitizedForLogScale</referencedby>
        <referencedby refid="class_q_c_p_axis_1a7072ff96fe690148f1bbcdb4f773ea1c" compoundref="qcustomplot_8cpp" startline="5173" endline="5198">QCPAxis::scaleRange</referencedby>
        <referencedby refid="class_q_c_p_color_map_data_1a8e75eaf8746596319032a93f3d2d0683" compoundref="qcustomplot_8cpp" startline="19858" endline="19869">QCPColorMapData::setCell</referencedby>
        <referencedby refid="class_q_c_p_color_map_data_1afd2083ccfd6987ec94aa7ef8e91ca39a" compoundref="qcustomplot_8cpp" startline="19832" endline="19845">QCPColorMapData::setData</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1abe88633003a26d1e756aa74984587fef" compoundref="qcustomplot_8cpp" startline="13925" endline="13934">QCPColorScale::setDataRange</referencedby>
        <referencedby refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" compoundref="qcustomplot_8cpp" startline="20127" endline="20139">QCPColorMap::setDataRange</referencedby>
        <referencedby refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" compoundref="qcustomplot_8cpp" startline="4206" endline="4223">QCPAxis::setRange</referencedby>
        <referencedby refid="class_q_c_p_axis_1afcf51227d337db28d1a9ce9a4d1bc91a" compoundref="qcustomplot_8cpp" startline="4323" endline="4340">QCPAxis::setRangeLower</referencedby>
        <referencedby refid="class_q_c_p_axis_1a57d9e961bae7d62f5b4e1f143e660c78" compoundref="qcustomplot_8cpp" startline="5514" endline="5596">QCPAxis::setupTickVectors</referencedby>
        <referencedby refid="class_q_c_p_range_1a62326e7cc4316b96df6a60813230e63f" compoundref="qcustomplot_8cpp" startline="1322" endline="1325">size</referencedby>
        <referencedby refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" compoundref="qcustomplot_8cpp" startline="1459" endline="1467">validRange</referencedby>
        <referencedby refid="class_q_c_p_axis_1aeda1feaedaabc6e0f0d5b0c18a3898d2" compoundref="qcustomplot_8cpp" startline="5850" endline="5880">QCPAxis::visibleTickBounds</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double QCPRange::upper</definition>
        <argsstring></argsstring>
        <name>upper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="479" column="16" bodyfile="qcustomplot.h" bodystart="479" bodyend="-1"/>
        <referencedby refid="class_q_c_p_color_map_data_1af1a36385c78ab624cd617065602408b6" compoundref="qcustomplot_8cpp" startline="19965" endline="19971">QCPColorMapData::cellToCoord</referencedby>
        <referencedby refid="class_q_c_p_range_1af57d4a37a45d0101177ca30fae5d4ca8" compoundref="qcustomplot_8cpp" startline="1330" endline="1333">center</referencedby>
        <referencedby refid="class_q_c_p_color_gradient_1a0599545c859268b025d2060dea741cea" compoundref="qcustomplot_8cpp" startline="11368" endline="11391">QCPColorGradient::color</referencedby>
        <referencedby refid="class_q_c_p_color_gradient_1aaf423ceb943e177b0ed2c48c811d83dc" compoundref="qcustomplot_8cpp" startline="11293" endline="11357">QCPColorGradient::colorize</referencedby>
        <referencedby refid="class_q_c_p_range_1ae9842b48b6d38dc5e9607358e3083cc8" compoundref="qcustomplot_8cpp" startline="1446" endline="1449">contains</referencedby>
        <referencedby refid="class_q_c_p_color_map_data_1aca5b29e0ca2f299c9060fc6e1f74d0c8" compoundref="qcustomplot_8cpp" startline="19942" endline="19948">QCPColorMapData::coordToCell</referencedby>
        <referencedby refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</referencedby>
        <referencedby refid="class_q_c_p_color_map_data_1a2c33807b008cdb9e1394245c294c0eaf" compoundref="qcustomplot_8cpp" startline="19685" endline="19693">QCPColorMapData::data</referencedby>
        <referencedby refid="class_q_c_p_color_map_1a3b0f45a3177be9522d5e9b8cd8ae122d" compoundref="qcustomplot_8cpp" startline="20404" endline="20470">QCPColorMap::draw</referencedby>
        <referencedby refid="class_q_c_p_grid_1aee4e95d54acabbe298d6dda0dd86c0a4" compoundref="qcustomplot_8cpp" startline="3779" endline="3845">QCPGrid::drawGridLines</referencedby>
        <referencedby refid="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" compoundref="qcustomplot_8cpp" startline="1353" endline="1359">expand</referencedby>
        <referencedby refid="class_q_c_p_axis_1a626eef437c874148df1a5ac78506d463" compoundref="qcustomplot_8cpp" startline="5607" endline="5668">QCPAxis::generateAutoTicks</referencedby>
        <referencedby refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" compoundref="qcustomplot_8cpp" startline="17221" endline="17298">QCPCurve::getCurveData</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae6425d5df537c08159f794cb18c051c3" compoundref="qcustomplot_8cpp" startline="16506" endline="16613">QCPGraph::getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_curve_1a1b24b1384d72862e8294688501ffa01d" compoundref="qcustomplot_8cpp" startline="17943" endline="17976">QCPCurve::getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_bars_1a0161ff6af64e025543c66130bcaa7ffd" compoundref="qcustomplot_8cpp" startline="19048" endline="19095">QCPBars::getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_color_map_1af294ea4d207e6e3411fb05c69e2c7fa9" compoundref="qcustomplot_8cpp" startline="20493" endline="20512">QCPColorMap::getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_financial_1a13da88ffd42ad192a672d54f3f233d15" compoundref="qcustomplot_8cpp" startline="21083" endline="21116">QCPFinancial::getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" compoundref="qcustomplot_8cpp" startline="15661" endline="15840">QCPGraph::getPreparedData</referencedby>
        <referencedby refid="class_q_c_p_graph_1ac23c7702ca836c7055f48e6fc3295ca4" compoundref="qcustomplot_8cpp" startline="16621" endline="16728">QCPGraph::getValueRange</referencedby>
        <referencedby refid="class_q_c_p_curve_1a12fcfce09ffa9965b3e01555d968d378" compoundref="qcustomplot_8cpp" startline="17979" endline="18012">QCPCurve::getValueRange</referencedby>
        <referencedby refid="class_q_c_p_bars_1af71b8e6ee0b800f0b79f2b6e692afee2" compoundref="qcustomplot_8cpp" startline="19098" endline="19129">QCPBars::getValueRange</referencedby>
        <referencedby refid="class_q_c_p_color_map_1a06cebc3006df6a156be2c9395be6fa0b" compoundref="qcustomplot_8cpp" startline="20515" endline="20534">QCPColorMap::getValueRange</referencedby>
        <referencedby refid="class_q_c_p_financial_1a91c698076647d58223f49e7248d1487e" compoundref="qcustomplot_8cpp" startline="21119" endline="21161">QCPFinancial::getValueRange</referencedby>
        <referencedby refid="class_q_c_p_graph_1ace7c17a07e9aa824853e469816a5aa1c" compoundref="qcustomplot_8cpp" startline="16065" endline="16114">QCPGraph::lowerFillBasePoint</referencedby>
        <referencedby refid="class_q_c_p_axis_rect_1a4baf3d5dd69166788f6ceda0ea182c6e" compoundref="qcustomplot_8cpp" startline="12508" endline="12550">QCPAxisRect::mouseMoveEvent</referencedby>
        <referencedby refid="class_q_c_p_axis_1a18f3a68f2b691af1fd34b6593c886630" compoundref="qcustomplot_8cpp" startline="5150" endline="5165">QCPAxis::moveRange</referencedby>
        <referencedby refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" compoundref="qcustomplot_8cpp" startline="1339" endline="1343">normalize</referencedby>
        <referencedby refid="class_q_c_p_range_1a9f8d1fdcf4b6d19779f1c3d9a14b09c9" compoundref="qcustomplot_8h" startline="484" endline="484">operator==</referencedby>
        <referencedby refid="class_q_c_p_axis_1a536ef8f624cac59b6b6fdcb495723c57" compoundref="qcustomplot_8cpp" startline="5286" endline="5319">QCPAxis::pixelToCoord</referencedby>
        <referencedby refid="class_q_c_p_color_map_data_1ab235ade8a4d64bd3adb26a99b3dd57ee" compoundref="qcustomplot_8cpp" startline="19884" endline="19901">QCPColorMapData::recalculateDataBounds</referencedby>
        <referencedby refid="class_q_c_p_axis_1a499345f02ebce4b23d8ccec96e58daa9" compoundref="qcustomplot_8cpp" startline="5237" endline="5281">QCPAxis::rescale</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1a425983db4478543924ddbd04ea20a356" compoundref="qcustomplot_8cpp" startline="14062" endline="14119">QCPColorScale::rescaleDataRange</referencedby>
        <referencedby refid="class_q_c_p_graph_1a051fb77b459ba1ae8d65552c67f45e94" compoundref="qcustomplot_8cpp" startline="15011" endline="15038">QCPGraph::rescaleKeyAxis</referencedby>
        <referencedby refid="class_q_c_p_abstract_plottable_1ae96b83c961e257da116c6acf9c7da308" compoundref="qcustomplot_8cpp" startline="7050" endline="7080">QCPAbstractPlottable::rescaleKeyAxis</referencedby>
        <referencedby refid="class_q_c_p_graph_1a9e0e620a56932c4df80a3762c2f93608" compoundref="qcustomplot_8cpp" startline="15047" endline="15074">QCPGraph::rescaleValueAxis</referencedby>
        <referencedby refid="class_q_c_p_abstract_plottable_1aa1e408bb2d13999150c3f7f8a8579ca9" compoundref="qcustomplot_8cpp" startline="7090" endline="7120">QCPAbstractPlottable::rescaleValueAxis</referencedby>
        <referencedby refid="class_q_c_p_range_1a808751fdd9b17ef52327ba011df2e5f1" compoundref="qcustomplot_8cpp" startline="1436" endline="1441">sanitizedForLinScale</referencedby>
        <referencedby refid="class_q_c_p_range_1a3d66288d66e1d6df3636075eb42502ee" compoundref="qcustomplot_8cpp" startline="1387" endline="1430">sanitizedForLogScale</referencedby>
        <referencedby refid="class_q_c_p_axis_1a7072ff96fe690148f1bbcdb4f773ea1c" compoundref="qcustomplot_8cpp" startline="5173" endline="5198">QCPAxis::scaleRange</referencedby>
        <referencedby refid="class_q_c_p_color_map_data_1a8e75eaf8746596319032a93f3d2d0683" compoundref="qcustomplot_8cpp" startline="19858" endline="19869">QCPColorMapData::setCell</referencedby>
        <referencedby refid="class_q_c_p_color_map_data_1afd2083ccfd6987ec94aa7ef8e91ca39a" compoundref="qcustomplot_8cpp" startline="19832" endline="19845">QCPColorMapData::setData</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1abe88633003a26d1e756aa74984587fef" compoundref="qcustomplot_8cpp" startline="13925" endline="13934">QCPColorScale::setDataRange</referencedby>
        <referencedby refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" compoundref="qcustomplot_8cpp" startline="20127" endline="20139">QCPColorMap::setDataRange</referencedby>
        <referencedby refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" compoundref="qcustomplot_8cpp" startline="4206" endline="4223">QCPAxis::setRange</referencedby>
        <referencedby refid="class_q_c_p_axis_1acd3ca1247aa867b540cd5ec30ccd3bef" compoundref="qcustomplot_8cpp" startline="4346" endline="4363">QCPAxis::setRangeUpper</referencedby>
        <referencedby refid="class_q_c_p_axis_1a57d9e961bae7d62f5b4e1f143e660c78" compoundref="qcustomplot_8cpp" startline="5514" endline="5596">QCPAxis::setupTickVectors</referencedby>
        <referencedby refid="class_q_c_p_range_1a62326e7cc4316b96df6a60813230e63f" compoundref="qcustomplot_8cpp" startline="1322" endline="1325">size</referencedby>
        <referencedby refid="class_q_c_p_graph_1a7a255fc7260d96ed6f9d972839941f93" compoundref="qcustomplot_8cpp" startline="16130" endline="16179">QCPGraph::upperFillBasePoint</referencedby>
        <referencedby refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" compoundref="qcustomplot_8cpp" startline="1459" endline="1467">validRange</referencedby>
        <referencedby refid="class_q_c_p_axis_1aeda1feaedaabc6e0f0d5b0c18a3898d2" compoundref="qcustomplot_8cpp" startline="5850" endline="5880">QCPAxis::visibleTickBounds</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_q_c_p_range_1ab46d3bc95030ee25efda41b89e2b616b" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double QCPRange::minRange</definition>
        <argsstring></argsstring>
        <name>minRange</name>
        <initializer>= 1e-280</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Minimum range size (<emphasis>upper</emphasis> - <emphasis>lower</emphasis>) the range changing functions will accept. Smaller intervals would cause errors due to the 11-bit exponent of double precision numbers, corresponding to a minimum magnitude of roughly 1e-308. <simplesect kind="see"><para><ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">validRange</ref>, <ref refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" kindref="member">maxRange</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="509" column="23" bodyfile="qcustomplot.h" bodystart="509" bodyend="-1"/>
        <referencedby refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" compoundref="qcustomplot_8cpp" startline="1459" endline="1467">validRange</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double QCPRange::maxRange</definition>
        <argsstring></argsstring>
        <name>maxRange</name>
        <initializer>= 1e250</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum values (negative and positive) the range will accept in range-changing functions. Larger absolute values would cause errors due to the 11-bit exponent of double precision numbers, corresponding to a maximum magnitude of roughly 1e308. Since the number of planck-volumes in the entire visible universe is only ~1e183, this should be enough. <simplesect kind="see"><para><ref refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" kindref="member">validRange</ref>, <ref refid="class_q_c_p_range_1ab46d3bc95030ee25efda41b89e2b616b" kindref="member">minRange</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="510" column="23" bodyfile="qcustomplot.h" bodystart="510" bodyend="-1"/>
        <referencedby refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" compoundref="qcustomplot_8cpp" startline="1459" endline="1467">validRange</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPRange::QCPRange</definition>
        <argsstring>()</argsstring>
        <name>QCPRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a range with <emphasis>lower</emphasis> and <emphasis>upper</emphasis> set to zero. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="481" column="3" bodyfile="qcustomplot.cpp" bodystart="1303" bodyend="1307"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1a1d9d84d084c8f368fdedd42e0978d405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPRange::QCPRange</definition>
        <argsstring>(double lower, double upper)</argsstring>
        <name>QCPRange</name>
        <param>
          <type>double</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>double</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Constructs a range with the specified <emphasis>lower</emphasis> and <emphasis>upper</emphasis> values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="482" column="3" bodyfile="qcustomplot.cpp" bodystart="1312" bodyend="1317"/>
        <references refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" compoundref="qcustomplot_8cpp" startline="1339" endline="1343">normalize</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1a9f8d1fdcf4b6d19779f1c3d9a14b09c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPRange::operator==</definition>
        <argsstring>(const QCPRange &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="484" column="8" bodyfile="qcustomplot.h" bodystart="484" bodyend="484"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">lower</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">upper</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1a4827a37c83b8bb4bf53fcf8f6a257e77" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPRange::operator!=</definition>
        <argsstring>(const QCPRange &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="485" column="8" bodyfile="qcustomplot.h" bodystart="485" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1afea7c1aa7d08f061cd9bd8832f957df8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
        <definition>QCPRange &amp; QCPRange::operator+=</definition>
        <argsstring>(const double &amp;value)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const double &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds <emphasis>value</emphasis> to both boundaries of the range. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="487" column="12" bodyfile="qcustomplot.h" bodystart="487" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1a95894bcb15a16a75ca564091374e2191" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
        <definition>QCPRange &amp; QCPRange::operator-=</definition>
        <argsstring>(const double &amp;value)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const double &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtracts <emphasis>value</emphasis> from both boundaries of the range. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="488" column="12" bodyfile="qcustomplot.h" bodystart="488" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1a6876aa9620ff2f0f7f1873f998372cef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
        <definition>QCPRange &amp; QCPRange::operator*=</definition>
        <argsstring>(const double &amp;value)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const double &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplies both boundaries of the range by <emphasis>value</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="489" column="12" bodyfile="qcustomplot.h" bodystart="489" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1a6137d8682b6835ace840730b4c1e2d63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
        <definition>QCPRange &amp; QCPRange::operator/=</definition>
        <argsstring>(const double &amp;value)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const double &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divides both boundaries of the range by <emphasis>value</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="490" column="12" bodyfile="qcustomplot.h" bodystart="490" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1a62326e7cc4316b96df6a60813230e63f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QCPRange::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the size of the range, i.e. <emphasis>upper-<emphasis>lower</emphasis> </emphasis> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="498" column="10" bodyfile="qcustomplot.cpp" bodystart="1322" bodyend="1325"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">lower</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">upper</references>
        <referencedby refid="class_q_c_p_color_gradient_1a0599545c859268b025d2060dea741cea" compoundref="qcustomplot_8cpp" startline="11368" endline="11391">QCPColorGradient::color</referencedby>
        <referencedby refid="class_q_c_p_color_gradient_1aaf423ceb943e177b0ed2c48c811d83dc" compoundref="qcustomplot_8cpp" startline="11293" endline="11357">QCPColorGradient::colorize</referencedby>
        <referencedby refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</referencedby>
        <referencedby refid="class_q_c_p_grid_1aee4e95d54acabbe298d6dda0dd86c0a4" compoundref="qcustomplot_8cpp" startline="3779" endline="3845">QCPGrid::drawGridLines</referencedby>
        <referencedby refid="class_q_c_p_axis_1a626eef437c874148df1a5ac78506d463" compoundref="qcustomplot_8cpp" startline="5607" endline="5668">QCPAxis::generateAutoTicks</referencedby>
        <referencedby refid="class_q_c_p_axis_1a536ef8f624cac59b6b6fdcb495723c57" compoundref="qcustomplot_8cpp" startline="5286" endline="5319">QCPAxis::pixelToCoord</referencedby>
        <referencedby refid="class_q_c_p_axis_1a499345f02ebce4b23d8ccec96e58daa9" compoundref="qcustomplot_8cpp" startline="5237" endline="5281">QCPAxis::rescale</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1a425983db4478543924ddbd04ea20a356" compoundref="qcustomplot_8cpp" startline="14062" endline="14119">QCPColorScale::rescaleDataRange</referencedby>
        <referencedby refid="class_q_c_p_abstract_plottable_1ae96b83c961e257da116c6acf9c7da308" compoundref="qcustomplot_8cpp" startline="7050" endline="7080">QCPAbstractPlottable::rescaleKeyAxis</referencedby>
        <referencedby refid="class_q_c_p_abstract_plottable_1aa1e408bb2d13999150c3f7f8a8579ca9" compoundref="qcustomplot_8cpp" startline="7090" endline="7120">QCPAbstractPlottable::rescaleValueAxis</referencedby>
        <referencedby refid="class_q_c_p_axis_1af4bbd446dcaee5a83ac30ce9bcd6e125" compoundref="qcustomplot_8cpp" startline="5213" endline="5229">QCPAxis::setScaleRatio</referencedby>
        <referencedby refid="class_q_c_p_axis_1a57d9e961bae7d62f5b4e1f143e660c78" compoundref="qcustomplot_8cpp" startline="5514" endline="5596">QCPAxis::setupTickVectors</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1af57d4a37a45d0101177ca30fae5d4ca8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QCPRange::center</definition>
        <argsstring>() const</argsstring>
        <name>center</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the center of the range, i.e. (<emphasis>upper+<emphasis>lower</emphasis>)*0</emphasis>.5 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="499" column="10" bodyfile="qcustomplot.cpp" bodystart="1330" bodyend="1333"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">lower</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">upper</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPRange::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Makes sure <emphasis>lower</emphasis> is numerically smaller than <emphasis>upper</emphasis>. If this is not the case, the values are swapped. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="500" column="8" bodyfile="qcustomplot.cpp" bodystart="1339" bodyend="1343"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">lower</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">upper</references>
        <referencedby refid="class_q_c_p_color_map_1af294ea4d207e6e3411fb05c69e2c7fa9" compoundref="qcustomplot_8cpp" startline="20493" endline="20512">QCPColorMap::getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_color_map_1a06cebc3006df6a156be2c9395be6fa0b" compoundref="qcustomplot_8cpp" startline="20515" endline="20534">QCPColorMap::getValueRange</referencedby>
        <referencedby refid="class_q_c_p_range_1a1d9d84d084c8f368fdedd42e0978d405" compoundref="qcustomplot_8cpp" startline="1312" endline="1317">QCPRange</referencedby>
        <referencedby refid="class_q_c_p_range_1a808751fdd9b17ef52327ba011df2e5f1" compoundref="qcustomplot_8cpp" startline="1436" endline="1441">sanitizedForLinScale</referencedby>
        <referencedby refid="class_q_c_p_range_1a3d66288d66e1d6df3636075eb42502ee" compoundref="qcustomplot_8cpp" startline="1387" endline="1430">sanitizedForLogScale</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPRange::expand</definition>
        <argsstring>(const QCPRange &amp;otherRange)</argsstring>
        <name>expand</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>otherRange</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expands this range such that <emphasis>otherRange</emphasis> is contained in the new range. It is assumed that both this range and <emphasis>otherRange</emphasis> are normalized (see <ref refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" kindref="member">normalize</ref>).</para>
<para>If <emphasis>otherRange</emphasis> is already inside the current range, this function does nothing.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_range_1a9cbfb7cd06eac1839cae981e05c19633" kindref="member">expanded</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="501" column="8" bodyfile="qcustomplot.cpp" bodystart="1353" bodyend="1359"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">lower</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">upper</references>
        <referencedby refid="class_q_c_p_range_1a9cbfb7cd06eac1839cae981e05c19633" compoundref="qcustomplot_8cpp" startline="1368" endline="1373">expanded</referencedby>
        <referencedby refid="class_q_c_p_axis_1a499345f02ebce4b23d8ccec96e58daa9" compoundref="qcustomplot_8cpp" startline="5237" endline="5281">QCPAxis::rescale</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1a425983db4478543924ddbd04ea20a356" compoundref="qcustomplot_8cpp" startline="14062" endline="14119">QCPColorScale::rescaleDataRange</referencedby>
        <referencedby refid="class_q_c_p_abstract_plottable_1ae96b83c961e257da116c6acf9c7da308" compoundref="qcustomplot_8cpp" startline="7050" endline="7080">QCPAbstractPlottable::rescaleKeyAxis</referencedby>
        <referencedby refid="class_q_c_p_abstract_plottable_1aa1e408bb2d13999150c3f7f8a8579ca9" compoundref="qcustomplot_8cpp" startline="7090" endline="7120">QCPAbstractPlottable::rescaleValueAxis</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1a9cbfb7cd06eac1839cae981e05c19633" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>QCPRange QCPRange::expanded</definition>
        <argsstring>(const QCPRange &amp;otherRange) const</argsstring>
        <name>expanded</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>otherRange</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an expanded range that contains this and <emphasis>otherRange</emphasis>. It is assumed that both this range and <emphasis>otherRange</emphasis> are normalized (see <ref refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" kindref="member">normalize</ref>).</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" kindref="member">expand</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="502" column="12" bodyfile="qcustomplot.cpp" bodystart="1368" bodyend="1373"/>
        <references refid="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" compoundref="qcustomplot_8cpp" startline="1353" endline="1359">expand</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1a3d66288d66e1d6df3636075eb42502ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>QCPRange QCPRange::sanitizedForLogScale</definition>
        <argsstring>() const</argsstring>
        <name>sanitizedForLogScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a sanitized version of the range. Sanitized means for logarithmic scales, that the range won&apos;t span the positive and negative sign domain, i.e. contain zero. Further <emphasis>lower</emphasis> will always be numerically smaller (or equal) to <emphasis>upper</emphasis>.</para>
<para>If the original range does span positive and negative sign domains or contains zero, the returned range will try to approximate the original range as good as possible. If the positive interval of the original range is wider than the negative interval, the returned range will only contain the positive interval, with lower bound set to <emphasis>rangeFac</emphasis> or <emphasis>rangeFac</emphasis> *<emphasis>upper</emphasis>, whichever is closer to zero. Same procedure is used if the negative interval is wider than the positive interval, this time by changing the <emphasis>upper</emphasis> bound. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="503" column="12" bodyfile="qcustomplot.cpp" bodystart="1387" bodyend="1430"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">lower</references>
        <references refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" compoundref="qcustomplot_8cpp" startline="1339" endline="1343">normalize</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">upper</references>
        <referencedby refid="class_q_c_p_axis_1a7072ff96fe690148f1bbcdb4f773ea1c" compoundref="qcustomplot_8cpp" startline="5173" endline="5198">QCPAxis::scaleRange</referencedby>
        <referencedby refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" compoundref="qcustomplot_8cpp" startline="20127" endline="20139">QCPColorMap::setDataRange</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1aeb6107d67dd7325145b2498abae67fc3" compoundref="qcustomplot_8cpp" startline="13946" endline="13957">QCPColorScale::setDataScaleType</referencedby>
        <referencedby refid="class_q_c_p_color_map_1a9d20aa08e3c1f20f22908c45b9c06511" compoundref="qcustomplot_8cpp" startline="20146" endline="20156">QCPColorMap::setDataScaleType</referencedby>
        <referencedby refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" compoundref="qcustomplot_8cpp" startline="4206" endline="4223">QCPAxis::setRange</referencedby>
        <referencedby refid="class_q_c_p_axis_1afcf51227d337db28d1a9ce9a4d1bc91a" compoundref="qcustomplot_8cpp" startline="4323" endline="4340">QCPAxis::setRangeLower</referencedby>
        <referencedby refid="class_q_c_p_axis_1acd3ca1247aa867b540cd5ec30ccd3bef" compoundref="qcustomplot_8cpp" startline="4346" endline="4363">QCPAxis::setRangeUpper</referencedby>
        <referencedby refid="class_q_c_p_axis_1adef29cae617af4f519f6c40d1a866ca6" compoundref="qcustomplot_8cpp" startline="4168" endline="4178">QCPAxis::setScaleType</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1a808751fdd9b17ef52327ba011df2e5f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>QCPRange QCPRange::sanitizedForLinScale</definition>
        <argsstring>() const</argsstring>
        <name>sanitizedForLinScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a sanitized version of the range. Sanitized means for linear scales, that <emphasis>lower</emphasis> will always be numerically smaller (or equal) to <emphasis>upper</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="504" column="12" bodyfile="qcustomplot.cpp" bodystart="1436" bodyend="1441"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">lower</references>
        <references refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" compoundref="qcustomplot_8cpp" startline="1339" endline="1343">normalize</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">upper</references>
        <referencedby refid="class_q_c_p_axis_1a7072ff96fe690148f1bbcdb4f773ea1c" compoundref="qcustomplot_8cpp" startline="5173" endline="5198">QCPAxis::scaleRange</referencedby>
        <referencedby refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" compoundref="qcustomplot_8cpp" startline="20127" endline="20139">QCPColorMap::setDataRange</referencedby>
        <referencedby refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" compoundref="qcustomplot_8cpp" startline="4206" endline="4223">QCPAxis::setRange</referencedby>
        <referencedby refid="class_q_c_p_axis_1afcf51227d337db28d1a9ce9a4d1bc91a" compoundref="qcustomplot_8cpp" startline="4323" endline="4340">QCPAxis::setRangeLower</referencedby>
        <referencedby refid="class_q_c_p_axis_1acd3ca1247aa867b540cd5ec30ccd3bef" compoundref="qcustomplot_8cpp" startline="4346" endline="4363">QCPAxis::setRangeUpper</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1ae9842b48b6d38dc5e9607358e3083cc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPRange::contains</definition>
        <argsstring>(double value) const</argsstring>
        <name>contains</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true when <emphasis>value</emphasis> lies within or exactly on the borders of the range. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="505" column="8" bodyfile="qcustomplot.cpp" bodystart="1446" bodyend="1449"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">lower</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">upper</references>
        <referencedby refid="class_q_c_p_financial_1a6fa1e18f18b37d3a0502b97d864a6d15" compoundref="qcustomplot_8cpp" startline="21359" endline="21417">QCPFinancial::candlestickSelectTest</referencedby>
        <referencedby refid="class_q_c_p_statistical_box_1a0153ac16326b94450afbca208e3f9961" compoundref="qcustomplot_8cpp" startline="19378" endline="19400">QCPStatisticalBox::selectTest</referencedby>
        <referencedby refid="class_q_c_p_color_map_1aba91ea58b489031157ecb777fe79e309" compoundref="qcustomplot_8cpp" startline="20311" endline="20326">QCPColorMap::selectTest</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_q_c_p_range_1af53ea6fb823a4a5897162b865841de04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>const QCPRange operator+</definition>
        <argsstring>(const QCPRange &amp;, double)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <defname>range</defname>
        </param>
        <param>
          <type>double</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds <emphasis>value</emphasis> to both boundaries of the range. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="491" column="32" bodyfile="qcustomplot.h" bodystart="542" bodyend="547"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_range_1a9fb2e9941d32001482df670c0d704977" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>const QCPRange operator+</definition>
        <argsstring>(double, const QCPRange &amp;)</argsstring>
        <name>operator+</name>
        <param>
          <type>double</type>
          <defname>value</defname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <defname>range</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds <emphasis>value</emphasis> to both boundaries of the range. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="492" column="32" bodyfile="qcustomplot.h" bodystart="552" bodyend="557"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_range_1a797f82830b516646da8873f82e39e356" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>const QCPRange operator-</definition>
        <argsstring>(const QCPRange &amp;range, double value)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtracts <emphasis>value</emphasis> from both boundaries of the range. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="493" column="32" bodyfile="qcustomplot.h" bodystart="562" bodyend="567"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_range_1a558b1248ff6a9e41fd5b2630555a8acc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>const QCPRange operator*</definition>
        <argsstring>(const QCPRange &amp;range, double value)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplies both boundaries of the range by <emphasis>value</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="494" column="32" bodyfile="qcustomplot.h" bodystart="572" bodyend="577"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_range_1a5cb2332f6957021f47cc768089f4f090" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>const QCPRange operator*</definition>
        <argsstring>(double value, const QCPRange &amp;range)</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multiplies both boundaries of the range by <emphasis>value</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="495" column="32" bodyfile="qcustomplot.h" bodystart="582" bodyend="587"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_range_1a4b366a3a21974c88e09b0d39d4a24a4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>const QCPRange operator/</definition>
        <argsstring>(const QCPRange &amp;range, double value)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Divides both boundaries of the range by <emphasis>value</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="496" column="32" bodyfile="qcustomplot.h" bodystart="592" bodyend="597"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPRange::validRange</definition>
        <argsstring>(double lower, double upper)</argsstring>
        <name>validRange</name>
        <param>
          <type>double</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>double</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks, whether the specified range is within valid bounds, which are defined as <ref refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" kindref="member">QCPRange::maxRange</ref> and <ref refid="class_q_c_p_range_1ab46d3bc95030ee25efda41b89e2b616b" kindref="member">QCPRange::minRange</ref>. A valid range means: <itemizedlist>
<listitem><para>range bounds within -maxRange and maxRange </para>
</listitem>
<listitem><para>range size above minRange </para>
</listitem>
<listitem><para>range size below maxRange </para>
</listitem>
</itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="507" column="15" bodyfile="qcustomplot.cpp" bodystart="1459" bodyend="1467"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">lower</references>
        <references refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" compoundref="qcustomplot_8h" startline="510">maxRange</references>
        <references refid="class_q_c_p_range_1ab46d3bc95030ee25efda41b89e2b616b" compoundref="qcustomplot_8h" startline="509">minRange</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">upper</references>
        <referencedby refid="class_q_c_p_axis_1a499345f02ebce4b23d8ccec96e58daa9" compoundref="qcustomplot_8cpp" startline="5237" endline="5281">QCPAxis::rescale</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1a425983db4478543924ddbd04ea20a356" compoundref="qcustomplot_8cpp" startline="14062" endline="14119">QCPColorScale::rescaleDataRange</referencedby>
        <referencedby refid="class_q_c_p_abstract_plottable_1ae96b83c961e257da116c6acf9c7da308" compoundref="qcustomplot_8cpp" startline="7050" endline="7080">QCPAbstractPlottable::rescaleKeyAxis</referencedby>
        <referencedby refid="class_q_c_p_abstract_plottable_1aa1e408bb2d13999150c3f7f8a8579ca9" compoundref="qcustomplot_8cpp" startline="7090" endline="7120">QCPAbstractPlottable::rescaleValueAxis</referencedby>
        <referencedby refid="class_q_c_p_axis_1a7072ff96fe690148f1bbcdb4f773ea1c" compoundref="qcustomplot_8cpp" startline="5173" endline="5198">QCPAxis::scaleRange</referencedby>
        <referencedby refid="class_q_c_p_color_map_1a980b42837821159786a85b4b7dcb8774" compoundref="qcustomplot_8cpp" startline="20127" endline="20139">QCPColorMap::setDataRange</referencedby>
        <referencedby refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" compoundref="qcustomplot_8cpp" startline="4206" endline="4223">QCPAxis::setRange</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_range_1a801b964752eaad6219be9d8a651ec2b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPRange::validRange</definition>
        <argsstring>(const QCPRange &amp;range)</argsstring>
        <name>validRange</name>
        <param>
          <type>const <ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Checks, whether the specified range is within valid bounds, which are defined as <ref refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" kindref="member">QCPRange::maxRange</ref> and <ref refid="class_q_c_p_range_1ab46d3bc95030ee25efda41b89e2b616b" kindref="member">QCPRange::minRange</ref>. A valid range means: <itemizedlist>
<listitem><para>range bounds within -maxRange and maxRange </para>
</listitem>
<listitem><para>range size above minRange </para>
</listitem>
<listitem><para>range size below maxRange </para>
</listitem>
</itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="508" column="15" bodyfile="qcustomplot.cpp" bodystart="1478" bodyend="1486"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">lower</references>
        <references refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" compoundref="qcustomplot_8h" startline="510">maxRange</references>
        <references refid="class_q_c_p_range_1ab46d3bc95030ee25efda41b89e2b616b" compoundref="qcustomplot_8h" startline="509">minRange</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">upper</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents the range an axis is encompassing. </para>
    </briefdescription>
    <detaileddescription>
<para>contains a <emphasis>lower</emphasis> and <emphasis>upper</emphasis> double value and provides convenience input, output and modification functions.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" kindref="member">QCPAxis::setRange</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="476" column="1" bodyfile="qcustomplot.h" bodystart="477" bodyend="512"/>
    <listofallmembers>
      <member refid="class_q_c_p_range_1af57d4a37a45d0101177ca30fae5d4ca8" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>center</name></member>
      <member refid="class_q_c_p_range_1ae9842b48b6d38dc5e9607358e3083cc8" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>contains</name></member>
      <member refid="class_q_c_p_range_1a0fa1bc8048be50d52bea93a8caf08305" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>expand</name></member>
      <member refid="class_q_c_p_range_1a9cbfb7cd06eac1839cae981e05c19633" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>expanded</name></member>
      <member refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>lower</name></member>
      <member refid="class_q_c_p_range_1a5ca51e7a2dc5dc0d49527ab171fe1f4f" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>maxRange</name></member>
      <member refid="class_q_c_p_range_1ab46d3bc95030ee25efda41b89e2b616b" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>minRange</name></member>
      <member refid="class_q_c_p_range_1af914a7740269b0604d0827c634a878a9" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>normalize</name></member>
      <member refid="class_q_c_p_range_1a4827a37c83b8bb4bf53fcf8f6a257e77" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>operator!=</name></member>
      <member refid="class_q_c_p_range_1a558b1248ff6a9e41fd5b2630555a8acc" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>operator*</name></member>
      <member refid="class_q_c_p_range_1a5cb2332f6957021f47cc768089f4f090" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>operator*</name></member>
      <member refid="class_q_c_p_range_1a6876aa9620ff2f0f7f1873f998372cef" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>operator*=</name></member>
      <member refid="class_q_c_p_range_1af53ea6fb823a4a5897162b865841de04" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>operator+</name></member>
      <member refid="class_q_c_p_range_1a9fb2e9941d32001482df670c0d704977" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>operator+</name></member>
      <member refid="class_q_c_p_range_1afea7c1aa7d08f061cd9bd8832f957df8" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>operator+=</name></member>
      <member refid="class_q_c_p_range_1a797f82830b516646da8873f82e39e356" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>operator-</name></member>
      <member refid="class_q_c_p_range_1a95894bcb15a16a75ca564091374e2191" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>operator-=</name></member>
      <member refid="class_q_c_p_range_1a4b366a3a21974c88e09b0d39d4a24a4b" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>operator/</name></member>
      <member refid="class_q_c_p_range_1a6137d8682b6835ace840730b4c1e2d63" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>operator/=</name></member>
      <member refid="class_q_c_p_range_1a9f8d1fdcf4b6d19779f1c3d9a14b09c9" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>operator==</name></member>
      <member refid="class_q_c_p_range_1aca158d7e69702cee5d77d10a269b01e2" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>QCPRange</name></member>
      <member refid="class_q_c_p_range_1a1d9d84d084c8f368fdedd42e0978d405" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>QCPRange</name></member>
      <member refid="class_q_c_p_range_1a808751fdd9b17ef52327ba011df2e5f1" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>sanitizedForLinScale</name></member>
      <member refid="class_q_c_p_range_1a3d66288d66e1d6df3636075eb42502ee" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>sanitizedForLogScale</name></member>
      <member refid="class_q_c_p_range_1a62326e7cc4316b96df6a60813230e63f" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>size</name></member>
      <member refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>upper</name></member>
      <member refid="class_q_c_p_range_1ab38bd4841c77c7bb86c9eea0f142dcc0" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>validRange</name></member>
      <member refid="class_q_c_p_range_1a801b964752eaad6219be9d8a651ec2b3" prot="public" virt="non-virtual"><scope>QCPRange</scope><name>validRange</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
