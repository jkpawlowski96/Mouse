<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="geometry_8h" kind="file" language="C++">
    <compoundname>geometry.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">memory</includes>
    <includedby refid="geometry_8cpp" local="yes">geometry.cpp</includedby>
    <includedby refid="humancontroll_8h" local="yes">humancontroll.h</includedby>
    <includedby refid="map_8cpp" local="yes">map.cpp</includedby>
    <includedby refid="map_8h" local="yes">map.h</includedby>
    <includedby refid="sensor_8h" local="yes">sensor.h</includedby>
    <includedby refid="si_8h" local="yes">si.h</includedby>
    <includedby refid="simulator_8h" local="yes">simulator.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>vector</label>
      </node>
      <node id="1">
        <label>geometry.h</label>
        <link refid="geometry_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="18">
        <label>si.cpp</label>
        <link refid="si_8cpp"/>
      </node>
      <node id="17">
        <label>expander.cpp</label>
        <link refid="expander_8cpp"/>
      </node>
      <node id="14">
        <label>mouse.cpp</label>
        <link refid="mouse_8cpp"/>
      </node>
      <node id="16">
        <label>expander.h</label>
        <link refid="expander_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>humancontroll.cpp</label>
        <link refid="humancontroll_8cpp"/>
      </node>
      <node id="10">
        <label>map.cpp</label>
        <link refid="map_8cpp"/>
      </node>
      <node id="6">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="2">
        <label>geometry.cpp</label>
        <link refid="geometry_8cpp"/>
      </node>
      <node id="1">
        <label>geometry.h</label>
        <link refid="geometry_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>mainwindow.cpp</label>
        <link refid="mainwindow_8cpp"/>
      </node>
      <node id="3">
        <label>humancontroll.h</label>
        <link refid="humancontroll_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sensor.h</label>
        <link refid="sensor_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>simulator.h</label>
        <link refid="simulator_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>mainwindow.h</label>
        <link refid="mainwindow_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>si.h</label>
        <link refid="si_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>mouse.h</label>
        <link refid="mouse_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>map.h</label>
        <link refid="map_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>simulator.cpp</label>
        <link refid="simulator_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_point" prot="public">Point</innerclass>
    <innerclass refid="struct_position" prot="public">Position</innerclass>
    <innerclass refid="struct_line" prot="public">Line</innerclass>
    <innerclass refid="struct_path" prot="public">Path</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" prot="public" static="no" strong="no">
        <type></type>
        <name>Direction</name>
        <enumvalue id="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9d4d8b0b72fc2659da772d761a3c5ecb" prot="public">
          <name>Left</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa57a7edcbc04d6175683383cad5c3e0a2" prot="public">
          <name>Up</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaad48f7af8c070184f3774c8e85854eb66" prot="public">
          <name>Right</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaabcf8c79e9a5f5f9d606fb35645a0fb27" prot="public">
          <name>Down</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaac70c33bc5461cd83bab03a1fb84ed21a" prot="public">
          <name>DirectionUnnown</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para><ref refid="class_mouse" kindref="compound">Mouse</ref> direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="25" column="1" bodyfile="geometry.h" bodystart="25" bodyend="31"/>
      </memberdef>
      <memberdef kind="enum" id="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0d" prot="public" static="no" strong="no">
        <type></type>
        <name>Acces</name>
        <enumvalue id="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0dac5f8b58110236bdfd956a108f5c45730" prot="public">
          <name>Unnown</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0da4520b0236b62bed6c4529ec77b8e2543" prot="public">
          <name>Allowed</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0dae9dc4935ee596f33afde5762140c661c" prot="public">
          <name>Forbiden</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Acces to path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="37" column="1" bodyfile="geometry.h" bodystart="37" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="geometry_8h_1addb4a0e712a44b76a3764b1c3efd26df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(Point&lt; T &gt; a, Point&lt; T &gt; b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_point" kindref="compound">Point</ref> equality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="98" column="6" bodyfile="geometry.h" bodystart="98" bodyend="104"/>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1a134761b8072b4212ccfb8669c2cb0a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
        <definition>Direction operator&gt;&gt;</definition>
        <argsstring>(Point&lt; T &gt; a, Point&lt; T &gt; b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Direction to point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Direction </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="115" column="11" bodyfile="geometry.h" bodystart="115" bodyend="125"/>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaac70c33bc5461cd83bab03a1fb84ed21a" compoundref="geometry_8h" startline="30">DirectionUnnown</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaabcf8c79e9a5f5f9d606fb35645a0fb27" compoundref="geometry_8h" startline="29">Down</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9d4d8b0b72fc2659da772d761a3c5ecb" compoundref="geometry_8h" startline="26">Left</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaad48f7af8c070184f3774c8e85854eb66" compoundref="geometry_8h" startline="28">Right</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa57a7edcbc04d6175683383cad5c3e0a2" compoundref="geometry_8h" startline="27">Up</references>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1aa2fe22898f4ea697322d511bda39c3b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
        <definition>Direction operator&lt;&lt;</definition>
        <argsstring>(Point&lt; T &gt; a, Point&lt; T &gt; b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Inverse direction to point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Direction </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="136" column="1" bodyfile="geometry.h" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1a7661253987e822e52d36fefb3c9df0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
        <definition>Point&lt;T&gt; operator+</definition>
        <argsstring>(Point&lt; T &gt; a, Point&lt; T &gt; b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_point" kindref="compound">Point</ref> add do point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Point&lt;T&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="149" column="7" bodyfile="geometry.h" bodystart="149" bodyend="155"/>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1a9def6b0861cad4c16a1d9fbf456ea215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
        <definition>Point&lt;T&gt; operator-</definition>
        <argsstring>(Point&lt; T &gt; a, Point&lt; T &gt; b)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Substract point from point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Point&lt;T&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="166" column="7" bodyfile="geometry.h" bodystart="166" bodyend="172"/>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1a0c81640355b822664be04e76015c67c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
        <definition>Point&lt;T&gt; operator/</definition>
        <argsstring>(Point&lt; T &gt; a, T dev)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Devide point by number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Point&lt;T&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="183" column="7" bodyfile="geometry.h" bodystart="183" bodyend="189"/>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1a55861d592c94f64e9b6d0987f5775a2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
        <definition>Point&lt;T&gt; operator*</definition>
        <argsstring>(Point&lt; T &gt; a, T mul)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>mul</declname>
        </param>
        <briefdescription>
<para>Multiply point by number. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mul</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Point&lt;T&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="200" column="7" bodyfile="geometry.h" bodystart="200" bodyend="206"/>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1a97ff506c2ff01f3a85f3a00da85ea023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0d" kindref="member">Acces</ref></type>
        <definition>Acces operator+</definition>
        <argsstring>(Acces a, Acces b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0d" kindref="member">Acces</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0d" kindref="member">Acces</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Append acces. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Acces </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="215" column="7" bodyfile="geometry.cpp" bodystart="3" bodyend="9" declfile="geometry.h" declline="215" declcolumn="7"/>
        <references refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0da4520b0236b62bed6c4529ec77b8e2543" compoundref="geometry_8h" startline="39">Allowed</references>
        <references refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0dae9dc4935ee596f33afde5762140c661c" compoundref="geometry_8h" startline="40">Forbiden</references>
        <references refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0dac5f8b58110236bdfd956a108f5c45730" compoundref="geometry_8h" startline="38">Unnown</references>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1af6e41759087a7b09b481ec690a0292e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; double &gt;</type>
        <definition>Point&lt;double&gt; operator+</definition>
        <argsstring>(Point&lt; T &gt; i, Point&lt; double &gt; d)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; double &gt;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_point" kindref="compound">Point</ref> double and int addition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="226" column="7" bodyfile="geometry.h" bodystart="226" bodyend="228"/>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1adb6797e76c6f2f68779fd68c168a87af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T measureDistance</definition>
        <argsstring>(Point&lt; T &gt;a, Point&lt; T &gt;b)</argsstring>
        <name>measureDistance</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Distance from point to point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="237" column="3" bodyfile="geometry.h" bodystart="237" bodyend="241"/>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1a78c7e9b84a6d9b52a0717595eebf0c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; double &gt;</type>
        <definition>Point&lt;double&gt; doublePoint</definition>
        <argsstring>(Point&lt; int &gt; p)</argsstring>
        <name>doublePoint</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; int &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_point" kindref="compound">Point</ref> of double from point of int. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="249" column="7" bodyfile="geometry.cpp" bodystart="31" bodyend="33" declfile="geometry.h" declline="249" declcolumn="7"/>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
        <referencedby refid="geometry_8cpp_1a264f0b2001150ace7a2e82b20ec7a3f3" compoundref="geometry_8cpp" startline="11" endline="14">measureDistance</referencedby>
        <referencedby refid="class_mouse_1ac667b83b66fa518363a0c457dba2b392" compoundref="mouse_8cpp" startline="3" endline="9">Mouse::Mouse</referencedby>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1a264f0b2001150ace7a2e82b20ec7a3f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double measureDistance</definition>
        <argsstring>(Point&lt; double &gt;a, Point&lt; int &gt;b)</argsstring>
        <name>measureDistance</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; double &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; int &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Distance from double point to int point. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="256" column="8" bodyfile="geometry.cpp" bodystart="11" bodyend="14" declfile="geometry.h" declline="256" declcolumn="8"/>
        <references refid="geometry_8cpp_1a78c7e9b84a6d9b52a0717595eebf0c97" compoundref="geometry_8cpp" startline="31" endline="33">doublePoint</references>
        <referencedby refid="class_mouse_1adc87ac2f6bf3df7db585f913fcc2a03e" compoundref="mouse_8cpp" startline="20" endline="69">Mouse::Call</referencedby>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1a15cfcdfc2a5e2beed54d3e46ae601b5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_position" kindref="compound">Position</ref>&lt; int &gt;</type>
        <definition>Position&lt;int&gt; roundPosition</definition>
        <argsstring>(Position&lt; double &gt; pos)</argsstring>
        <name>roundPosition</name>
        <param>
          <type><ref refid="struct_position" kindref="compound">Position</ref>&lt; double &gt;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_point" kindref="compound">Point&lt;int&gt;</ref> from <ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Position&lt;int&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="264" column="10" bodyfile="geometry.cpp" bodystart="16" bodyend="21" declfile="geometry.h" declline="264" declcolumn="10"/>
        <references refid="struct_position_1a7f5e11bbcbaaef0e8aa43e464c2da154" compoundref="geometry_8h" startline="51">Position&lt; T &gt;::direction</references>
        <references refid="struct_position_1aca485c4302d36798c29923a99a5f249d" compoundref="geometry_8h" startline="50">Position&lt; T &gt;::localization</references>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
        <referencedby refid="class_mouse_1adc87ac2f6bf3df7db585f913fcc2a03e" compoundref="mouse_8cpp" startline="20" endline="69">Mouse::Call</referencedby>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1ab68f2572d521a97e8e9b7b16f429109c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; double &gt;</type>
        <definition>Point&lt;double&gt; operator+</definition>
        <argsstring>(Point&lt; double &gt; a, Point&lt; double &gt; b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; double &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; double &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref> addition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="273" column="7" bodyfile="geometry.cpp" bodystart="23" bodyend="29" declfile="geometry.h" declline="273" declcolumn="7"/>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1a0dc9f6b40d25cf8616686f98e47fdf77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
        <definition>Direction RotateDirectionLeft</definition>
        <argsstring>(Direction d)</argsstring>
        <name>RotateDirectionLeft</name>
        <param>
          <type><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Rotate direction to left. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Direction </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="281" column="11" bodyfile="geometry.cpp" bodystart="35" bodyend="45" declfile="geometry.h" declline="281" declcolumn="11"/>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaac70c33bc5461cd83bab03a1fb84ed21a" compoundref="geometry_8h" startline="30">DirectionUnnown</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaabcf8c79e9a5f5f9d606fb35645a0fb27" compoundref="geometry_8h" startline="29">Down</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9d4d8b0b72fc2659da772d761a3c5ecb" compoundref="geometry_8h" startline="26">Left</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaad48f7af8c070184f3774c8e85854eb66" compoundref="geometry_8h" startline="28">Right</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa57a7edcbc04d6175683383cad5c3e0a2" compoundref="geometry_8h" startline="27">Up</references>
        <referencedby refid="class_mouse_1adc87ac2f6bf3df7db585f913fcc2a03e" compoundref="mouse_8cpp" startline="20" endline="69">Mouse::Call</referencedby>
        <referencedby refid="class_expander_1ae87a3f6bccca98e9fa3b39b6f32b0da9" compoundref="expander_8cpp" startline="13" endline="64">Expander::Logic</referencedby>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1ab7059afff94c264c019615f0a68c96b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
        <definition>Direction RotateDirectionRight</definition>
        <argsstring>(Direction d)</argsstring>
        <name>RotateDirectionRight</name>
        <param>
          <type><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Rotate direction to right. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Direction </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="290" column="11" bodyfile="geometry.cpp" bodystart="47" bodyend="57" declfile="geometry.h" declline="290" declcolumn="11"/>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaac70c33bc5461cd83bab03a1fb84ed21a" compoundref="geometry_8h" startline="30">DirectionUnnown</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaabcf8c79e9a5f5f9d606fb35645a0fb27" compoundref="geometry_8h" startline="29">Down</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9d4d8b0b72fc2659da772d761a3c5ecb" compoundref="geometry_8h" startline="26">Left</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaad48f7af8c070184f3774c8e85854eb66" compoundref="geometry_8h" startline="28">Right</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa57a7edcbc04d6175683383cad5c3e0a2" compoundref="geometry_8h" startline="27">Up</references>
        <referencedby refid="class_mouse_1adc87ac2f6bf3df7db585f913fcc2a03e" compoundref="mouse_8cpp" startline="20" endline="69">Mouse::Call</referencedby>
        <referencedby refid="class_expander_1ae87a3f6bccca98e9fa3b39b6f32b0da9" compoundref="expander_8cpp" startline="13" endline="64">Expander::Logic</referencedby>
        <referencedby refid="geometry_8cpp_1af1435e77f75031bb0bd2296a923c9ec4" compoundref="geometry_8cpp" startline="58" endline="60">TurnAroundDirection</referencedby>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1af1435e77f75031bb0bd2296a923c9ec4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
        <definition>Direction TurnAroundDirection</definition>
        <argsstring>(Direction d)</argsstring>
        <name>TurnAroundDirection</name>
        <param>
          <type><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Rotate direction of 180 degree. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Direction </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="298" column="11" bodyfile="geometry.cpp" bodystart="58" bodyend="60" declfile="geometry.h" declline="298" declcolumn="11"/>
        <references refid="geometry_8cpp_1ab7059afff94c264c019615f0a68c96b5" compoundref="geometry_8cpp" startline="47" endline="57">RotateDirectionRight</references>
        <referencedby refid="class_expander_1ae87a3f6bccca98e9fa3b39b6f32b0da9" compoundref="expander_8cpp" startline="13" endline="64">Expander::Logic</referencedby>
      </memberdef>
      <memberdef kind="function" id="geometry_8h_1a61962e8d7ea292ce72316170122aa2fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
        <definition>Direction DirectionFromInt</definition>
        <argsstring>(int x)</argsstring>
        <name>DirectionFromInt</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Get Direction form int representation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Direction </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="geometry.h" line="306" column="11" bodyfile="geometry.cpp" bodystart="62" bodyend="71" declfile="geometry.h" declline="306" declcolumn="11"/>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaabcf8c79e9a5f5f9d606fb35645a0fb27" compoundref="geometry_8h" startline="29">Down</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9d4d8b0b72fc2659da772d761a3c5ecb" compoundref="geometry_8h" startline="26">Left</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaad48f7af8c070184f3774c8e85854eb66" compoundref="geometry_8h" startline="28">Right</references>
        <references refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa57a7edcbc04d6175683383cad5c3e0a2" compoundref="geometry_8h" startline="27">Up</references>
        <referencedby refid="class_expander_1ae87a3f6bccca98e9fa3b39b6f32b0da9" compoundref="expander_8cpp" startline="13" endline="64">Expander::Logic</referencedby>
        <referencedby refid="class_expander_1aff009bd0ad90f2d37dc9bc803b315167" compoundref="expander_8cpp" startline="74" endline="109">Expander::NearestPath</referencedby>
        <referencedby refid="class_expander_1a5c9fd9863c6b709d8ad6abad05a8c073" compoundref="expander_8cpp" startline="111" endline="147">Expander::NearestPathToUnnown</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>GEOMETRY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GEOMETRY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="15" refid="struct_point" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_point" kindref="compound">Point</ref>{</highlight></codeline>
<codeline lineno="16" refid="struct_point_1a401d07562afaf0079121218025e66b76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref>,y;</highlight></codeline>
<codeline lineno="17" refid="struct_point_1a6c9dfecb50ffd2084df4d0c423ef0c07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_point_1a6c9dfecb50ffd2084df4d0c423ef0c07" kindref="member">Point</ref>(T<sp/>_x,<sp/>T<sp/>_y):<sp/>x(_x),y(_y){};</highlight></codeline>
<codeline lineno="18" refid="struct_point_1aea76b1130f1a203722d8f2254ced8e66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_point_1aea76b1130f1a203722d8f2254ced8e66" kindref="member">Point</ref>(){};</highlight></codeline>
<codeline lineno="19"><highlight class="normal">};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref>{</highlight></codeline>
<codeline lineno="26" refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9d4d8b0b72fc2659da772d761a3c5ecb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9d4d8b0b72fc2659da772d761a3c5ecb" kindref="member">Left</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="27" refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa57a7edcbc04d6175683383cad5c3e0a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa57a7edcbc04d6175683383cad5c3e0a2" kindref="member">Up</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="28" refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaad48f7af8c070184f3774c8e85854eb66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaad48f7af8c070184f3774c8e85854eb66" kindref="member">Right</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="29" refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaabcf8c79e9a5f5f9d606fb35645a0fb27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaabcf8c79e9a5f5f9d606fb35645a0fb27" kindref="member">Down</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaac70c33bc5461cd83bab03a1fb84ed21a" kindref="member">DirectionUnnown</ref><sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="31" refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaac70c33bc5461cd83bab03a1fb84ed21a" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0d" kindref="member">Acces</ref>{</highlight></codeline>
<codeline lineno="38" refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0dac5f8b58110236bdfd956a108f5c45730" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0dac5f8b58110236bdfd956a108f5c45730" kindref="member">Unnown</ref><sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="39" refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0da4520b0236b62bed6c4529ec77b8e2543" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0da4520b0236b62bed6c4529ec77b8e2543" kindref="member">Allowed</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0dae9dc4935ee596f33afde5762140c661c" kindref="member">Forbiden</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="41" refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0dae9dc4935ee596f33afde5762140c661c" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="49" refid="struct_position" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_position" kindref="compound">Position</ref>{</highlight></codeline>
<codeline lineno="50" refid="struct_position_1aca485c4302d36798c29923a99a5f249d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/><ref refid="struct_position_1aca485c4302d36798c29923a99a5f249d" kindref="member">localization</ref>;</highlight></codeline>
<codeline lineno="51" refid="struct_position_1a7f5e11bbcbaaef0e8aa43e464c2da154" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/><ref refid="struct_position_1a7f5e11bbcbaaef0e8aa43e464c2da154" kindref="member">direction</ref>;</highlight></codeline>
<codeline lineno="52" refid="struct_position_1a88fa59db441fdb549c11d96a765ab659" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_position_1a88fa59db441fdb549c11d96a765ab659" kindref="member">Position</ref>(){direction=<ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa57a7edcbc04d6175683383cad5c3e0a2" kindref="member">Up</ref>;}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="61" refid="struct_line" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_line" kindref="compound">Line</ref>{</highlight></codeline>
<codeline lineno="62" refid="struct_line_1a1e19fb73f0a7f3f012487d2062d5a1d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/><ref refid="struct_line_1a1e19fb73f0a7f3f012487d2062d5a1d0" kindref="member">a</ref>,<sp/>b;</highlight></codeline>
<codeline lineno="63" refid="struct_line_1a3da70761543c069ad65b4aff6bfb5884" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_line_1a3da70761543c069ad65b4aff6bfb5884" kindref="member">Line</ref>(<ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>_a,<sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref>_b):a(_a),<sp/>b(_b){}</highlight></codeline>
<codeline lineno="64" refid="struct_line_1aa6a80df90da15782ca88889ef9c8dd51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_line_1aa6a80df90da15782ca88889ef9c8dd51" kindref="member">Line</ref>(){}</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="73" refid="struct_path" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_path" kindref="compound">Path</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75" refid="struct_path_1ab5a37001eb09cf5c7dfb43338b46fd17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/><ref refid="struct_path_1ab5a37001eb09cf5c7dfb43338b46fd17" kindref="member">localization</ref>;</highlight></codeline>
<codeline lineno="76" refid="struct_path_1a3307f8d6b275f17ff24007e48a834c8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0d" kindref="member">Acces</ref><sp/>acces[4];</highlight></codeline>
<codeline lineno="77" refid="struct_path_1a88368b60afc1c5a9bf3eeb4767e32d8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;Path&gt;<sp/>next[4];</highlight></codeline>
<codeline lineno="78" refid="struct_path_1a41aad1302e0345f9e8aa3f41e498c698" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_path_1a41aad1302e0345f9e8aa3f41e498c698" kindref="member">Path</ref>(<ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0d" kindref="member">Acces</ref><sp/>a=<ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0dae9dc4935ee596f33afde5762140c661c" kindref="member">Forbiden</ref>){acces[0]=a;<sp/>acces[1]=a;<sp/>acces[2]=a,<sp/>acces[3]=a;}</highlight></codeline>
<codeline lineno="79" refid="struct_path_1a376992afdb22907502773eded446b323" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_path_1a376992afdb22907502773eded446b323" kindref="member">append</ref>(<ref refid="struct_path" kindref="compound">Path&lt;T&gt;</ref><sp/>_path){</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;4;i++){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acces[i]<sp/>=<sp/>acces[i]<sp/>+<sp/>_path.<ref refid="struct_path_1a3307f8d6b275f17ff24007e48a834c8c" kindref="member">acces</ref>[i];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_path.<ref refid="struct_path_1a88368b60afc1c5a9bf3eeb4767e32d8c" kindref="member">next</ref>[i]!=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next[i]=_path.<ref refid="struct_path_1a88368b60afc1c5a9bf3eeb4767e32d8c" kindref="member">next</ref>[i];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="98" refid="geometry_8h_1addb4a0e712a44b76a3764b1c3efd26df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="geometry_8h_1addb4a0e712a44b76a3764b1c3efd26df" kindref="member">operator==</ref>(<ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>a,<sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>b)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((a.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref>==b.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref>)&amp;&amp;(a.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref>==b.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref>))</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="115" refid="geometry_8h_1a134761b8072b4212ccfb8669c2cb0a86" refkind="member"><highlight class="normal"><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/><ref refid="geometry_8h_1a134761b8072b4212ccfb8669c2cb0a86" kindref="member">operator&gt;&gt;</ref>(<ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>a,<sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>b){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref><sp/>&gt;<sp/>a.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaad48f7af8c070184f3774c8e85854eb66" kindref="member">Right</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref><sp/>&lt;<sp/>a.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa9d4d8b0b72fc2659da772d761a3c5ecb" kindref="member">Left</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref><sp/>&gt;<sp/>a.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaa57a7edcbc04d6175683383cad5c3e0a2" kindref="member">Up</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(b.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref><sp/>&lt;<sp/>a.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaabcf8c79e9a5f5f9d606fb35645a0fb27" kindref="member">Down</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aaac70c33bc5461cd83bab03a1fb84ed21a" kindref="member">DirectionUnnown</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="136" refid="geometry_8h_1aa2fe22898f4ea697322d511bda39c3b6" refkind="member"><highlight class="normal"><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/><ref refid="geometry_8h_1aa2fe22898f4ea697322d511bda39c3b6" kindref="member">operator&lt;&lt;</ref>(<ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>a,<sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>b){</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b&gt;&gt;a;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="149" refid="geometry_8h_1a7661253987e822e52d36fefb3c9df0f6" refkind="member"><highlight class="normal"><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/><ref refid="geometry_8h_1a7661253987e822e52d36fefb3c9df0f6" kindref="member">operator+</ref>(<ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>a,<sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>b)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>res;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>res.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref><sp/>=<sp/>a.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref><sp/>+<sp/>b.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>res.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref><sp/>=<sp/>a.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref><sp/>+<sp/>b.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="166" refid="geometry_8h_1a9def6b0861cad4c16a1d9fbf456ea215" refkind="member"><highlight class="normal"><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/><ref refid="geometry_8h_1a9def6b0861cad4c16a1d9fbf456ea215" kindref="member">operator-</ref>(<ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>a,<sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>b)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>res;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>res.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref><sp/>=<sp/>a.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref><sp/>-<sp/>b.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>res.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref><sp/>=<sp/>a.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref><sp/>-<sp/>b.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="183" refid="geometry_8h_1a0c81640355b822664be04e76015c67c8" refkind="member"><highlight class="normal"><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/><ref refid="geometry_8h_1a0c81640355b822664be04e76015c67c8" kindref="member">operator/</ref>(<ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>a,<sp/>T<sp/>dev)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>res;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>res.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref><sp/>=<sp/>(T)(a.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref>/dev);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>res.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref><sp/>=<sp/>(T)(a.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref>/dev);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="200" refid="geometry_8h_1a55861d592c94f64e9b6d0987f5775a2b" refkind="member"><highlight class="normal"><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/><ref refid="geometry_8h_1a55861d592c94f64e9b6d0987f5775a2b" kindref="member">operator*</ref>(<ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>a,<sp/>T<sp/>mul)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>res;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>res.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref><sp/>=<sp/>(T)(a.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref>*mul);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>res.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref><sp/>=<sp/>(T)(a.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref>*mul);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0d" kindref="member">Acces</ref><sp/><ref refid="geometry_8h_1a7661253987e822e52d36fefb3c9df0f6" kindref="member">operator+</ref>(<ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0d" kindref="member">Acces</ref><sp/>a,<sp/><ref refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0d" kindref="member">Acces</ref><sp/>b);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="226" refid="geometry_8h_1af6e41759087a7b09b481ec690a0292e9" refkind="member"><highlight class="normal"><ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref><sp/><ref refid="geometry_8h_1a7661253987e822e52d36fefb3c9df0f6" kindref="member">operator+</ref>(<ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>i,<sp/><ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref><sp/>d){</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)i.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref>+d.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref>,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)i.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref>+d.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="237" refid="geometry_8h_1adb6797e76c6f2f68779fd68c168a87af" refkind="member"><highlight class="normal">T<sp/><ref refid="geometry_8h_1adb6797e76c6f2f68779fd68c168a87af" kindref="member">measureDistance</ref>(<ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref>a,<sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref>b){</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_point" kindref="compound">Point&lt;T&gt;</ref><sp/>d<sp/>=<sp/>a-b;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>_d<sp/>=<sp/>abs(d.<ref refid="struct_point_1a401d07562afaf0079121218025e66b76" kindref="member">x</ref>)<sp/>+<sp/>abs(d.<ref refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_d;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref><sp/><ref refid="geometry_8h_1a78c7e9b84a6d9b52a0717595eebf0c97" kindref="member">doublePoint</ref>(<ref refid="struct_point" kindref="compound">Point&lt;int&gt;</ref><sp/>p);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="geometry_8h_1adb6797e76c6f2f68779fd68c168a87af" kindref="member">measureDistance</ref>(<ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref>a,<sp/><ref refid="struct_point" kindref="compound">Point&lt;int&gt;</ref>b);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><ref refid="struct_position" kindref="compound">Position&lt;int&gt;</ref><sp/><ref refid="geometry_8h_1a15cfcdfc2a5e2beed54d3e46ae601b5e" kindref="member">roundPosition</ref>(<ref refid="struct_position" kindref="compound">Position&lt;double&gt;</ref><sp/>pos);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref><sp/><ref refid="geometry_8h_1a7661253987e822e52d36fefb3c9df0f6" kindref="member">operator+</ref>(<ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref><sp/>a,<sp/><ref refid="struct_point" kindref="compound">Point&lt;double&gt;</ref><sp/>b);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/><ref refid="geometry_8h_1a0dc9f6b40d25cf8616686f98e47fdf77" kindref="member">RotateDirectionLeft</ref>(<ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/>d);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/><ref refid="geometry_8h_1ab7059afff94c264c019615f0a68c96b5" kindref="member">RotateDirectionRight</ref>(<ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/>d);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/><ref refid="geometry_8h_1af1435e77f75031bb0bd2296a923c9ec4" kindref="member">TurnAroundDirection</ref>(<ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/>d);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><ref refid="geometry_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/><ref refid="geometry_8h_1a61962e8d7ea292ce72316170122aa2fb" kindref="member">DirectionFromInt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>GEOMETRY_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="geometry.h"/>
  </compounddef>
</doxygen>
