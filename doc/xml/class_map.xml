<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_map" kind="class" language="C++" prot="public">
    <compoundname>Map</compoundname>
    <includes refid="map_8h" local="no">map.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_map_1a6bf2ea7d8cdcc7435b58e5ac2413420e" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="struct_path" kindref="compound">Path</ref>&lt; int &gt; &gt;</type>
        <definition>vector&lt;Path&lt;int&gt; &gt; Map::mapPaths</definition>
        <argsstring></argsstring>
        <name>mapPaths</name>
        <briefdescription>
<para>list of known paths in map </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="50" column="12" bodyfile="map.h" bodystart="50" bodyend="-1"/>
        <referencedby refid="class_map_1a860494855f77aac9fbeaf5d6a5d4d121" compoundref="map_8cpp" startline="75" endline="81">FindPath</referencedby>
        <referencedby refid="class_map_1ab6ea163356eaeca08efc6d3570a4610d" compoundref="map_8cpp" startline="96" endline="114">InsertPaths</referencedby>
        <referencedby refid="class_map_1a308c016cec645bd08cfa7fa37288217b" compoundref="map_8cpp" startline="20" endline="72">Map</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_map_1ac6831175a9f1884245a24798bb1889d5" prot="public" static="no" mutable="no">
        <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; int &gt;</type>
        <definition>Point&lt;int&gt; Map::mapStart</definition>
        <argsstring></argsstring>
        <name>mapStart</name>
        <briefdescription>
<para>map start point (x,y) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="55" column="11" bodyfile="map.h" bodystart="55" bodyend="-1"/>
        <referencedby refid="class_map_1a308c016cec645bd08cfa7fa37288217b" compoundref="map_8cpp" startline="20" endline="72">Map</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_map_1a278e41b54d4aaf606bd5170e996f84da" prot="public" static="no" mutable="no">
        <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; int &gt;</type>
        <definition>Point&lt;int&gt; Map::mapSize</definition>
        <argsstring></argsstring>
        <name>mapSize</name>
        <briefdescription>
<para>map size (w,h) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="60" column="11" bodyfile="map.h" bodystart="60" bodyend="-1"/>
        <referencedby refid="class_map_1a308c016cec645bd08cfa7fa37288217b" compoundref="map_8cpp" startline="20" endline="72">Map</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_map_1a05cf7f3f41bd3db34bb1e84e7554afe4" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="struct_point" kindref="compound">Point</ref>&lt; int &gt; &gt;</type>
        <definition>vector&lt;Point&lt;int&gt; &gt; Map::mapStop</definition>
        <argsstring></argsstring>
        <name>mapStop</name>
        <briefdescription>
<para>vector ofmap stop points (x,y) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="65" column="12" bodyfile="map.h" bodystart="65" bodyend="-1"/>
        <referencedby refid="class_map_1a308c016cec645bd08cfa7fa37288217b" compoundref="map_8cpp" startline="20" endline="72">Map</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_map_1a308c016cec645bd08cfa7fa37288217b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Map::Map</definition>
        <argsstring>(string mapFilePath)</argsstring>
        <name>Map</name>
        <param>
          <type>string</type>
          <declname>mapFilePath</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="class_map" kindref="compound">Map</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mapFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="28" column="5" bodyfile="map.cpp" bodystart="20" bodyend="72"/>
        <references refid="class_map_1ab6ea163356eaeca08efc6d3570a4610d" compoundref="map_8cpp" startline="96" endline="114">InsertPaths</references>
        <references refid="map_8h_1a36d2cfbe2f5e5149981862c05f18b99b" compoundref="map_8h" startline="14">MAP_PATHS_SIGN</references>
        <references refid="map_8h_1af13456759f34c6e6de4534edc715528f" compoundref="map_8h" startline="11">MAP_SIZE_SIGN</references>
        <references refid="map_8h_1aba8aa35bacac1357c33193a0fd2ec264" compoundref="map_8h" startline="12">MAP_START_SIGN</references>
        <references refid="map_8h_1a804357ab75f2069b9c4576ff63f51ecb" compoundref="map_8h" startline="13">MAP_STOP_SIGN</references>
        <references refid="class_map_1a6bf2ea7d8cdcc7435b58e5ac2413420e" compoundref="map_8h" startline="50">mapPaths</references>
        <references refid="class_map_1a278e41b54d4aaf606bd5170e996f84da" compoundref="map_8h" startline="60">mapSize</references>
        <references refid="class_map_1ac6831175a9f1884245a24798bb1889d5" compoundref="map_8h" startline="55">mapStart</references>
        <references refid="class_map_1a05cf7f3f41bd3db34bb1e84e7554afe4" compoundref="map_8h" startline="65">mapStop</references>
      </memberdef>
      <memberdef kind="function" id="class_map_1a0f5ad0fd4563497b4214038cbca8b582" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Map::Map</definition>
        <argsstring>()</argsstring>
        <name>Map</name>
        <briefdescription>
<para>Construct a new <ref refid="class_map" kindref="compound">Map</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="33" column="5" bodyfile="map.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1aa403fbe09394ccf39747588f5168e3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Map::~Map</definition>
        <argsstring>()</argsstring>
        <name>~Map</name>
        <briefdescription>
<para>Destroy the <ref refid="class_map" kindref="compound">Map</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="38" column="5" bodyfile="map.cpp" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_map_1a3a77d131081f7ab04f66c451b9737538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_path" kindref="compound">Path</ref>&lt; int &gt;</type>
        <definition>const Path&lt; int &gt; Map::FindPathConst</definition>
        <argsstring>(Point&lt; int &gt; localization)</argsstring>
        <name>FindPathConst</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; int &gt;</type>
          <declname>localization</declname>
        </param>
        <briefdescription>
<para>Get const path by localization. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localization</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const Path&lt;int&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="45" column="16" bodyfile="map.cpp" bodystart="196" bodyend="200"/>
        <references refid="class_map_1a860494855f77aac9fbeaf5d6a5d4d121" compoundref="map_8cpp" startline="75" endline="81">FindPath</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_map_1a860494855f77aac9fbeaf5d6a5d4d121" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>shared_ptr&lt; <ref refid="struct_path" kindref="compound">Path</ref>&lt; T &gt; &gt;</type>
        <definition>shared_ptr&lt; Path&lt; T &gt; &gt; Map::FindPath</definition>
        <argsstring>(Point&lt; T &gt; localization)</argsstring>
        <name>FindPath</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>localization</declname>
        </param>
        <briefdescription>
<para>Get path ptr by localization. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localization</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>shared_ptr&lt;Path&lt;T&gt;&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="76" column="16" bodyfile="map.cpp" bodystart="75" bodyend="81"/>
        <references refid="class_map_1a6bf2ea7d8cdcc7435b58e5ac2413420e" compoundref="map_8h" startline="50">mapPaths</references>
        <referencedby refid="class_map_1a3a77d131081f7ab04f66c451b9737538" compoundref="map_8cpp" startline="196" endline="200">FindPathConst</referencedby>
        <referencedby refid="class_map_1ad45eb0a8f95e00370fee56d29afcc333" compoundref="map_8cpp" startline="84" endline="92">FindPaths</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_map_1ad45eb0a8f95e00370fee56d29afcc333" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>vector&lt; shared_ptr&lt; <ref refid="struct_path" kindref="compound">Path</ref>&lt; T &gt; &gt; &gt;</type>
        <definition>vector&lt; shared_ptr&lt; Path&lt; T &gt; &gt; &gt; Map::FindPaths</definition>
        <argsstring>(vector&lt; Point&lt; T &gt;&gt; localizations)</argsstring>
        <name>FindPaths</name>
        <param>
          <type>vector&lt; <ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;&gt;</type>
          <declname>localizations</declname>
        </param>
        <briefdescription>
<para>Get vector of paths by localizations in vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localizations</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vector&lt;shared_ptr&lt;Path&lt;T&gt;&gt;&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="85" column="12" bodyfile="map.cpp" bodystart="84" bodyend="92"/>
        <references refid="class_map_1a860494855f77aac9fbeaf5d6a5d4d121" compoundref="map_8cpp" startline="75" endline="81">FindPath</references>
        <referencedby refid="class_map_1a610b39d483eea9faae04ba337daab7fa" compoundref="map_8cpp" startline="182" endline="194">UpdateConnections</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_map_1ab6ea163356eaeca08efc6d3570a4610d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Map::InsertPaths</definition>
        <argsstring>(vector&lt; Path&lt; int &gt;&gt; newPaths)</argsstring>
        <name>InsertPaths</name>
        <param>
          <type>vector&lt; <ref refid="struct_path" kindref="compound">Path</ref>&lt; int &gt;&gt;</type>
          <declname>newPaths</declname>
        </param>
        <briefdescription>
<para>Insert new path in structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newPaths</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="91" column="10" bodyfile="map.cpp" bodystart="96" bodyend="114"/>
        <references refid="class_map_1a6bf2ea7d8cdcc7435b58e5ac2413420e" compoundref="map_8h" startline="50">mapPaths</references>
        <referencedby refid="class_map_1a308c016cec645bd08cfa7fa37288217b" compoundref="map_8cpp" startline="20" endline="72">Map</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_map_1a77fec3d1886703ce694bf20ebd05782e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>vector&lt; <ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt; &gt;</type>
        <definition>vector&lt; Point&lt; T &gt; &gt; Map::FindNearLocalizations</definition>
        <argsstring>(Point&lt; T &gt; localization)</argsstring>
        <name>FindNearLocalizations</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
          <declname>localization</declname>
        </param>
        <briefdescription>
<para>Find near localizations of specyfic localization (x,y) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>localization</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>vector&lt;Point&lt;T&gt;&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="100" column="12" bodyfile="map.cpp" bodystart="8" bodyend="18"/>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
      </memberdef>
      <memberdef kind="function" id="class_map_1a610b39d483eea9faae04ba337daab7fa" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Map::UpdateConnections</definition>
        <argsstring>(shared_ptr&lt; Path&lt; int &gt;&gt; path)</argsstring>
        <name>UpdateConnections</name>
        <param>
          <type>shared_ptr&lt; <ref refid="struct_path" kindref="compound">Path</ref>&lt; int &gt;&gt;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Update/refresh connections in specyfic paths. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="106" column="10" bodyfile="map.cpp" bodystart="182" bodyend="194"/>
        <references refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0da4520b0236b62bed6c4529ec77b8e2543" compoundref="geometry_8h" startline="39">Allowed</references>
        <references refid="class_map_1ad45eb0a8f95e00370fee56d29afcc333" compoundref="map_8cpp" startline="84" endline="92">FindPaths</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_map_1afd92cd2f6e36fc50a8b5c8f9d9078291" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>vector&lt; <ref refid="struct_path" kindref="compound">Path</ref>&lt; T &gt; &gt;</type>
        <definition>vector&lt; Path&lt; T &gt; &gt; Map::GetPaths</definition>
        <argsstring>(string line)</argsstring>
        <name>GetPaths</name>
        <param>
          <type>string</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="111" column="12" bodyfile="map.cpp" bodystart="141" bodyend="164"/>
        <references refid="geometry_8h_1a65cbcc4c6a0978be9e0985af854d7a0da4520b0236b62bed6c4529ec77b8e2543" compoundref="geometry_8h" startline="39">Allowed</references>
        <references refid="struct_path_1ab5a37001eb09cf5c7dfb43338b46fd17" compoundref="geometry_8h" startline="75">Path&lt; T &gt;::localization</references>
        <references refid="class_map_1ac352f0fd62774d4da14c8626dcee5d6c" compoundref="map_8cpp" startline="129" endline="138">SplitText</references>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
      </memberdef>
      <memberdef kind="function" id="class_map_1ac352f0fd62774d4da14c8626dcee5d6c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt; string &gt; Map::SplitText</definition>
        <argsstring>(string text, char delimiter)</argsstring>
        <name>SplitText</name>
        <param>
          <type>string</type>
          <declname>text</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delimiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="112" column="12" bodyfile="map.cpp" bodystart="129" bodyend="138"/>
        <referencedby refid="class_map_1afd92cd2f6e36fc50a8b5c8f9d9078291" compoundref="map_8cpp" startline="141" endline="164">GetPaths</referencedby>
        <referencedby refid="class_map_1a3b9c2edd63fe7824d08753bb4538afaf" compoundref="map_8cpp" startline="121" endline="127">GetPoint</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_map_1a3b9c2edd63fe7824d08753bb4538afaf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_point" kindref="compound">Point</ref>&lt; T &gt;</type>
        <definition>Point&lt; T &gt; Map::GetPoint</definition>
        <argsstring>(string text, char delimiter)</argsstring>
        <name>GetPoint</name>
        <param>
          <type>string</type>
          <declname>text</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delimiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="map.h" line="114" column="11" bodyfile="map.cpp" bodystart="121" bodyend="127"/>
        <references refid="class_map_1ac352f0fd62774d4da14c8626dcee5d6c" compoundref="map_8cpp" startline="129" endline="138">SplitText</references>
        <references refid="struct_point_1a401d07562afaf0079121218025e66b76" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::x</references>
        <references refid="struct_point_1a65146418a33ebb2cd9acb85cade60ac9" compoundref="geometry_8h" startline="16">Point&lt; T &gt;::y</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_map" kindref="compound">Map</ref> representation in mucromouse simulator. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>Point&lt; int &gt;</label>
        <link refid="struct_point"/>
      </node>
      <node id="1">
        <label>Map</label>
        <link refid="class_map"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+mapSize</edgelabel>
          <edgelabel>+mapStart</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="map.h" line="20" column="1" bodyfile="map.h" bodystart="21" bodyend="118"/>
    <listofallmembers>
      <member refid="class_map_1a77fec3d1886703ce694bf20ebd05782e" prot="protected" virt="non-virtual"><scope>Map</scope><name>FindNearLocalizations</name></member>
      <member refid="class_map_1a860494855f77aac9fbeaf5d6a5d4d121" prot="protected" virt="non-virtual"><scope>Map</scope><name>FindPath</name></member>
      <member refid="class_map_1a3a77d131081f7ab04f66c451b9737538" prot="public" virt="non-virtual"><scope>Map</scope><name>FindPathConst</name></member>
      <member refid="class_map_1ad45eb0a8f95e00370fee56d29afcc333" prot="protected" virt="non-virtual"><scope>Map</scope><name>FindPaths</name></member>
      <member refid="class_map_1afd92cd2f6e36fc50a8b5c8f9d9078291" prot="private" virt="non-virtual"><scope>Map</scope><name>GetPaths</name></member>
      <member refid="class_map_1a3b9c2edd63fe7824d08753bb4538afaf" prot="private" virt="non-virtual"><scope>Map</scope><name>GetPoint</name></member>
      <member refid="class_map_1ab6ea163356eaeca08efc6d3570a4610d" prot="protected" virt="non-virtual"><scope>Map</scope><name>InsertPaths</name></member>
      <member refid="class_map_1a308c016cec645bd08cfa7fa37288217b" prot="public" virt="non-virtual"><scope>Map</scope><name>Map</name></member>
      <member refid="class_map_1a0f5ad0fd4563497b4214038cbca8b582" prot="public" virt="non-virtual"><scope>Map</scope><name>Map</name></member>
      <member refid="class_map_1a6bf2ea7d8cdcc7435b58e5ac2413420e" prot="public" virt="non-virtual"><scope>Map</scope><name>mapPaths</name></member>
      <member refid="class_map_1a278e41b54d4aaf606bd5170e996f84da" prot="public" virt="non-virtual"><scope>Map</scope><name>mapSize</name></member>
      <member refid="class_map_1ac6831175a9f1884245a24798bb1889d5" prot="public" virt="non-virtual"><scope>Map</scope><name>mapStart</name></member>
      <member refid="class_map_1a05cf7f3f41bd3db34bb1e84e7554afe4" prot="public" virt="non-virtual"><scope>Map</scope><name>mapStop</name></member>
      <member refid="class_map_1ac352f0fd62774d4da14c8626dcee5d6c" prot="private" virt="non-virtual"><scope>Map</scope><name>SplitText</name></member>
      <member refid="class_map_1a610b39d483eea9faae04ba337daab7fa" prot="protected" virt="non-virtual"><scope>Map</scope><name>UpdateConnections</name></member>
      <member refid="class_map_1aa403fbe09394ccf39747588f5168e3b2" prot="public" virt="non-virtual"><scope>Map</scope><name>~Map</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
