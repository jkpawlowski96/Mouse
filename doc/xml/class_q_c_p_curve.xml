<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_q_c_p_curve" kind="class" language="C++" prot="public">
    <compoundname>QCPCurve</compoundname>
    <basecompoundref refid="class_q_c_p_abstract_plottable" prot="public" virt="non-virtual">QCPAbstractPlottable</basecompoundref>
    <includes refid="qcustomplot_8h" local="no">qcustomplot.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1" prot="public" static="no" strong="no">
        <type></type>
        <name>LineStyle</name>
        <enumvalue id="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1aec1601a191cdf0b4e761c4c66092cc48" prot="public">
          <name>lsNone</name>
          <briefdescription>
<para>No line is drawn between data points (e.g. only scatters) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1ade5822ce6fbf131d3df131795c2e1003" prot="public">
          <name>lsLine</name>
          <briefdescription>
<para>Data points are connected with a straight line. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines how the curve&apos;s line is represented visually in the plot. The line is drawn with the current pen of the curve (<ref refid="class_q_c_p_abstract_plottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" kindref="member">setPen</ref>). <simplesect kind="see"><para><ref refid="class_q_c_p_curve_1a4a377ec863ff81a1875c3094a6177c19" kindref="member">setLineStyle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2673" column="3" bodyfile="qcustomplot.h" bodystart="2673" bodyend="2675"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" prot="protected" static="no" mutable="no">
        <type><ref refid="qcustomplot_8h_1a444d37ec9cb2951b3a7fe443c34d1658" kindref="member">QCPCurveDataMap</ref> *</type>
        <definition>QCPCurveDataMap* QCPCurve::mData</definition>
        <argsstring></argsstring>
        <name>mData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2708" column="19" bodyfile="qcustomplot.h" bodystart="2708" bodyend="-1"/>
        <referencedby refid="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" compoundref="qcustomplot_8cpp" startline="16928" endline="16931">addData</referencedby>
        <referencedby refid="class_q_c_p_curve_1ae0462c61dbfbac07db0736ec64110241" compoundref="qcustomplot_8cpp" startline="17051" endline="17054">clearData</referencedby>
        <referencedby refid="class_q_c_p_curve_1a2361302d2fc6ec669849bd3bca00c4b2" compoundref="qcustomplot_8cpp" startline="17071" endline="17156">draw</referencedby>
        <referencedby refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" compoundref="qcustomplot_8cpp" startline="17221" endline="17298">getCurveData</referencedby>
        <referencedby refid="class_q_c_p_curve_1a1b24b1384d72862e8294688501ffa01d" compoundref="qcustomplot_8cpp" startline="17943" endline="17976">getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_curve_1a12fcfce09ffa9965b3e01555d968d378" compoundref="qcustomplot_8cpp" startline="17979" endline="18012">getValueRange</referencedby>
        <referencedby refid="class_q_c_p_curve_1adc3ab8051946f9097cdf7c0707ef1a25" compoundref="qcustomplot_8cpp" startline="17915" endline="17940">pointDistance</referencedby>
        <referencedby refid="class_q_c_p_curve_1a36de58e2652b3fa47bdf9187d421d3ce" compoundref="qcustomplot_8cpp" startline="16812" endline="16827">QCPCurve</referencedby>
        <referencedby refid="class_q_c_p_curve_1ad45bb5479be799163028ef2b776f7221" compoundref="qcustomplot_8cpp" startline="17024" endline="17031">removeData</referencedby>
        <referencedby refid="class_q_c_p_curve_1a0365cb947c4e6d405ee22e00191d5f52" compoundref="qcustomplot_8cpp" startline="17009" endline="17015">removeDataAfter</referencedby>
        <referencedby refid="class_q_c_p_curve_1af6f4284fbc2f34e676f24dce03c34fe5" compoundref="qcustomplot_8cpp" startline="16998" endline="17003">removeDataBefore</referencedby>
        <referencedby refid="class_q_c_p_curve_1a87a9fb34a2a48dcae4c1245ada235e7d" compoundref="qcustomplot_8cpp" startline="17057" endline="17068">selectTest</referencedby>
        <referencedby refid="class_q_c_p_curve_1a631ac886708460013b30052f49cbc9da" compoundref="qcustomplot_8cpp" startline="16841" endline="16856">setData</referencedby>
        <referencedby refid="class_q_c_p_curve_1a99ee5136754884a220cc0bcacfe419a3" compoundref="qcustomplot_8cpp" startline="16829" endline="16832">~QCPCurve</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref></type>
        <definition>QCPScatterStyle QCPCurve::mScatterStyle</definition>
        <argsstring></argsstring>
        <name>mScatterStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2709" column="19" bodyfile="qcustomplot.h" bodystart="2709" bodyend="-1"/>
        <referencedby refid="class_q_c_p_curve_1a2361302d2fc6ec669849bd3bca00c4b2" compoundref="qcustomplot_8cpp" startline="17071" endline="17156">draw</referencedby>
        <referencedby refid="class_q_c_p_curve_1acccc86e9f496bb0392529f59f3a69dbc" compoundref="qcustomplot_8cpp" startline="17159" endline="17191">drawLegendIcon</referencedby>
        <referencedby refid="class_q_c_p_curve_1a00d17c020796ac84c84f881201c2ed10" compoundref="qcustomplot_8cpp" startline="17198" endline="17206">drawScatterPlot</referencedby>
        <referencedby refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" compoundref="qcustomplot_8cpp" startline="17221" endline="17298">getCurveData</referencedby>
        <referencedby refid="class_q_c_p_curve_1a55e43b44709bf50a35500644988aa706" compoundref="qcustomplot_8cpp" startline="16907" endline="16910">setScatterStyle</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_curve_1ae1f35ae2b15aee8e15bcdfec5be95156" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1" kindref="member">LineStyle</ref></type>
        <definition>LineStyle QCPCurve::mLineStyle</definition>
        <argsstring></argsstring>
        <name>mLineStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2710" column="13" bodyfile="qcustomplot.h" bodystart="2710" bodyend="-1"/>
        <referencedby refid="class_q_c_p_curve_1a2361302d2fc6ec669849bd3bca00c4b2" compoundref="qcustomplot_8cpp" startline="17071" endline="17156">draw</referencedby>
        <referencedby refid="class_q_c_p_curve_1acccc86e9f496bb0392529f59f3a69dbc" compoundref="qcustomplot_8cpp" startline="17159" endline="17191">drawLegendIcon</referencedby>
        <referencedby refid="class_q_c_p_curve_1a4a377ec863ff81a1875c3094a6177c19" compoundref="qcustomplot_8cpp" startline="16919" endline="16922">setLineStyle</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_q_c_p_curve_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCustomPlot</definition>
        <argsstring></argsstring>
        <name>QCustomPlot</name>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2731" column="3" bodyfile="qcustomplot.h" bodystart="2731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_curve_1a8429035e7adfbd7f05805a6530ad5e3b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCPLegend</definition>
        <argsstring></argsstring>
        <name>QCPLegend</name>
        <param>
          <type><ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2732" column="3" bodyfile="qcustomplot.h" bodystart="2732" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_curve_1a36de58e2652b3fa47bdf9187d421d3ce" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPCurve::QCPCurve</definition>
        <argsstring>(QCPAxis *keyAxis, QCPAxis *valueAxis)</argsstring>
        <name>QCPCurve</name>
        <param>
          <type><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref> *</type>
          <declname>keyAxis</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref> *</type>
          <declname>valueAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a curve which uses <emphasis>keyAxis</emphasis> as its key axis (&quot;x&quot;) and <emphasis>valueAxis</emphasis> as its value axis (&quot;y&quot;). <emphasis>keyAxis</emphasis> and <emphasis>valueAxis</emphasis> must reside in the same <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> instance and not have the same orientation. If either of these restrictions is violated, a corresponding message is printed to the debug output (qDebug), the construction is not aborted, though.</para>
<para>The constructed <ref refid="class_q_c_p_curve" kindref="compound">QCPCurve</ref> can be added to the plot with <ref refid="class_q_custom_plot_1ab7ad9174f701f9c6f64e378df77927a6" kindref="member">QCustomPlot::addPlottable</ref>, <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> then takes ownership of the graph. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2676" column="12" bodyfile="qcustomplot.cpp" bodystart="16812" bodyend="16827"/>
        <references refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1ade5822ce6fbf131d3df131795c2e1003" compoundref="qcustomplot_8h" startline="2674">lsLine</references>
        <references refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" compoundref="qcustomplot_8h" startline="1464">QCPAbstractPlottable::mBrush</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" compoundref="qcustomplot_8h" startline="1463">QCPAbstractPlottable::mPen</references>
        <references refid="class_q_c_p_abstract_plottable_1aea3c0da30c7a8be23ad5f2d9bca36762" compoundref="qcustomplot_8h" startline="1464">QCPAbstractPlottable::mSelectedBrush</references>
        <references refid="class_q_c_p_abstract_plottable_1a10619472f5d5e10e9519a599f1cf5576" compoundref="qcustomplot_8h" startline="1463">QCPAbstractPlottable::mSelectedPen</references>
        <references refid="class_q_c_p_curve_1a4a377ec863ff81a1875c3094a6177c19" compoundref="qcustomplot_8cpp" startline="16919" endline="16922">setLineStyle</references>
        <references refid="class_q_c_p_curve_1a55e43b44709bf50a35500644988aa706" compoundref="qcustomplot_8cpp" startline="16907" endline="16910">setScatterStyle</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a99ee5136754884a220cc0bcacfe419a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>QCPCurve::~QCPCurve</definition>
        <argsstring>()</argsstring>
        <name>~QCPCurve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2677" column="11" bodyfile="qcustomplot.cpp" bodystart="16829" bodyend="16832"/>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a667ca2594cf651e3032c624dbaa95add" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="qcustomplot_8h_1a444d37ec9cb2951b3a7fe443c34d1658" kindref="member">QCPCurveDataMap</ref> *</type>
        <definition>QCPCurveDataMap* QCPCurve::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2680" column="19" bodyfile="qcustomplot.h" bodystart="2680" bodyend="2680"/>
        <referencedby refid="class_q_c_p_curve_1ad304326aba096911f92452d8bfe0470e" compoundref="qcustomplot_8cpp" startline="16937" endline="16940">addData</referencedby>
        <referencedby refid="class_q_c_p_curve_1a631ac886708460013b30052f49cbc9da" compoundref="qcustomplot_8cpp" startline="16841" endline="16856">setData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1afa6bd72a3a331a5ed45d3e0c5843b592" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref></type>
        <definition>QCPScatterStyle QCPCurve::scatterStyle</definition>
        <argsstring>() const</argsstring>
        <name>scatterStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2681" column="19" bodyfile="qcustomplot.h" bodystart="2681" bodyend="2681"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a06e3cf3f8f1add689254b3cda66e040e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1" kindref="member">LineStyle</ref></type>
        <definition>LineStyle QCPCurve::lineStyle</definition>
        <argsstring>() const</argsstring>
        <name>lineStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2682" column="13" bodyfile="qcustomplot.h" bodystart="2682" bodyend="2682"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a631ac886708460013b30052f49cbc9da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::setData</definition>
        <argsstring>(QCPCurveDataMap *data, bool copy=false)</argsstring>
        <name>setData</name>
        <param>
          <type><ref refid="qcustomplot_8h_1a444d37ec9cb2951b3a7fe443c34d1658" kindref="member">QCPCurveDataMap</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces the current data with the provided <emphasis>data</emphasis>.</para>
<para>If <emphasis>copy</emphasis> is set to true, data points in <emphasis>data</emphasis> will only be copied. if false, the plottable takes ownership of the passed data and replaces the internal data pointer with it. This is significantly faster than copying for large datasets. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2685" column="8" bodyfile="qcustomplot.cpp" bodystart="16841" bodyend="16856"/>
        <references refid="class_q_c_p_curve_1a667ca2594cf651e3032c624dbaa95add" compoundref="qcustomplot_8h" startline="2680" endline="2680">data</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1affe80e011e2ced62a88f614acd6ab8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::setData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;t, const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value)</argsstring>
        <name>setData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Replaces the current data with the provided points in <emphasis>t</emphasis>, <emphasis>key</emphasis> and <emphasis>value</emphasis> tuples. The provided vectors should have equal length. Else, the number of added points will be the size of the smallest vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2686" column="8" bodyfile="qcustomplot.cpp" bodystart="16864" bodyend="16878"/>
        <references refid="class_q_c_p_curve_data_1a8a4ec5f2b9a396149fd842e309701bd4" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::key</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
        <references refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::t</references>
        <references refid="class_q_c_p_curve_data_1a72b39b8e1dbf7b45382ebd48419b6828" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a963d4c45777deef15848a8f56172d066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::setData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value)</argsstring>
        <name>setData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Replaces the current data with the provided <emphasis>key</emphasis> and <emphasis>value</emphasis> pairs. The t parameter of each data point will be set to the integer index of the respective key/value pair. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2687" column="8" bodyfile="qcustomplot.cpp" bodystart="16885" bodyend="16898"/>
        <references refid="class_q_c_p_curve_data_1a8a4ec5f2b9a396149fd842e309701bd4" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::key</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
        <references refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::t</references>
        <references refid="class_q_c_p_curve_data_1a72b39b8e1dbf7b45382ebd48419b6828" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a55e43b44709bf50a35500644988aa706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::setScatterStyle</definition>
        <argsstring>(const QCPScatterStyle &amp;style)</argsstring>
        <name>setScatterStyle</name>
        <param>
          <type>const <ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the visual appearance of single data points in the plot. If set to <ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349abd144c291ca274f77053ec68cab6c022" kindref="member">QCPScatterStyle::ssNone</ref>, no scatter points are drawn (e.g. for line-only plots with appropriate line style).</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref>, <ref refid="class_q_c_p_curve_1a4a377ec863ff81a1875c3094a6177c19" kindref="member">setLineStyle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2688" column="8" bodyfile="qcustomplot.cpp" bodystart="16907" bodyend="16910"/>
        <references refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" compoundref="qcustomplot_8h" startline="2709">mScatterStyle</references>
        <referencedby refid="class_q_c_p_curve_1a36de58e2652b3fa47bdf9187d421d3ce" compoundref="qcustomplot_8cpp" startline="16812" endline="16827">QCPCurve</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a4a377ec863ff81a1875c3094a6177c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::setLineStyle</definition>
        <argsstring>(LineStyle style)</argsstring>
        <name>setLineStyle</name>
        <param>
          <type><ref refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1" kindref="member">LineStyle</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets how the single data points are connected in the plot or how they are represented visually apart from the scatter symbol. For scatter-only plots, set <emphasis>style</emphasis> to <ref refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1aec1601a191cdf0b4e761c4c66092cc48" kindref="member">lsNone</ref> and <ref refid="class_q_c_p_curve_1a55e43b44709bf50a35500644988aa706" kindref="member">setScatterStyle</ref> to the desired scatter style.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_curve_1a55e43b44709bf50a35500644988aa706" kindref="member">setScatterStyle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2689" column="8" bodyfile="qcustomplot.cpp" bodystart="16919" bodyend="16922"/>
        <references refid="class_q_c_p_curve_1ae1f35ae2b15aee8e15bcdfec5be95156" compoundref="qcustomplot_8h" startline="2710">mLineStyle</references>
        <referencedby refid="class_q_c_p_curve_1a36de58e2652b3fa47bdf9187d421d3ce" compoundref="qcustomplot_8cpp" startline="16812" endline="16827">QCPCurve</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::addData</definition>
        <argsstring>(const QCPCurveDataMap &amp;dataMap)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="qcustomplot_8h_1a444d37ec9cb2951b3a7fe443c34d1658" kindref="member">QCPCurveDataMap</ref> &amp;</type>
          <declname>dataMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds the provided data points in <emphasis>dataMap</emphasis> to the current data. <simplesect kind="see"><para><ref refid="class_q_c_p_curve_1ad45bb5479be799163028ef2b776f7221" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2692" column="8" bodyfile="qcustomplot.cpp" bodystart="16928" bodyend="16931"/>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1ad304326aba096911f92452d8bfe0470e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::addData</definition>
        <argsstring>(const QCPCurveData &amp;data)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="class_q_c_p_curve_data" kindref="compound">QCPCurveData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Adds the provided single data point in <emphasis>data</emphasis> to the current data. <simplesect kind="see"><para><ref refid="class_q_c_p_curve_1ad45bb5479be799163028ef2b776f7221" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2693" column="8" bodyfile="qcustomplot.cpp" bodystart="16937" bodyend="16940"/>
        <references refid="class_q_c_p_curve_1a667ca2594cf651e3032c624dbaa95add" compoundref="qcustomplot_8h" startline="2680" endline="2680">data</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a13398b236f6926014e404eeb5b9f415c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::addData</definition>
        <argsstring>(double t, double key, double value)</argsstring>
        <name>addData</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Adds the provided single data point as <emphasis>t</emphasis>, <emphasis>key</emphasis> and <emphasis>value</emphasis> tuple to the current data <simplesect kind="see"><para><ref refid="class_q_c_p_curve_1ad45bb5479be799163028ef2b776f7221" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2694" column="8" bodyfile="qcustomplot.cpp" bodystart="16946" bodyend="16953"/>
        <references refid="class_q_c_p_curve_data_1a8a4ec5f2b9a396149fd842e309701bd4" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::key</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
        <references refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::t</references>
        <references refid="class_q_c_p_curve_data_1a72b39b8e1dbf7b45382ebd48419b6828" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1ada4762e793cd5707b33f35b8a4b0f8fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::addData</definition>
        <argsstring>(double key, double value)</argsstring>
        <name>addData</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Adds the provided single data point as <emphasis>key</emphasis> and <emphasis>value</emphasis> pair to the current data The t parameter of the data point is set to the t of the last data point plus 1. If there is no last data point, t will be set to 0.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_curve_1ad45bb5479be799163028ef2b776f7221" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2695" column="8" bodyfile="qcustomplot.cpp" bodystart="16963" bodyend="16973"/>
        <references refid="class_q_c_p_curve_data_1a8a4ec5f2b9a396149fd842e309701bd4" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::key</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
        <references refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::t</references>
        <references refid="class_q_c_p_curve_data_1a72b39b8e1dbf7b45382ebd48419b6828" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a27c8b3dddd4067d626397ee199626722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::addData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;ts, const QVector&lt; double &gt; &amp;keys, const QVector&lt; double &gt; &amp;values)</argsstring>
        <name>addData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>ts</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Adds the provided data points as <emphasis>t</emphasis>, <emphasis>key</emphasis> and <emphasis>value</emphasis> tuples to the current data. <simplesect kind="see"><para><ref refid="class_q_c_p_curve_1ad45bb5479be799163028ef2b776f7221" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2696" column="8" bodyfile="qcustomplot.cpp" bodystart="16979" bodyend="16992"/>
        <references refid="class_q_c_p_curve_data_1a8a4ec5f2b9a396149fd842e309701bd4" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::key</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
        <references refid="class_q_c_p_curve_data_1aecc395525be28e9178a088793beb3ff3" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::t</references>
        <references refid="class_q_c_p_curve_data_1a72b39b8e1dbf7b45382ebd48419b6828" compoundref="qcustomplot_8h" startline="2643">QCPCurveData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1af6f4284fbc2f34e676f24dce03c34fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::removeDataBefore</definition>
        <argsstring>(double t)</argsstring>
        <name>removeDataBefore</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all data points with curve parameter t smaller than <emphasis>t</emphasis>. <simplesect kind="see"><para><ref refid="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" kindref="member">addData</ref>, <ref refid="class_q_c_p_curve_1ae0462c61dbfbac07db0736ec64110241" kindref="member">clearData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2697" column="8" bodyfile="qcustomplot.cpp" bodystart="16998" bodyend="17003"/>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a0365cb947c4e6d405ee22e00191d5f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::removeDataAfter</definition>
        <argsstring>(double t)</argsstring>
        <name>removeDataAfter</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all data points with curve parameter t greater than <emphasis>t</emphasis>. <simplesect kind="see"><para><ref refid="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" kindref="member">addData</ref>, <ref refid="class_q_c_p_curve_1ae0462c61dbfbac07db0736ec64110241" kindref="member">clearData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2698" column="8" bodyfile="qcustomplot.cpp" bodystart="17009" bodyend="17015"/>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1ad45bb5479be799163028ef2b776f7221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::removeData</definition>
        <argsstring>(double fromt, double tot)</argsstring>
        <name>removeData</name>
        <param>
          <type>double</type>
          <declname>fromt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all data points with curve parameter t between <emphasis>fromt</emphasis> and <emphasis>tot</emphasis>. if <emphasis>fromt</emphasis> is greater or equal to <emphasis>tot</emphasis>, the function does nothing. To remove a single data point with known t, use <ref refid="class_q_c_p_curve_1a30c91acfa591ec534c49fed4c0fca39a" kindref="member">removeData(double t)</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" kindref="member">addData</ref>, <ref refid="class_q_c_p_curve_1ae0462c61dbfbac07db0736ec64110241" kindref="member">clearData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2699" column="8" bodyfile="qcustomplot.cpp" bodystart="17024" bodyend="17031"/>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a30c91acfa591ec534c49fed4c0fca39a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::removeData</definition>
        <argsstring>(double t)</argsstring>
        <name>removeData</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Removes a single data point at curve parameter <emphasis>t</emphasis>. If the position is not known with absolute precision, consider using <ref refid="class_q_c_p_curve_1ad45bb5479be799163028ef2b776f7221" kindref="member">removeData(double fromt, double tot)</ref> with a small fuzziness interval around the suspected position, depeding on the precision with which the curve parameter is known.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" kindref="member">addData</ref>, <ref refid="class_q_c_p_curve_1ae0462c61dbfbac07db0736ec64110241" kindref="member">clearData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2700" column="8" bodyfile="qcustomplot.cpp" bodystart="17042" bodyend="17045"/>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1ae0462c61dbfbac07db0736ec64110241" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPCurve::clearData</definition>
        <argsstring>()</argsstring>
        <name>clearData</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1a86e5b8fd4b6ff4f4084e7ea4c573fc53">clearData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all data points. <simplesect kind="see"><para><ref refid="class_q_c_p_curve_1ad45bb5479be799163028ef2b776f7221" kindref="member">removeData</ref>, <ref refid="class_q_c_p_curve_1a0365cb947c4e6d405ee22e00191d5f52" kindref="member">removeDataAfter</ref>, <ref refid="class_q_c_p_curve_1af6f4284fbc2f34e676f24dce03c34fe5" kindref="member">removeDataBefore</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2703" column="16" bodyfile="qcustomplot.cpp" bodystart="17051" bodyend="17054"/>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a87a9fb34a2a48dcae4c1245ada235e7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QCPCurve::selectTest</definition>
        <argsstring>(const QPointF &amp;pos, bool onlySelectable, QVariant *details=0) const</argsstring>
        <name>selectTest</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1a38efe9641d972992a3d44204bc80ec1d">selectTest</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelectable</declname>
        </param>
        <param>
          <type>QVariant *</type>
          <declname>details</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to decide whether a click hits a layerable object or not.</para>
<para><emphasis>pos</emphasis> is a point in pixel coordinates on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> surface. This function returns the shortest pixel distance of this point to the object. If the object is either invisible or the distance couldn&apos;t be determined, -1.0 is returned. Further, if <emphasis>onlySelectable</emphasis> is true and the object is not selectable, -1.0 is returned, too.</para>
<para>If the object is represented not by single lines but by an area like a <ref refid="class_q_c_p_item_text" kindref="compound">QCPItemText</ref> or the bars of a <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> plottable, a click inside the area should also be considered a hit. In these cases this function thus returns a constant value greater zero but still below the parent plot&apos;s selection tolerance. (typically the selectionTolerance multiplied by 0.99).</para>
<para>Providing a constant value for area objects allows selecting line objects even when they are obscured by such area objects, by clicking close to the lines (i.e. closer than 0.99*selectionTolerance).</para>
<para>The actual setting of the selection state is not done by this function. This is handled by the parent <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> when the mouseReleaseEvent occurs, and the finally selected object is notified via the selectEvent/deselectEvent methods.</para>
<para><emphasis>details</emphasis> is an optional output parameter. Every layerable subclass may place any information in <emphasis>details</emphasis>. This information will be passed to <ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">selectEvent</ref> when the parent <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> decides on the basis of this selectTest call, that the object was successfully selected. The subsequent call to <ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">selectEvent</ref> will carry the <emphasis>details</emphasis>. This is useful for multi-part objects (like <ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>). This way, a possibly complex calculation to decide which part was clicked is only done once in <ref refid="class_q_c_p_curve_1a87a9fb34a2a48dcae4c1245ada235e7d" kindref="member">selectTest</ref>. The result (i.e. the actually clicked part) can then be placed in <emphasis>details</emphasis>. So in the subsequent <ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">selectEvent</ref>, the decision which part was selected doesn&apos;t have to be done a second time for a single selection operation.</para>
<para>You may pass 0 as <emphasis>details</emphasis> to indicate that you are not interested in those selection details.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">selectEvent</ref>, <ref refid="class_q_c_p_abstract_plottable_1a6fa0d0f95560ea8b01ee13f296dab2b1" kindref="member">deselectEvent</ref>, <ref refid="class_q_custom_plot_1a5ee1e2f6ae27419deca53e75907c27e5" kindref="member">QCustomPlot::setInteractions</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2704" column="18" bodyfile="qcustomplot.cpp" bodystart="17057" bodyend="17068"/>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" compoundref="qcustomplot_8h" startline="1466">QCPAbstractPlottable::mSelectable</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_curve_1adc3ab8051946f9097cdf7c0707ef1a25" compoundref="qcustomplot_8cpp" startline="17915" endline="17940">pointDistance</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_curve_1a2361302d2fc6ec669849bd3bca00c4b2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPCurve::draw</definition>
        <argsstring>(QCPPainter *painter)</argsstring>
        <name>draw</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1acbab5e30dcd04fd302b4a5902ac2c482">draw</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2713" column="16" bodyfile="qcustomplot.cpp" bodystart="17071" bodyend="17156"/>
        <references refid="class_q_c_p_abstract_plottable_1a59a80773c5cefc05a0646ac8e1149ed5" compoundref="qcustomplot_8cpp" startline="7297" endline="7300">QCPAbstractPlottable::applyDefaultAntialiasingHint</references>
        <references refid="class_q_c_p_abstract_plottable_1a8d06a59ea23324cce6330ebf2262c0ed" compoundref="qcustomplot_8cpp" startline="7313" endline="7316">QCPAbstractPlottable::applyFillAntialiasingHint</references>
        <references refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" compoundref="qcustomplot_8cpp" startline="129" endline="135">QCPPainter::drawLine</references>
        <references refid="class_q_c_p_curve_1a00d17c020796ac84c84f881201c2ed10" compoundref="qcustomplot_8cpp" startline="17198" endline="17206">drawScatterPlot</references>
        <references refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" compoundref="qcustomplot_8cpp" startline="17221" endline="17298">getCurveData</references>
        <references refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" compoundref="qcustomplot_8h" startline="172" endline="175">QCP::isInvalidData</references>
        <references refid="class_q_c_p_scatter_style_1a72db6bcb1e1abd6e53c1315dd3dea7e4" compoundref="qcustomplot_8h" startline="291" endline="291">QCPScatterStyle::isNone</references>
        <references refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1aec1601a191cdf0b4e761c4c66092cc48" compoundref="qcustomplot_8h" startline="2673">lsNone</references>
        <references refid="class_q_c_p_abstract_plottable_1ac9147022a662e92b46c39e7cb821b0af" compoundref="qcustomplot_8cpp" startline="7279" endline="7282">QCPAbstractPlottable::mainBrush</references>
        <references refid="class_q_c_p_abstract_plottable_1abd790a3b229239f49067f136633a4b98" compoundref="qcustomplot_8cpp" startline="7269" endline="7272">QCPAbstractPlottable::mainPen</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
        <references refid="class_q_c_p_curve_1ae1f35ae2b15aee8e15bcdfec5be95156" compoundref="qcustomplot_8h" startline="2710">mLineStyle</references>
        <references refid="class_q_c_p_painter_1aef102658219b24165f7ee2aad1b9e48f" compoundref="qcustomplot_8h" startline="334" endline="334">QCPPainter::modes</references>
        <references refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" compoundref="qcustomplot_8h" startline="447">QCPLayerable::mParentPlot</references>
        <references refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" compoundref="qcustomplot_8h" startline="2709">mScatterStyle</references>
        <references refid="class_q_c_p_abstract_plottable_1a52c226eefcb1920240eeabae574d28c0" compoundref="qcustomplot_8h" startline="1409" endline="1409">QCPAbstractPlottable::name</references>
        <references refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4aa5fd227bc878c56ad2a87ea32c74ee4d" compoundref="qcustomplot_8h" startline="140">QCP::phFastPolylines</references>
        <references refid="class_q_custom_plot_1ac724f4075822f74f7b676a790095b877" compoundref="qcustomplot_8h" startline="1730" endline="1730">QCustomPlot::plottingHints</references>
        <references refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dae78f9a4eb277a5f9207f50850a51a0b0" compoundref="qcustomplot_8h" startline="322">QCPPainter::pmNoCaching</references>
        <references refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156daeda679cd55dcd468341d07d48a30b6ab" compoundref="qcustomplot_8h" startline="321">QCPPainter::pmVectorized</references>
        <references refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" compoundref="qcustomplot_8cpp" startline="86" endline="91">QCPPainter::setPen</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1acccc86e9f496bb0392529f59f3a69dbc" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPCurve::drawLegendIcon</definition>
        <argsstring>(QCPPainter *painter, const QRectF &amp;rect) const</argsstring>
        <name>drawLegendIcon</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1a9a450783fd9ed539e589999fd390cdf7">drawLegendIcon</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2714" column="16" bodyfile="qcustomplot.cpp" bodystart="17159" bodyend="17191"/>
        <references refid="class_q_c_p_abstract_plottable_1a59a80773c5cefc05a0646ac8e1149ed5" compoundref="qcustomplot_8cpp" startline="7297" endline="7300">QCPAbstractPlottable::applyDefaultAntialiasingHint</references>
        <references refid="class_q_c_p_abstract_plottable_1a8d06a59ea23324cce6330ebf2262c0ed" compoundref="qcustomplot_8cpp" startline="7313" endline="7316">QCPAbstractPlottable::applyFillAntialiasingHint</references>
        <references refid="class_q_c_p_abstract_plottable_1ac95f26b15a1e5d9c7bd2c0a46d760fc9" compoundref="qcustomplot_8cpp" startline="7329" endline="7332">QCPAbstractPlottable::applyScattersAntialiasingHint</references>
        <references refid="class_q_c_p_scatter_style_1afd8044ece445300499ca0dc164821e0f" compoundref="qcustomplot_8cpp" startline="520" endline="524">QCPScatterStyle::applyTo</references>
        <references refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" compoundref="qcustomplot_8cpp" startline="129" endline="135">QCPPainter::drawLine</references>
        <references refid="class_q_c_p_scatter_style_1a2b3964961b6cbfbc87be6e1e3a6f3c96" compoundref="qcustomplot_8cpp" startline="534" endline="537">QCPScatterStyle::drawShape</references>
        <references refid="class_q_c_p_scatter_style_1a72db6bcb1e1abd6e53c1315dd3dea7e4" compoundref="qcustomplot_8h" startline="291" endline="291">QCPScatterStyle::isNone</references>
        <references refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1aec1601a191cdf0b4e761c4c66092cc48" compoundref="qcustomplot_8h" startline="2673">lsNone</references>
        <references refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" compoundref="qcustomplot_8h" startline="1464">QCPAbstractPlottable::mBrush</references>
        <references refid="class_q_c_p_curve_1ae1f35ae2b15aee8e15bcdfec5be95156" compoundref="qcustomplot_8h" startline="2710">mLineStyle</references>
        <references refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" compoundref="qcustomplot_8h" startline="1463">QCPAbstractPlottable::mPen</references>
        <references refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" compoundref="qcustomplot_8h" startline="2709">mScatterStyle</references>
        <references refid="class_q_c_p_scatter_style_1a9b2d1a2ec0aac0c74f7582d14050e93a" compoundref="qcustomplot_8h" startline="279" endline="279">QCPScatterStyle::pixmap</references>
        <references refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" compoundref="qcustomplot_8cpp" startline="86" endline="91">QCPPainter::setPen</references>
        <references refid="class_q_c_p_scatter_style_1a5fb611d46acfac520d7b89a1c71d9246" compoundref="qcustomplot_8cpp" startline="494" endline="498">QCPScatterStyle::setPixmap</references>
        <references refid="class_q_c_p_scatter_style_1af04cad55bd7f58a96da4fc6bc46a0a1e" compoundref="qcustomplot_8h" startline="276" endline="276">QCPScatterStyle::shape</references>
        <references refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a8718b849ca7c307b07b8e091efb0c31e" compoundref="qcustomplot_8h" startline="262">QCPScatterStyle::ssPixmap</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a1b24b1384d72862e8294688501ffa01d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>QCPRange QCPCurve::getKeyRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain=sdBoth) const</argsstring>
        <name>getKeyRange</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1a345d702b2e7e12c8cfdddff65ba85e8c">getKeyRange</reimplements>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
          <defval><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2715" column="20" bodyfile="qcustomplot.cpp" bodystart="17943" bodyend="17976"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">QCPRange::lower</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" compoundref="qcustomplot_8h" startline="1456">QCPAbstractPlottable::sdBoth</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" compoundref="qcustomplot_8h" startline="1455">QCPAbstractPlottable::sdNegative</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" compoundref="qcustomplot_8h" startline="1457">QCPAbstractPlottable::sdPositive</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">QCPRange::upper</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a12fcfce09ffa9965b3e01555d968d378" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>QCPRange QCPCurve::getValueRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain=sdBoth) const</argsstring>
        <name>getValueRange</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1aa3331b415b5939fe4df60b78831b2799">getValueRange</reimplements>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
          <defval><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2716" column="20" bodyfile="qcustomplot.cpp" bodystart="17979" bodyend="18012"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">QCPRange::lower</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" compoundref="qcustomplot_8h" startline="1456">QCPAbstractPlottable::sdBoth</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" compoundref="qcustomplot_8h" startline="1455">QCPAbstractPlottable::sdNegative</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" compoundref="qcustomplot_8h" startline="1457">QCPAbstractPlottable::sdPositive</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">QCPRange::upper</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a00d17c020796ac84c84f881201c2ed10" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPCurve::drawScatterPlot</definition>
        <argsstring>(QCPPainter *painter, const QVector&lt; QPointF &gt; *pointData) const</argsstring>
        <name>drawScatterPlot</name>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const QVector&lt; QPointF &gt; *</type>
          <declname>pointData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2719" column="16" bodyfile="qcustomplot.cpp" bodystart="17198" bodyend="17206"/>
        <references refid="class_q_c_p_abstract_plottable_1ac95f26b15a1e5d9c7bd2c0a46d760fc9" compoundref="qcustomplot_8cpp" startline="7329" endline="7332">QCPAbstractPlottable::applyScattersAntialiasingHint</references>
        <references refid="class_q_c_p_scatter_style_1afd8044ece445300499ca0dc164821e0f" compoundref="qcustomplot_8cpp" startline="520" endline="524">QCPScatterStyle::applyTo</references>
        <references refid="class_q_c_p_scatter_style_1a2b3964961b6cbfbc87be6e1e3a6f3c96" compoundref="qcustomplot_8cpp" startline="534" endline="537">QCPScatterStyle::drawShape</references>
        <references refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" compoundref="qcustomplot_8h" startline="1463">QCPAbstractPlottable::mPen</references>
        <references refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" compoundref="qcustomplot_8h" startline="2709">mScatterStyle</references>
        <referencedby refid="class_q_c_p_curve_1a2361302d2fc6ec669849bd3bca00c4b2" compoundref="qcustomplot_8cpp" startline="17071" endline="17156">draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::getCurveData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *lineData) const</argsstring>
        <name>getCurveData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2722" column="8" bodyfile="qcustomplot.cpp" bodystart="17221" bodyend="17298"/>
        <references refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" compoundref="qcustomplot_8cpp" startline="7193" endline="7208">QCPAbstractPlottable::coordsToPixels</references>
        <references refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</references>
        <references refid="class_q_c_p_curve_1a2f1455455d71de9ef9190c50a90f0abc" compoundref="qcustomplot_8cpp" startline="17462" endline="17612">getOptimizedCornerPoints</references>
        <references refid="class_q_c_p_curve_1ae729c9aef90af9b7463c379cb88459f6" compoundref="qcustomplot_8cpp" startline="17362" endline="17442">getOptimizedPoint</references>
        <references refid="class_q_c_p_curve_1a316b216383dbff606f59c38bd72e6501" compoundref="qcustomplot_8cpp" startline="17318" endline="17345">getRegion</references>
        <references refid="class_q_c_p_curve_1a82a78dffde71e7b9c40217fa7e381057" compoundref="qcustomplot_8cpp" startline="17729" endline="17798">getTraverse</references>
        <references refid="class_q_c_p_curve_1a592d6e3dbd42cb8cea35eda889ece1b1" compoundref="qcustomplot_8cpp" startline="17825" endline="17907">getTraverseCornerPoints</references>
        <references refid="class_q_c_p_scatter_style_1a72db6bcb1e1abd6e53c1315dd3dea7e4" compoundref="qcustomplot_8h" startline="291" endline="291">QCPScatterStyle::isNone</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">QCPRange::lower</references>
        <references refid="class_q_c_p_abstract_plottable_1abd790a3b229239f49067f136633a4b98" compoundref="qcustomplot_8cpp" startline="7269" endline="7272">QCPAbstractPlottable::mainPen</references>
        <references refid="class_q_c_p_curve_1af5df2560b30333fe662ec676bd355415" compoundref="qcustomplot_8cpp" startline="17626" endline="17713">mayTraverse</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" compoundref="qcustomplot_8h" startline="2709">mScatterStyle</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_axis_1a536ef8f624cac59b6b6fdcb495723c57" compoundref="qcustomplot_8cpp" startline="5286" endline="5319">QCPAxis::pixelToCoord</references>
        <references refid="class_q_c_p_axis_1ac4058855a81f1a883cf2e754f6a6acb1" compoundref="qcustomplot_8h" startline="1096" endline="1096">QCPAxis::range</references>
        <references refid="class_q_c_p_axis_1ab9866dd1a78f1920f491ec12a794bec2" compoundref="qcustomplot_8h" startline="1097" endline="1097">QCPAxis::rangeReversed</references>
        <references refid="class_q_c_p_scatter_style_1a0e94526d9165d9f50e262102bdd71a47" compoundref="qcustomplot_8h" startline="275" endline="275">QCPScatterStyle::size</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">QCPRange::upper</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_curve_1a2361302d2fc6ec669849bd3bca00c4b2" compoundref="qcustomplot_8cpp" startline="17071" endline="17156">draw</referencedby>
        <referencedby refid="class_q_c_p_curve_1adc3ab8051946f9097cdf7c0707ef1a25" compoundref="qcustomplot_8cpp" startline="17915" endline="17940">pointDistance</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a316b216383dbff606f59c38bd72e6501" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPCurve::getRegion</definition>
        <argsstring>(double x, double y, double rectLeft, double rectTop, double rectRight, double rectBottom) const</argsstring>
        <name>getRegion</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectLeft</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectTop</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectRight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectBottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2723" column="7" bodyfile="qcustomplot.cpp" bodystart="17318" bodyend="17345"/>
        <referencedby refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" compoundref="qcustomplot_8cpp" startline="17221" endline="17298">getCurveData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1ae729c9aef90af9b7463c379cb88459f6" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF QCPCurve::getOptimizedPoint</definition>
        <argsstring>(int prevRegion, double prevKey, double prevValue, double key, double value, double rectLeft, double rectTop, double rectRight, double rectBottom) const</argsstring>
        <name>getOptimizedPoint</name>
        <param>
          <type>int</type>
          <declname>prevRegion</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prevKey</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prevValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectLeft</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectTop</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectRight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectBottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2724" column="11" bodyfile="qcustomplot.cpp" bodystart="17362" bodyend="17442"/>
        <references refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" compoundref="qcustomplot_8cpp" startline="7193" endline="7208">QCPAbstractPlottable::coordsToPixels</references>
        <referencedby refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" compoundref="qcustomplot_8cpp" startline="17221" endline="17298">getCurveData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a2f1455455d71de9ef9190c50a90f0abc" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVector&lt; QPointF &gt;</type>
        <definition>QVector&lt; QPointF &gt; QCPCurve::getOptimizedCornerPoints</definition>
        <argsstring>(int prevRegion, int currentRegion, double prevKey, double prevValue, double key, double value, double rectLeft, double rectTop, double rectRight, double rectBottom) const</argsstring>
        <name>getOptimizedCornerPoints</name>
        <param>
          <type>int</type>
          <declname>prevRegion</declname>
        </param>
        <param>
          <type>int</type>
          <declname>currentRegion</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prevKey</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prevValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectLeft</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectTop</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectRight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectBottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2725" column="11" bodyfile="qcustomplot.cpp" bodystart="17462" bodyend="17612"/>
        <references refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" compoundref="qcustomplot_8cpp" startline="7193" endline="7208">QCPAbstractPlottable::coordsToPixels</references>
        <referencedby refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" compoundref="qcustomplot_8cpp" startline="17221" endline="17298">getCurveData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1af5df2560b30333fe662ec676bd355415" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPCurve::mayTraverse</definition>
        <argsstring>(int prevRegion, int currentRegion) const</argsstring>
        <name>mayTraverse</name>
        <param>
          <type>int</type>
          <declname>prevRegion</declname>
        </param>
        <param>
          <type>int</type>
          <declname>currentRegion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2726" column="8" bodyfile="qcustomplot.cpp" bodystart="17626" bodyend="17713"/>
        <referencedby refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" compoundref="qcustomplot_8cpp" startline="17221" endline="17298">getCurveData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a82a78dffde71e7b9c40217fa7e381057" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPCurve::getTraverse</definition>
        <argsstring>(double prevKey, double prevValue, double key, double value, double rectLeft, double rectTop, double rectRight, double rectBottom, QPointF &amp;crossA, QPointF &amp;crossB) const</argsstring>
        <name>getTraverse</name>
        <param>
          <type>double</type>
          <declname>prevKey</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prevValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectLeft</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectTop</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectRight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectBottom</declname>
        </param>
        <param>
          <type>QPointF &amp;</type>
          <declname>crossA</declname>
        </param>
        <param>
          <type>QPointF &amp;</type>
          <declname>crossB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2727" column="8" bodyfile="qcustomplot.cpp" bodystart="17729" bodyend="17798"/>
        <references refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" compoundref="qcustomplot_8cpp" startline="7193" endline="7208">QCPAbstractPlottable::coordsToPixels</references>
        <referencedby refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" compoundref="qcustomplot_8cpp" startline="17221" endline="17298">getCurveData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1a592d6e3dbd42cb8cea35eda889ece1b1" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::getTraverseCornerPoints</definition>
        <argsstring>(int prevRegion, int currentRegion, double rectLeft, double rectTop, double rectRight, double rectBottom, QVector&lt; QPointF &gt; &amp;beforeTraverse, QVector&lt; QPointF &gt; &amp;afterTraverse) const</argsstring>
        <name>getTraverseCornerPoints</name>
        <param>
          <type>int</type>
          <declname>prevRegion</declname>
        </param>
        <param>
          <type>int</type>
          <declname>currentRegion</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectLeft</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectTop</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectRight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectBottom</declname>
        </param>
        <param>
          <type>QVector&lt; QPointF &gt; &amp;</type>
          <declname>beforeTraverse</declname>
        </param>
        <param>
          <type>QVector&lt; QPointF &gt; &amp;</type>
          <declname>afterTraverse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2728" column="8" bodyfile="qcustomplot.cpp" bodystart="17825" bodyend="17907"/>
        <references refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" compoundref="qcustomplot_8cpp" startline="7193" endline="7208">QCPAbstractPlottable::coordsToPixels</references>
        <referencedby refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" compoundref="qcustomplot_8cpp" startline="17221" endline="17298">getCurveData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_curve_1adc3ab8051946f9097cdf7c0707ef1a25" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QCPCurve::pointDistance</definition>
        <argsstring>(const QPointF &amp;pixelPoint) const</argsstring>
        <name>pointDistance</name>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pixelPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2729" column="10" bodyfile="qcustomplot.cpp" bodystart="17915" bodyend="17940"/>
        <references refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" compoundref="qcustomplot_8cpp" startline="7193" endline="7208">QCPAbstractPlottable::coordsToPixels</references>
        <references refid="class_q_c_p_abstract_plottable_1af7e992b638c8aa688abceac579bb90d7" compoundref="qcustomplot_8cpp" startline="7360" endline="7379">QCPAbstractPlottable::distSqrToLine</references>
        <references refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" compoundref="qcustomplot_8cpp" startline="17221" endline="17298">getCurveData</references>
        <references refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" compoundref="qcustomplot_8h" startline="2708">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1ac29ffef424e2488675930de18cde612a" compoundref="qcustomplot_8h" startline="1461">QCPAbstractPlottable::mName</references>
        <referencedby refid="class_q_c_p_curve_1a87a9fb34a2a48dcae4c1245ada235e7d" compoundref="qcustomplot_8cpp" startline="17057" endline="17068">selectTest</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A plottable representing a parametric curve in a plot. </para>
    </briefdescription>
    <detaileddescription>
<para><image type="html" name="QCPCurve.png"></image>
</para>
<para>Unlike <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref>, plottables of this type may have multiple points with the same key coordinate, so their visual representation can have <emphasis>loops</emphasis>. This is realized by introducing a third coordinate <emphasis>t</emphasis>, which defines the order of the points described by the other two coordinates <emphasis>x</emphasis> and <emphasis>y</emphasis>.</para>
<para>To plot data, assign it with the <ref refid="class_q_c_p_curve_1a631ac886708460013b30052f49cbc9da" kindref="member">setData</ref> or <ref refid="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" kindref="member">addData</ref> functions.</para>
<para>Gaps in the curve can be created by adding data points with NaN as key and value (<computeroutput>qQNaN()</computeroutput> or <computeroutput>std::numeric_limits&lt;double&gt;::quiet_NaN()</computeroutput>) in between the two data points that shall be separated.</para>
<sect1 id="class_q_c_p_statistical_box_1appearance">
<title>Changing the appearance</title>
<para>The appearance of the curve is determined by the pen and the brush (<ref refid="class_q_c_p_abstract_plottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" kindref="member">setPen</ref>, <ref refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" kindref="member">setBrush</ref>). </para>
</sect1>
<sect1 id="class_q_c_p_statistical_box_1usage">
<title>Usage</title>
<para>Like all data representing objects in <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref>, the <ref refid="class_q_c_p_curve" kindref="compound">QCPCurve</ref> is a plottable (<ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref>). So the plottable-interface of <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> applies (<ref refid="class_q_custom_plot_1a32de81ff53e263e785b83b52ecd99d6f" kindref="member">QCustomPlot::plottable</ref>, <ref refid="class_q_custom_plot_1ab7ad9174f701f9c6f64e378df77927a6" kindref="member">QCustomPlot::addPlottable</ref>, <ref refid="class_q_custom_plot_1af3dafd56884208474f311d6226513ab2" kindref="member">QCustomPlot::removePlottable</ref>, etc.)</para>
<para>Usually, you first create an instance and add it to the customPlot: <programlisting filename="documentation/doc-code-snippets/mainwindow.cpp"></programlisting>and then modify the properties of the newly created plottable, e.g.: <programlisting filename="documentation/doc-code-snippets/mainwindow.cpp"></programlisting></para>
</sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="2">
        <label>QCPAbstractPlottable</label>
        <link refid="class_q_c_p_abstract_plottable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QCPCurve</label>
        <link refid="class_q_c_p_curve"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="12">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
      <node id="18">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QCPAbstractPlottable</label>
        <link refid="class_q_c_p_abstract_plottable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QCPLineEnding</label>
        <link refid="class_q_c_p_line_ending"/>
      </node>
      <node id="9">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>#mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>QCPAxisPainterPrivate</label>
        <link refid="class_q_c_p_axis_painter_private"/>
        <childnode refid="14" relation="usage">
          <edgelabel>+lowerEnding</edgelabel>
          <edgelabel>+upperEnding</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QWidget</label>
      </node>
      <node id="5">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#mLayer</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#mRange</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>#mAxisPainter</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>#mGrid</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>#mAxisRect</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>#mInsetLayout</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#mDragStartHorzRange</edgelabel>
          <edgelabel>#mDragStartVertRange</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QCPCurve</label>
        <link refid="class_q_c_p_curve"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>#mScatterStyle</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QCustomPlot</label>
        <link refid="class_q_custom_plot"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>#mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>+xAxis</edgelabel>
          <edgelabel>+xAxis2</edgelabel>
          <edgelabel>+yAxis</edgelabel>
          <edgelabel>+yAxis2</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>+legend</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>QCPScatterStyle</label>
        <link refid="class_q_c_p_scatter_style"/>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="2660" column="1" bodyfile="qcustomplot.h" bodystart="2661" bodyend="2733"/>
    <listofallmembers>
      <member refid="class_q_c_p_curve_1a4e24023c3b9ac75440c7a260172c99af" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>addData</name></member>
      <member refid="class_q_c_p_curve_1ad304326aba096911f92452d8bfe0470e" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>addData</name></member>
      <member refid="class_q_c_p_curve_1a13398b236f6926014e404eeb5b9f415c" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>addData</name></member>
      <member refid="class_q_c_p_curve_1ada4762e793cd5707b33f35b8a4b0f8fb" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>addData</name></member>
      <member refid="class_q_c_p_curve_1a27c8b3dddd4067d626397ee199626722" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>addData</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a70f8cabfd808f7d5204b9f18c45c13f5" prot="public" virt="virtual"><scope>QCPCurve</scope><name>addToLegend</name></member>
      <member refid="class_q_c_p_layerable_1a71cbd212fde2703cee076e204a475709" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>antialiased</name></member>
      <member refid="class_q_c_p_abstract_plottable_1add06e122d84deb9f451ace9bb8ad9c96" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>antialiasedErrorBars</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a022717896dc57b638a7b5a7be7212ba9" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>antialiasedFill</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a795370db6b1309de0ab60b633efb5ec2" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>antialiasedScatters</name></member>
      <member refid="class_q_c_p_layerable_1acb663e375d2d36dc5c55021ee5a2119b" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>applyAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a59a80773c5cefc05a0646ac8e1149ed5" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a0889abc8dbfd357053f40bfafff8bf7d" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>applyErrorBarsAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a8d06a59ea23324cce6330ebf2262c0ed" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>applyFillAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ac95f26b15a1e5d9c7bd2c0a46d760fc9" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>applyScattersAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a893b4896dfd92b68b05b2600b80f5826" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>brush</name></member>
      <member refid="class_q_c_p_curve_1ae0462c61dbfbac07db0736ec64110241" prot="public" virt="virtual"><scope>QCPCurve</scope><name>clearData</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aafb817dbea97d2798967f3371a701413" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>clipRect</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>coordsToPixels</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a5acb50ae984eef09a7ab92315d2ad708" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>coordsToPixels</name></member>
      <member refid="class_q_c_p_curve_1a667ca2594cf651e3032c624dbaa95add" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>data</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a6fa0d0f95560ea8b01ee13f296dab2b1" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>deselectEvent</name></member>
      <member refid="class_q_c_p_abstract_plottable_1af7e992b638c8aa688abceac579bb90d7" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>distSqrToLine</name></member>
      <member refid="class_q_c_p_curve_1a2361302d2fc6ec669849bd3bca00c4b2" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>draw</name></member>
      <member refid="class_q_c_p_curve_1acccc86e9f496bb0392529f59f3a69dbc" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>drawLegendIcon</name></member>
      <member refid="class_q_c_p_curve_1a00d17c020796ac84c84f881201c2ed10" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>drawScatterPlot</name></member>
      <member refid="class_q_c_p_curve_1a3ca9d2c315c643f732cc85e20d18b551" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>getCurveData</name></member>
      <member refid="class_q_c_p_curve_1a1b24b1384d72862e8294688501ffa01d" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>getKeyRange</name></member>
      <member refid="class_q_c_p_curve_1a2f1455455d71de9ef9190c50a90f0abc" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>getOptimizedCornerPoints</name></member>
      <member refid="class_q_c_p_curve_1ae729c9aef90af9b7463c379cb88459f6" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>getOptimizedPoint</name></member>
      <member refid="class_q_c_p_curve_1a316b216383dbff606f59c38bd72e6501" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>getRegion</name></member>
      <member refid="class_q_c_p_curve_1a82a78dffde71e7b9c40217fa7e381057" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>getTraverse</name></member>
      <member refid="class_q_c_p_curve_1a592d6e3dbd42cb8cea35eda889ece1b1" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>getTraverseCornerPoints</name></member>
      <member refid="class_q_c_p_curve_1a12fcfce09ffa9965b3e01555d968d378" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>getValueRange</name></member>
      <member refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>initializeParentPlot</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>keyAxis</name></member>
      <member refid="class_q_c_p_layerable_1a5ff4862e8c784c9f5986dbc1533ba2a4" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>layer</name></member>
      <member refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>layerChanged</name></member>
      <member refid="class_q_c_p_curve_1a06e3cf3f8f1add689254b3cda66e040e" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>lineStyle</name></member>
      <member refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>LineStyle</name></member>
      <member refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1ade5822ce6fbf131d3df131795c2e1003" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>lsLine</name></member>
      <member refid="class_q_c_p_curve_1a2710e9f79302152cff794c6e16cc01f1aec1601a191cdf0b4e761c4c66092cc48" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>lsNone</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ac9147022a662e92b46c39e7cb821b0af" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mainBrush</name></member>
      <member refid="class_q_c_p_abstract_plottable_1abd790a3b229239f49067f136633a4b98" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mainPen</name></member>
      <member refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mAntialiased</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ad48660b2bd301576e92fb033d8f455ea" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mAntialiasedErrorBars</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a152ac765bedf927fb240545d11d453ea" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mAntialiasedFill</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aa115755e525a8e3a86dc683f9cab755b" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mAntialiasedScatters</name></member>
      <member refid="class_q_c_p_curve_1af5df2560b30333fe662ec676bd355415" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mayTraverse</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mBrush</name></member>
      <member refid="class_q_c_p_curve_1a88d533e455bca96004b049e99168731b" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mData</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mKeyAxis</name></member>
      <member refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mLayer</name></member>
      <member refid="class_q_c_p_curve_1ae1f35ae2b15aee8e15bcdfec5be95156" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mLineStyle</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ac29ffef424e2488675930de18cde612a" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mName</name></member>
      <member refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>moveToLayer</name></member>
      <member refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mParentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mParentPlot</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mPen</name></member>
      <member refid="class_q_c_p_curve_1a08f803b4a30b01bbd7a1eab15d0f864f" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mScatterStyle</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mSelectable</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mSelected</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aea3c0da30c7a8be23ad5f2d9bca36762" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mSelectedBrush</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a10619472f5d5e10e9519a599f1cf5576" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mSelectedPen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mValueAxis</name></member>
      <member refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mVisible</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a52c226eefcb1920240eeabae574d28c0" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>name</name></member>
      <member refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>parentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a473edb813a4c1929d6b6a8fe3ff3faf7" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>parentPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab20b7dbd8e0249ed61adb9622c427382" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>parentPlotInitialized</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ad5972efc31344e5a7a78ab4f8864b2d3" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>pen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a3903c1120ab5c27e7fa46b597ef267bd" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>pixelsToCoords</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a28d32c0062b9450847851ffdee1c5f69" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>pixelsToCoords</name></member>
      <member refid="class_q_c_p_curve_1adc3ab8051946f9097cdf7c0707ef1a25" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>pointDistance</name></member>
      <member refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>QCPAbstractPlottable</name></member>
      <member refid="class_q_c_p_curve_1a36de58e2652b3fa47bdf9187d421d3ce" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>QCPCurve</name></member>
      <member refid="class_q_c_p_layerable_1a74c0fa237f29bf0e49565013fc5d1ec0" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>QCPLayerable</name></member>
      <member refid="class_q_c_p_curve_1a8429035e7adfbd7f05805a6530ad5e3b" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>QCPLegend</name></member>
      <member refid="class_q_c_p_curve_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>QCustomPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>realVisibility</name></member>
      <member refid="class_q_c_p_curve_1ad45bb5479be799163028ef2b776f7221" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>removeData</name></member>
      <member refid="class_q_c_p_curve_1a30c91acfa591ec534c49fed4c0fca39a" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>removeData</name></member>
      <member refid="class_q_c_p_curve_1a0365cb947c4e6d405ee22e00191d5f52" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>removeDataAfter</name></member>
      <member refid="class_q_c_p_curve_1af6f4284fbc2f34e676f24dce03c34fe5" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>removeDataBefore</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ac95fb2604d9106d0852ad9ceb326fe8c" prot="public" virt="virtual"><scope>QCPCurve</scope><name>removeFromLegend</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a1491c4a606bccd2d09e65e11b79eb882" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>rescaleAxes</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ae96b83c961e257da116c6acf9c7da308" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>rescaleKeyAxis</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aa1e408bb2d13999150c3f7f8a8579ca9" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>rescaleValueAxis</name></member>
      <member refid="class_q_c_p_curve_1afa6bd72a3a331a5ed45d3e0c5843b592" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>scatterStyle</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>sdBoth</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>sdNegative</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>sdPositive</name></member>
      <member refid="class_q_c_p_abstract_plottable_1adf896b8a213fea74440c7bc969cf6e4c" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>selectable</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a0059caa3f3581f3959660fef8cbb71c4" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>selectableChanged</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a0b3b514474fe93354fc74cfc144184b4" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>selected</name></member>
      <member refid="class_q_c_p_abstract_plottable_1afe5f3f74b09e89713ba39da04079a337" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>selectedBrush</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aafdfd0946b18364321ffce01cc6045a0" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>selectedPen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>selectEvent</name></member>
      <member refid="class_q_c_p_abstract_plottable_1afb5e4718c232a16d0fb06b00e172be9e" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>selectionCategory</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a3af66432b1dca93b28e00e78a8c7c1d9" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>selectionChanged</name></member>
      <member refid="class_q_c_p_curve_1a87a9fb34a2a48dcae4c1245ada235e7d" prot="public" virt="virtual"><scope>QCPCurve</scope><name>selectTest</name></member>
      <member refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setAntialiased</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a757beb744b96cf1855cca5ab9d3ecf52" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setAntialiasedErrorBars</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a089d6b5577120239b55c39ed27c39536" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setAntialiasedFill</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a2f03f067ede2ed4da6f7d0e4777a3f02" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setAntialiasedScatters</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setBrush</name></member>
      <member refid="class_q_c_p_curve_1a631ac886708460013b30052f49cbc9da" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setData</name></member>
      <member refid="class_q_c_p_curve_1affe80e011e2ced62a88f614acd6ab8d1" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setData</name></member>
      <member refid="class_q_c_p_curve_1a963d4c45777deef15848a8f56172d066" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setData</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a8524fa2994c63c0913ebd9bb2ffa3920" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setKeyAxis</name></member>
      <member refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_curve_1a4a377ec863ff81a1875c3094a6177c19" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setLineStyle</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ab79c7ba76bc7fa89a4b3580e12149f1f" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setName</name></member>
      <member refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>setParentLayerable</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setPen</name></member>
      <member refid="class_q_c_p_curve_1a55e43b44709bf50a35500644988aa706" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setScatterStyle</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a22c69299eb5569e0f6bf084877a37dc4" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setSelectable</name></member>
      <member refid="class_q_c_p_abstract_plottable_1afbd5428c2952f59d952e11ab5cd79176" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setSelected</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ae8c816874089f7a44001e8618e81a9dc" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setSelectedBrush</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a6911603cad23ab0469b108224517516f" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setSelectedPen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a71626a07367e241ec62ad2c34baf21cb" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setValueAxis</name></member>
      <member refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setVisible</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>SignDomain</name></member>
      <member refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>valueAxis</name></member>
      <member refid="class_q_c_p_layerable_1af0297b944b6192b6d67d00bff41b6b70" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>visible</name></member>
      <member refid="class_q_c_p_curve_1a99ee5136754884a220cc0bcacfe419a3" prot="public" virt="virtual"><scope>QCPCurve</scope><name>~QCPCurve</name></member>
      <member refid="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>~QCPLayerable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
