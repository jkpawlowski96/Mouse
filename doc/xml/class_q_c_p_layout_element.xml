<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_q_c_p_layout_element" kind="class" language="C++" prot="public">
    <compoundname>QCPLayoutElement</compoundname>
    <basecompoundref refid="class_q_c_p_layerable" prot="public" virt="non-virtual">QCPLayerable</basecompoundref>
    <derivedcompoundref refid="class_q_c_p_abstract_legend_item" prot="public" virt="non-virtual">QCPAbstractLegendItem</derivedcompoundref>
    <derivedcompoundref refid="class_q_c_p_axis_rect" prot="public" virt="non-virtual">QCPAxisRect</derivedcompoundref>
    <derivedcompoundref refid="class_q_c_p_color_scale" prot="public" virt="non-virtual">QCPColorScale</derivedcompoundref>
    <derivedcompoundref refid="class_q_c_p_layout" prot="public" virt="non-virtual">QCPLayout</derivedcompoundref>
    <derivedcompoundref refid="class_q_c_p_plot_title" prot="public" virt="non-virtual">QCPPlotTitle</derivedcompoundref>
    <includes refid="qcustomplot_8h" local="no">qcustomplot.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374d" prot="public" static="no" strong="no">
        <type></type>
        <name>UpdatePhase</name>
        <enumvalue id="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374dad6119882eba136357c2f627992e527d3" prot="public">
          <name>upPreparation</name>
          <briefdescription>
<para>Phase used for any type of preparation that needs to be done before margin calculation and layout. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da288cb59a92280e47261a341f2813e676" prot="public">
          <name>upMargins</name>
          <briefdescription>
<para>Phase in which the margins are calculated and set. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da5d1ccf5d79967c232c3c511796860045" prot="public">
          <name>upLayout</name>
          <briefdescription>
<para>Final phase in which the layout system places the rects of the elements. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the phases of the update process, that happens just before a replot. At each phase, <ref refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" kindref="member">update</ref> is called with the according UpdatePhase value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="646" column="3" bodyfile="qcustomplot.h" bodystart="646" bodyend="649"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_layout" kindref="compound">QCPLayout</ref> *</type>
        <definition>QCPLayout* QCPLayoutElement::mParentLayout</definition>
        <argsstring></argsstring>
        <name>mParentLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="689" column="13" bodyfile="qcustomplot.h" bodystart="689" bodyend="-1"/>
        <referencedby refid="class_q_c_p_layout_1af6dbbc24156a808da29cd1ec031729a3" compoundref="qcustomplot_8cpp" startline="2282" endline="2293">QCPLayout::adoptElement</referencedby>
        <referencedby refid="class_q_c_p_layout_1a4afbb4bef0071f72f91afdac4433a18e" compoundref="qcustomplot_8cpp" startline="2305" endline="2315">QCPLayout::releaseElement</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" compoundref="qcustomplot_8cpp" startline="1847" endline="1855">setMaximumSize</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" compoundref="qcustomplot_8cpp" startline="1824" endline="1832">setMinimumSize</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a0dc52343920011b3e72d61fc94ed3400" compoundref="qcustomplot_8cpp" startline="1735" endline="1741">~QCPLayoutElement</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layout_element_1affef747c81632de33f08483b7fd10d01" prot="protected" static="no" mutable="no">
        <type>QSize</type>
        <definition>QSize QCPLayoutElement::mMinimumSize</definition>
        <argsstring></argsstring>
        <name>mMinimumSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="690" column="9" bodyfile="qcustomplot.h" bodystart="690" bodyend="-1"/>
        <referencedby refid="class_q_c_p_layout_element_1ab3fdb5c9a5189bb2dac10d4d25329cd8" compoundref="qcustomplot_8cpp" startline="1952" endline="1955">minimumSizeHint</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" compoundref="qcustomplot_8cpp" startline="1824" endline="1832">setMinimumSize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layout_element_1a64a387973fd4addac842028c89088998" prot="protected" static="no" mutable="no">
        <type>QSize</type>
        <definition>QSize QCPLayoutElement::mMaximumSize</definition>
        <argsstring></argsstring>
        <name>mMaximumSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="690" column="22" bodyfile="qcustomplot.h" bodystart="690" bodyend="-1"/>
        <referencedby refid="class_q_c_p_layout_element_1ab5ce2ba22b36d9a3b70a1be562c326e5" compoundref="qcustomplot_8cpp" startline="1964" endline="1967">maximumSizeHint</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" compoundref="qcustomplot_8cpp" startline="1847" endline="1855">setMaximumSize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" prot="protected" static="no" mutable="no">
        <type>QRect</type>
        <definition>QRect QCPLayoutElement::mRect</definition>
        <argsstring></argsstring>
        <name>mRect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="691" column="9" bodyfile="qcustomplot.h" bodystart="691" bodyend="-1"/>
        <referencedby refid="class_q_c_p_plottable_legend_item_1a68a781c3de4f9959fdf82075052d43aa" compoundref="qcustomplot_8cpp" startline="12865" endline="12887">QCPPlottableLegendItem::draw</referencedby>
        <referencedby refid="class_q_c_p_plot_title_1ae4f1f8d24489628dabb7256363b097d2" compoundref="qcustomplot_8cpp" startline="13637" endline="13642">QCPPlotTitle::draw</referencedby>
        <referencedby refid="class_q_c_p_axis_rect_1ab49d338d1ce74b476fcead5b32cf06dc" compoundref="qcustomplot_8cpp" startline="12397" endline="12419">QCPAxisRect::drawBackground</referencedby>
        <referencedby refid="class_q_c_p_abstract_legend_item_1ac834bf9003c491e5064a31e2a7de418d" compoundref="qcustomplot_8cpp" startline="12735" endline="12746">QCPAbstractLegendItem::selectTest</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" compoundref="qcustomplot_8cpp" startline="1774" endline="1781">setMargins</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" compoundref="qcustomplot_8cpp" startline="1754" endline="1761">setOuterRect</referencedby>
        <referencedby refid="class_q_c_p_layout_grid_1a07f8dd7d3d61d7345026621d446042a4" compoundref="qcustomplot_8cpp" startline="2793" endline="2819">QCPLayoutGrid::updateLayout</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" prot="protected" static="no" mutable="no">
        <type>QRect</type>
        <definition>QRect QCPLayoutElement::mOuterRect</definition>
        <argsstring></argsstring>
        <name>mOuterRect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="691" column="15" bodyfile="qcustomplot.h" bodystart="691" bodyend="-1"/>
        <referencedby refid="class_q_c_p_abstract_legend_item_1ac7880619763e765438da3b4dfe183336" compoundref="qcustomplot_8cpp" startline="12755" endline="12758">QCPAbstractLegendItem::clipRect</referencedby>
        <referencedby refid="class_q_c_p_legend_1a4462151bf875ca85fa3815457c683fdc" compoundref="qcustomplot_8cpp" startline="13408" endline="13414">QCPLegend::draw</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a0b96ae0d7bcfa6e38188fcb1e73e143f" compoundref="qcustomplot_8cpp" startline="1993" endline="2011">selectTest</referencedby>
        <referencedby refid="class_q_c_p_legend_1acd7be544c81324e391cfa6be9c413c01" compoundref="qcustomplot_8cpp" startline="13417" endline="13429">QCPLegend::selectTest</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" compoundref="qcustomplot_8cpp" startline="1774" endline="1781">setMargins</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" compoundref="qcustomplot_8cpp" startline="1754" endline="1761">setOuterRect</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" prot="protected" static="no" mutable="no">
        <type>QMargins</type>
        <definition>QMargins QCPLayoutElement::mMargins</definition>
        <argsstring></argsstring>
        <name>mMargins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="692" column="12" bodyfile="qcustomplot.h" bodystart="692" bodyend="-1"/>
        <referencedby refid="class_q_c_p_layout_element_1a005c9f0fe84bc1591a2cf2c46fd477b4" compoundref="qcustomplot_8cpp" startline="2036" endline="2039">calculateAutoMargin</referencedby>
        <referencedby refid="class_q_c_p_layout_grid_1a3720d1b79931b2bdec3f2158a5f0181c" compoundref="qcustomplot_8cpp" startline="2961" endline="2974">QCPLayoutGrid::maximumSizeHint</referencedby>
        <referencedby refid="class_q_c_p_plot_title_1ae24c395b5d3be64b42dcb9e27ed023c4" compoundref="qcustomplot_8cpp" startline="13655" endline="13662">QCPPlotTitle::maximumSizeHint</referencedby>
        <referencedby refid="class_q_c_p_layout_grid_1a9ef4b0d626708a1ada2cfea3a5973b80" compoundref="qcustomplot_8cpp" startline="2946" endline="2958">QCPLayoutGrid::minimumSizeHint</referencedby>
        <referencedby refid="class_q_c_p_plottable_legend_item_1a3adf8154c7e61538656d80464e5695dd" compoundref="qcustomplot_8cpp" startline="12894" endline="12905">QCPPlottableLegendItem::minimumSizeHint</referencedby>
        <referencedby refid="class_q_c_p_plot_title_1aeed5454134516655723bf2d0499dea24" compoundref="qcustomplot_8cpp" startline="13645" endline="13652">QCPPlotTitle::minimumSizeHint</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" compoundref="qcustomplot_8cpp" startline="1774" endline="1781">setMargins</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" compoundref="qcustomplot_8cpp" startline="1754" endline="1761">setOuterRect</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" compoundref="qcustomplot_8cpp" startline="1918" endline="1943">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layout_element_1a5ba71f25d1af4bb092b28df618538e63" prot="protected" static="no" mutable="no">
        <type>QMargins</type>
        <definition>QMargins QCPLayoutElement::mMinimumMargins</definition>
        <argsstring></argsstring>
        <name>mMinimumMargins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="692" column="21" bodyfile="qcustomplot.h" bodystart="692" bodyend="-1"/>
        <referencedby refid="class_q_c_p_layout_element_1a005c9f0fe84bc1591a2cf2c46fd477b4" compoundref="qcustomplot_8cpp" startline="2036" endline="2039">calculateAutoMargin</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a0a8a17abc16b7923159fcc7608f94673" compoundref="qcustomplot_8cpp" startline="1792" endline="1798">setMinimumMargins</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" compoundref="qcustomplot_8cpp" startline="1918" endline="1943">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layout_element_1af61c70354d1275778d68206b2a1b2d36" prot="protected" static="no" mutable="no">
        <type>QCP::MarginSides</type>
        <definition>QCP::MarginSides QCPLayoutElement::mAutoMargins</definition>
        <argsstring></argsstring>
        <name>mAutoMargins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="693" column="20" bodyfile="qcustomplot.h" bodystart="693" bodyend="-1"/>
        <referencedby refid="class_q_c_p_axis_rect_1ae79f18302e6507586aa8c032a5f9ed1c" compoundref="qcustomplot_8cpp" startline="12452" endline="12465">QCPAxisRect::calculateAutoMargin</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" compoundref="qcustomplot_8cpp" startline="1810" endline="1813">setAutoMargins</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" compoundref="qcustomplot_8cpp" startline="1918" endline="1943">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layout_element_1aeafbbc1130e02eee663c5326761fc963" prot="protected" static="no" mutable="no">
        <type>QHash&lt; <ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref>, <ref refid="class_q_c_p_margin_group" kindref="compound">QCPMarginGroup</ref> * &gt;</type>
        <definition>QHash&lt;QCP::MarginSide, QCPMarginGroup*&gt; QCPLayoutElement::mMarginGroups</definition>
        <argsstring></argsstring>
        <name>mMarginGroups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="694" column="9" bodyfile="qcustomplot.h" bodystart="694" bodyend="-1"/>
        <referencedby refid="class_q_c_p_layout_element_1a516e56f76b6bc100e8e71d329866847d" compoundref="qcustomplot_8cpp" startline="1877" endline="1904">setMarginGroup</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" compoundref="qcustomplot_8cpp" startline="1918" endline="1943">update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_q_c_p_layout_element_1a1cdf9df76adcfae45261690aa0ca2198" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCustomPlot</definition>
        <argsstring></argsstring>
        <name>QCustomPlot</name>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="713" column="3" bodyfile="qcustomplot.h" bodystart="713" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_layout_element_1a588aac0a0d721f6c5f10126d8596a20f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCPLayout</definition>
        <argsstring></argsstring>
        <name>QCPLayout</name>
        <param>
          <type><ref refid="class_q_c_p_layout" kindref="compound">QCPLayout</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="714" column="3" bodyfile="qcustomplot.h" bodystart="714" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_layout_element_1ad077a686e85ab6fa03dcb2fd37fc499a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCPMarginGroup</definition>
        <argsstring></argsstring>
        <name>QCPMarginGroup</name>
        <param>
          <type><ref refid="class_q_c_p_margin_group" kindref="compound">QCPMarginGroup</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="715" column="3" bodyfile="qcustomplot.h" bodystart="715" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_layout_element_1a8947f0ada17e672aaba3d424cbbb67e3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPLayoutElement::QCPLayoutElement</definition>
        <argsstring>(QCustomPlot *parentPlot=0)</argsstring>
        <name>QCPLayoutElement</name>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an instance of <ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref> and sets default values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="652" column="12" bodyfile="qcustomplot.cpp" bodystart="1722" bodyend="1733"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a0dc52343920011b3e72d61fc94ed3400" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>QCPLayoutElement::~QCPLayoutElement</definition>
        <argsstring>()</argsstring>
        <name>~QCPLayoutElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="653" column="11" bodyfile="qcustomplot.cpp" bodystart="1735" bodyend="1741"/>
        <references refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" compoundref="qcustomplot_8h" startline="689">mParentLayout</references>
        <references refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a43d7361cb0c5244eabdc962021bffebc" compoundref="qcustomplot_8h" startline="104">QCP::msAll</references>
        <references refid="class_q_c_p_layout_element_1a516e56f76b6bc100e8e71d329866847d" compoundref="qcustomplot_8cpp" startline="1877" endline="1904">setMarginGroup</references>
        <references refid="class_q_c_p_layout_1ada26cd17e56472b0b4d7fbbc96873e4c">QCPLayout::take</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a4efdcbde9d28f410e5ef166c9d691deb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_layout" kindref="compound">QCPLayout</ref> *</type>
        <definition>QCPLayout * QCPLayoutElement::layout</definition>
        <argsstring>() const</argsstring>
        <name>layout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the parent layout of this layout element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="656" column="13" bodyfile="qcustomplot.h" bodystart="656" bodyend="656"/>
        <referencedby refid="class_q_c_p_layout_grid_1adff1a2ca691ed83d2d24a4cd1fe17012" compoundref="qcustomplot_8cpp" startline="2554" endline="2571">QCPLayoutGrid::addElement</referencedby>
        <referencedby refid="class_q_c_p_layout_inset_1ad61529eb576af7f04dff94abb10c745a" compoundref="qcustomplot_8cpp" startline="3312" endline="3325">QCPLayoutInset::addElement</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect QCPLayoutElement::rect</definition>
        <argsstring>() const</argsstring>
        <name>rect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the inner rect of this layout element. The inner rect is the outer rect (<ref refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" kindref="member">setOuterRect</ref>) shrinked by the margins (<ref refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" kindref="member">setMargins</ref>, <ref refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" kindref="member">setAutoMargins</ref>).</para>
<para>In some cases, the area between outer and inner rect is left blank. In other cases the margin area is used to display peripheral graphics while the main content is in the inner rect. This is where automatic margin calculation becomes interesting because it allows the layout element to adapt the margins to the peripheral graphics it wants to draw. For example, <ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref> draws the axis labels and tick labels in the margin area, thus needs to adjust the margins (if <ref refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" kindref="member">setAutoMargins</ref> is enabled) according to the space required by the labels of the axes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="657" column="9" bodyfile="qcustomplot.h" bodystart="657" bodyend="657"/>
        <referencedby refid="class_q_c_p_layout_inset_1a8ff61fbee4a1f0ff45c398009d9f1e56" compoundref="qcustomplot_8cpp" startline="3338" endline="3351">QCPLayoutInset::addElement</referencedby>
        <referencedby refid="class_q_c_p_axis_1a47bdb0a55de6759489ee47665199aebb" compoundref="qcustomplot_8cpp" startline="5991" endline="6033">QCPAxis::calculateMargin</referencedby>
        <referencedby refid="class_q_c_p_axis_1a258b1e783eda5cd14ec5552c696a424e" compoundref="qcustomplot_8cpp" startline="5785" endline="5832">QCPAxis::draw</referencedby>
        <referencedby refid="class_q_c_p_color_scale_axis_rect_private_1adb67bfe9057a9dd9a85f548c274e6d98" compoundref="qcustomplot_8cpp" startline="14262" endline="14277">QCPColorScaleAxisRectPrivate::draw</referencedby>
        <referencedby refid="class_q_custom_plot_1acddbbd8b16dd633f0d94e5a736fbd8cf" compoundref="qcustomplot_8cpp" startline="9616" endline="9637">QCustomPlot::plottableAt</referencedby>
        <referencedby refid="class_q_c_p_layout_inset_1aa487c8378a6f9533567a2e6430099dc3" compoundref="qcustomplot_8cpp" startline="3174" endline="3180">QCPLayoutInset::setInsetRect</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" compoundref="qcustomplot_8cpp" startline="1754" endline="1761">setOuterRect</referencedby>
        <referencedby refid="class_q_c_p_axis_rect_1a255080a017df9083a60a321ef2ba9ed8" compoundref="qcustomplot_8cpp" startline="12128" endline="12151">QCPAxisRect::update</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1ab8f6991ac88243fc582b44b183670334" compoundref="qcustomplot_8cpp" startline="14122" endline="14155">QCPColorScale::update</referencedby>
        <referencedby refid="class_q_c_p_color_scale_axis_rect_private_1a73754cab312aeaddea1bfcc67cc079ac" compoundref="qcustomplot_8cpp" startline="14284" endline="14319">QCPColorScaleAxisRectPrivate::updateGradientImage</referencedby>
        <referencedby refid="class_q_c_p_layout_inset_1a7b33fdd51b18e6db7cea9bfb2d263b4a" compoundref="qcustomplot_8cpp" startline="3183" endline="3222">QCPLayoutInset::updateLayout</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a2a32a12a6161c9dffbadeb9cc585510c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QRect</type>
        <definition>QRect QCPLayoutElement::outerRect</definition>
        <argsstring>() const</argsstring>
        <name>outerRect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="658" column="9" bodyfile="qcustomplot.h" bodystart="658" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1af4ac9450aa2d60863bf3a8ea0c940c9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QMargins</type>
        <definition>QMargins QCPLayoutElement::margins</definition>
        <argsstring>() const</argsstring>
        <name>margins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="659" column="12" bodyfile="qcustomplot.h" bodystart="659" bodyend="659"/>
        <referencedby refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" compoundref="qcustomplot_8cpp" startline="1774" endline="1781">setMargins</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a0a8a17abc16b7923159fcc7608f94673" compoundref="qcustomplot_8cpp" startline="1792" endline="1798">setMinimumMargins</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1ab8f6991ac88243fc582b44b183670334" compoundref="qcustomplot_8cpp" startline="14122" endline="14155">QCPColorScale::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a5eae30e28f28d73fd1c56409c011393e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QMargins</type>
        <definition>QMargins QCPLayoutElement::minimumMargins</definition>
        <argsstring>() const</argsstring>
        <name>minimumMargins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="660" column="12" bodyfile="qcustomplot.h" bodystart="660" bodyend="660"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a2585bc8c5cc70ee712909751a2fc8909" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QCP::MarginSides</type>
        <definition>QCP::MarginSides QCPLayoutElement::autoMargins</definition>
        <argsstring>() const</argsstring>
        <name>autoMargins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="661" column="20" bodyfile="qcustomplot.h" bodystart="661" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a60d4295468a2b57fe91f6f68e20c3993" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize QCPLayoutElement::minimumSize</definition>
        <argsstring>() const</argsstring>
        <name>minimumSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="662" column="9" bodyfile="qcustomplot.h" bodystart="662" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1afb9503858d4aa0f3b9f1794b084fb40a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QSize</type>
        <definition>QSize QCPLayoutElement::maximumSize</definition>
        <argsstring>() const</argsstring>
        <name>maximumSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="663" column="9" bodyfile="qcustomplot.h" bodystart="663" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a8af6bcf81e12fe1d6f44490f34522b90" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_margin_group" kindref="compound">QCPMarginGroup</ref> *</type>
        <definition>QCPMarginGroup* QCPLayoutElement::marginGroup</definition>
        <argsstring>(QCP::MarginSide side) const</argsstring>
        <name>marginGroup</name>
        <param>
          <type><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref></type>
          <declname>side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="664" column="18" bodyfile="qcustomplot.h" bodystart="664" bodyend="664"/>
        <referencedby refid="class_q_c_p_layout_element_1a516e56f76b6bc100e8e71d329866847d" compoundref="qcustomplot_8cpp" startline="1877" endline="1904">setMarginGroup</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1ac8d1139a81a1625860647e307ae2b733" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QHash&lt; <ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref>, <ref refid="class_q_c_p_margin_group" kindref="compound">QCPMarginGroup</ref> * &gt;</type>
        <definition>QHash&lt;QCP::MarginSide, QCPMarginGroup*&gt; QCPLayoutElement::marginGroups</definition>
        <argsstring>() const</argsstring>
        <name>marginGroups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="665" column="9" bodyfile="qcustomplot.h" bodystart="665" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::setOuterRect</definition>
        <argsstring>(const QRect &amp;rect)</argsstring>
        <name>setOuterRect</name>
        <param>
          <type>const QRect &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the outer rect of this layout element. If the layout element is inside a layout, the layout sets the position and size of this layout element using this function.</para>
<para>Calling this function externally has no effect, since the layout will overwrite any changes to the outer rect upon the next replot.</para>
<para>The layout element will adapt its inner <ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">rect</ref> by applying the margins inward to the outer rect.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">rect</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="668" column="8" bodyfile="qcustomplot.cpp" bodystart="1754" bodyend="1761"/>
        <references refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" compoundref="qcustomplot_8h" startline="692">mMargins</references>
        <references refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" compoundref="qcustomplot_8h" startline="691">mOuterRect</references>
        <references refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" compoundref="qcustomplot_8h" startline="691">mRect</references>
        <references refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" compoundref="qcustomplot_8h" startline="657" endline="657">rect</references>
        <referencedby refid="class_q_custom_plot_1a3f9bc4b939dd8aaba9339fd09f273fc4" compoundref="qcustomplot_8cpp" startline="9362" endline="9367">QCustomPlot::setViewport</referencedby>
        <referencedby refid="class_q_c_p_axis_rect_1a255080a017df9083a60a321ef2ba9ed8" compoundref="qcustomplot_8cpp" startline="12128" endline="12151">QCPAxisRect::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::setMargins</definition>
        <argsstring>(const QMargins &amp;margins)</argsstring>
        <name>setMargins</name>
        <param>
          <type>const QMargins &amp;</type>
          <declname>margins</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the margins of this layout element. If <ref refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" kindref="member">setAutoMargins</ref> is disabled for some or all sides, this function is used to manually set the margin on those sides. Sides that are still set to be handled automatically are ignored and may have any value in <emphasis>margins</emphasis>.</para>
<para>The margin is the distance between the outer rect (controlled by the parent layout via <ref refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" kindref="member">setOuterRect</ref>) and the inner <ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">rect</ref> (which usually contains the main content of this layout element).</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" kindref="member">setAutoMargins</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="669" column="8" bodyfile="qcustomplot.cpp" bodystart="1774" bodyend="1781"/>
        <references refid="class_q_c_p_layout_element_1af4ac9450aa2d60863bf3a8ea0c940c9d" compoundref="qcustomplot_8h" startline="659" endline="659">margins</references>
        <references refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" compoundref="qcustomplot_8h" startline="692">mMargins</references>
        <references refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" compoundref="qcustomplot_8h" startline="691">mOuterRect</references>
        <references refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" compoundref="qcustomplot_8h" startline="691">mRect</references>
        <referencedby refid="class_q_c_p_abstract_legend_item_1afaff87610e8da0fa238ecf552872d774" compoundref="qcustomplot_8cpp" startline="12647" endline="12659">QCPAbstractLegendItem::QCPAbstractLegendItem</referencedby>
        <referencedby refid="class_q_c_p_legend_1a0001a456989bd07ea378883651fabd72" compoundref="qcustomplot_8cpp" startline="12953" endline="12974">QCPLegend::QCPLegend</referencedby>
        <referencedby refid="class_q_c_p_plot_title_1aaae17bee2de6d6a1e695f76fb1abed03" compoundref="qcustomplot_8cpp" startline="13513" endline="13529">QCPPlotTitle::QCPPlotTitle</referencedby>
        <referencedby refid="class_q_custom_plot_1a45b99626558651a6428b83972b0b34b8" compoundref="qcustomplot_8cpp" startline="9017" endline="9087">QCustomPlot::QCustomPlot</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" compoundref="qcustomplot_8cpp" startline="1918" endline="1943">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a0a8a17abc16b7923159fcc7608f94673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::setMinimumMargins</definition>
        <argsstring>(const QMargins &amp;margins)</argsstring>
        <name>setMinimumMargins</name>
        <param>
          <type>const QMargins &amp;</type>
          <declname>margins</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If <ref refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" kindref="member">setAutoMargins</ref> is enabled on some or all margins, this function is used to provide minimum values for those margins.</para>
<para>The minimum values are not enforced on margin sides that were set to be under manual control via <ref refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" kindref="member">setAutoMargins</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" kindref="member">setAutoMargins</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="670" column="8" bodyfile="qcustomplot.cpp" bodystart="1792" bodyend="1798"/>
        <references refid="class_q_c_p_layout_element_1af4ac9450aa2d60863bf3a8ea0c940c9d" compoundref="qcustomplot_8h" startline="659" endline="659">margins</references>
        <references refid="class_q_c_p_layout_element_1a5ba71f25d1af4bb092b28df618538e63" compoundref="qcustomplot_8h" startline="692">mMinimumMargins</references>
        <referencedby refid="class_q_c_p_axis_rect_1a60b31dece805462c1b82eea2e69ba042" compoundref="qcustomplot_8cpp" startline="11726" endline="11768">QCPAxisRect::QCPAxisRect</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1aa8debce1be38b54287c04d4f584394b4" compoundref="qcustomplot_8cpp" startline="13810" endline="13820">QCPColorScale::QCPColorScale</referencedby>
        <referencedby refid="class_q_c_p_color_scale_axis_rect_private_1ad3b242f75dd2b33581364a4e668a80db" compoundref="qcustomplot_8cpp" startline="14225" endline="14256">QCPColorScaleAxisRectPrivate::QCPColorScaleAxisRectPrivate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::setAutoMargins</definition>
        <argsstring>(QCP::MarginSides sides)</argsstring>
        <name>setAutoMargins</name>
        <param>
          <type>QCP::MarginSides</type>
          <declname>sides</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets on which sides the margin shall be calculated automatically. If a side is calculated automatically, a minimum margin value may be provided with <ref refid="class_q_c_p_layout_element_1a0a8a17abc16b7923159fcc7608f94673" kindref="member">setMinimumMargins</ref>. If a side is set to be controlled manually, the value may be specified with <ref refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" kindref="member">setMargins</ref>.</para>
<para>Margin sides that are under automatic control may participate in a <ref refid="class_q_c_p_margin_group" kindref="compound">QCPMarginGroup</ref> (see <ref refid="class_q_c_p_layout_element_1a516e56f76b6bc100e8e71d329866847d" kindref="member">setMarginGroup</ref>), to synchronize (align) it with other layout elements in the plot.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_layout_element_1a0a8a17abc16b7923159fcc7608f94673" kindref="member">setMinimumMargins</ref>, <ref refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" kindref="member">setMargins</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="671" column="8" bodyfile="qcustomplot.cpp" bodystart="1810" bodyend="1813"/>
        <references refid="class_q_c_p_layout_element_1af61c70354d1275778d68206b2a1b2d36" compoundref="qcustomplot_8h" startline="693">mAutoMargins</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::setMinimumSize</definition>
        <argsstring>(const QSize &amp;size)</argsstring>
        <name>setMinimumSize</name>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the minimum size for the inner <ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">rect</ref> of this layout element. A parent layout tries to respect the <emphasis>size</emphasis> here by changing row/column sizes in the layout accordingly.</para>
<para>If the parent layout size is not sufficient to satisfy all minimum size constraints of its child layout elements, the layout may set a size that is actually smaller than <emphasis>size</emphasis>. <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> propagates the layout&apos;s size constraints to the outside by setting its own minimum QWidget size accordingly, so violations of <emphasis>size</emphasis> should be exceptions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="672" column="8" bodyfile="qcustomplot.cpp" bodystart="1824" bodyend="1832"/>
        <references refid="class_q_c_p_layout_element_1affef747c81632de33f08483b7fd10d01" compoundref="qcustomplot_8h" startline="690">mMinimumSize</references>
        <references refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" compoundref="qcustomplot_8h" startline="689">mParentLayout</references>
        <references refid="class_q_c_p_layout_1aeac66a292f65cf7f8adf94eb92345b3e" compoundref="qcustomplot_8cpp" startline="2245" endline="2251">QCPLayout::sizeConstraintsChanged</references>
        <referencedby refid="class_q_c_p_axis_rect_1a60b31dece805462c1b82eea2e69ba042" compoundref="qcustomplot_8cpp" startline="11726" endline="11768">QCPAxisRect::QCPAxisRect</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a8e0447614a0bf92de9a7304588c6b96e" compoundref="qcustomplot_8cpp" startline="1838" endline="1841">setMinimumSize</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1ab8f6991ac88243fc582b44b183670334" compoundref="qcustomplot_8cpp" startline="14122" endline="14155">QCPColorScale::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a8e0447614a0bf92de9a7304588c6b96e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::setMinimumSize</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>setMinimumSize</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Sets the minimum size for the inner <ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">rect</ref> of this layout element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="673" column="8" bodyfile="qcustomplot.cpp" bodystart="1838" bodyend="1841"/>
        <references refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" compoundref="qcustomplot_8cpp" startline="1824" endline="1832">setMinimumSize</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::setMaximumSize</definition>
        <argsstring>(const QSize &amp;size)</argsstring>
        <name>setMaximumSize</name>
        <param>
          <type>const QSize &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the maximum size for the inner <ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">rect</ref> of this layout element. A parent layout tries to respect the <emphasis>size</emphasis> here by changing row/column sizes in the layout accordingly. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="674" column="8" bodyfile="qcustomplot.cpp" bodystart="1847" bodyend="1855"/>
        <references refid="class_q_c_p_layout_element_1a64a387973fd4addac842028c89088998" compoundref="qcustomplot_8h" startline="690">mMaximumSize</references>
        <references refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" compoundref="qcustomplot_8h" startline="689">mParentLayout</references>
        <references refid="class_q_c_p_layout_1aeac66a292f65cf7f8adf94eb92345b3e" compoundref="qcustomplot_8cpp" startline="2245" endline="2251">QCPLayout::sizeConstraintsChanged</references>
        <referencedby refid="class_q_c_p_layout_element_1a03e0e9c48f230217c529b0819f832d84" compoundref="qcustomplot_8cpp" startline="1861" endline="1864">setMaximumSize</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1ab8f6991ac88243fc582b44b183670334" compoundref="qcustomplot_8cpp" startline="14122" endline="14155">QCPColorScale::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a03e0e9c48f230217c529b0819f832d84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::setMaximumSize</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>setMaximumSize</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Sets the maximum size for the inner <ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">rect</ref> of this layout element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="675" column="8" bodyfile="qcustomplot.cpp" bodystart="1861" bodyend="1864"/>
        <references refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" compoundref="qcustomplot_8cpp" startline="1847" endline="1855">setMaximumSize</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a516e56f76b6bc100e8e71d329866847d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::setMarginGroup</definition>
        <argsstring>(QCP::MarginSides sides, QCPMarginGroup *group)</argsstring>
        <name>setMarginGroup</name>
        <param>
          <type>QCP::MarginSides</type>
          <declname>sides</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_margin_group" kindref="compound">QCPMarginGroup</ref> *</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the margin <emphasis>group</emphasis> of the specified margin <emphasis>sides</emphasis>.</para>
<para>Margin groups allow synchronizing specified margins across layout elements, see the documentation of <ref refid="class_q_c_p_margin_group" kindref="compound">QCPMarginGroup</ref>.</para>
<para>To unset the margin group of <emphasis>sides</emphasis>, set <emphasis>group</emphasis> to 0.</para>
<para>Note that margin groups only work for margin sides that are set to automatic (<ref refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" kindref="member">setAutoMargins</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="676" column="8" bodyfile="qcustomplot.cpp" bodystart="1877" bodyend="1904"/>
        <references refid="class_q_c_p_margin_group_1acb9c3a35acec655c2895b7eb95ee0524" compoundref="qcustomplot_8cpp" startline="1617" endline="1623">QCPMarginGroup::addChild</references>
        <references refid="class_q_c_p_layout_element_1a8af6bcf81e12fe1d6f44490f34522b90" compoundref="qcustomplot_8h" startline="664" endline="664">marginGroup</references>
        <references refid="class_q_c_p_layout_element_1aeafbbc1130e02eee663c5326761fc963" compoundref="qcustomplot_8h" startline="694">mMarginGroups</references>
        <references refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5241d8eac2bab9524a38889f576179cc" compoundref="qcustomplot_8h" startline="103">QCP::msBottom</references>
        <references refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a9500c8bfcc9e80b9dff0a8e00e867f07" compoundref="qcustomplot_8h" startline="100">QCP::msLeft</references>
        <references refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a93c719593bb2b94ed244d52c86d83b65" compoundref="qcustomplot_8h" startline="101">QCP::msRight</references>
        <references refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5db8fb0d0b0ecf0d611c2602a348e8a0" compoundref="qcustomplot_8h" startline="102">QCP::msTop</references>
        <references refid="class_q_c_p_margin_group_1a20ab3286062957d99b58db683fe725b0" compoundref="qcustomplot_8cpp" startline="1631" endline="1635">QCPMarginGroup::removeChild</references>
        <referencedby refid="class_q_c_p_layout_element_1a0dc52343920011b3e72d61fc94ed3400" compoundref="qcustomplot_8cpp" startline="1735" endline="1741">~QCPLayoutElement</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::update</definition>
        <argsstring>(UpdatePhase phase)</argsstring>
        <name>update</name>
        <reimplementedby refid="class_q_c_p_layout_1a34ab477e820537ded7bade4399c482fd">update</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_rect_1a255080a017df9083a60a321ef2ba9ed8">update</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_1ab8f6991ac88243fc582b44b183670334">update</reimplementedby>
        <param>
          <type><ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374d" kindref="member">UpdatePhase</ref></type>
          <declname>phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Updates the layout element and sub-elements. This function is automatically called before every replot by the parent layout element. It is called multiple times, once for every <ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374d" kindref="member">UpdatePhase</ref>. The phases are run through in the order of the enum values. For details about what happens at the different phases, see the documentation of <ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374d" kindref="member">UpdatePhase</ref>.</para>
<para>Layout elements that have child elements should call the <ref refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" kindref="member">update</ref> method of their child elements, and pass the current <emphasis>phase</emphasis> unchanged.</para>
<para>The default implementation executes the automatic margin mechanism in the <ref refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da288cb59a92280e47261a341f2813e676" kindref="member">upMargins</ref> phase. Subclasses should make sure to call the base class implementation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="679" column="16" bodyfile="qcustomplot.cpp" bodystart="1918" bodyend="1943"/>
        <references refid="class_q_c_p_layout_element_1a005c9f0fe84bc1591a2cf2c46fd477b4" compoundref="qcustomplot_8cpp" startline="2036" endline="2039">calculateAutoMargin</references>
        <references refid="namespace_q_c_p_1a23a2679d3495c444acc26acc61e35b5b" compoundref="qcustomplot_8h" startline="213" endline="224">QCP::getMarginValue</references>
        <references refid="class_q_c_p_layout_element_1af61c70354d1275778d68206b2a1b2d36" compoundref="qcustomplot_8h" startline="693">mAutoMargins</references>
        <references refid="class_q_c_p_layout_element_1aeafbbc1130e02eee663c5326761fc963" compoundref="qcustomplot_8h" startline="694">mMarginGroups</references>
        <references refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" compoundref="qcustomplot_8h" startline="692">mMargins</references>
        <references refid="class_q_c_p_layout_element_1a5ba71f25d1af4bb092b28df618538e63" compoundref="qcustomplot_8h" startline="692">mMinimumMargins</references>
        <references refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5241d8eac2bab9524a38889f576179cc" compoundref="qcustomplot_8h" startline="103">QCP::msBottom</references>
        <references refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a9500c8bfcc9e80b9dff0a8e00e867f07" compoundref="qcustomplot_8h" startline="100">QCP::msLeft</references>
        <references refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a80aa4149f16dabd538f8b2e3d42c42d5" compoundref="qcustomplot_8h" startline="105">QCP::msNone</references>
        <references refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a93c719593bb2b94ed244d52c86d83b65" compoundref="qcustomplot_8h" startline="101">QCP::msRight</references>
        <references refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54a5db8fb0d0b0ecf0d611c2602a348e8a0" compoundref="qcustomplot_8h" startline="102">QCP::msTop</references>
        <references refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" compoundref="qcustomplot_8cpp" startline="1774" endline="1781">setMargins</references>
        <references refid="namespace_q_c_p_1afbf6e3084c108f2bb4372107945ee82f" compoundref="qcustomplot_8h" startline="193" endline="204">QCP::setMarginValue</references>
        <references refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da288cb59a92280e47261a341f2813e676" compoundref="qcustomplot_8h" startline="647">upMargins</references>
        <referencedby refid="class_q_c_p_layout_1a34ab477e820537ded7bade4399c482fd" compoundref="qcustomplot_8cpp" startline="2130" endline="2145">QCPLayout::update</referencedby>
        <referencedby refid="class_q_c_p_axis_rect_1a255080a017df9083a60a321ef2ba9ed8" compoundref="qcustomplot_8cpp" startline="12128" endline="12151">QCPAxisRect::update</referencedby>
        <referencedby refid="class_q_c_p_color_scale_1ab8f6991ac88243fc582b44b183670334" compoundref="qcustomplot_8cpp" startline="14122" endline="14155">QCPColorScale::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1ab3fdb5c9a5189bb2dac10d4d25329cd8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSize</type>
        <definition>QSize QCPLayoutElement::minimumSizeHint</definition>
        <argsstring>() const</argsstring>
        <name>minimumSizeHint</name>
        <reimplementedby refid="class_q_c_p_layout_grid_1a9ef4b0d626708a1ada2cfea3a5973b80">minimumSizeHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_plottable_legend_item_1a3adf8154c7e61538656d80464e5695dd">minimumSizeHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_plot_title_1aeed5454134516655723bf2d0499dea24">minimumSizeHint</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the minimum size this layout element (the inner <ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">rect</ref>) may be compressed to.</para>
<para>if a minimum size (<ref refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" kindref="member">setMinimumSize</ref>) was not set manually, parent layouts consult this function to determine the minimum allowed size of this layout element. (A manual minimum size is considered set if it is non-zero.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="680" column="17" bodyfile="qcustomplot.cpp" bodystart="1952" bodyend="1955"/>
        <references refid="class_q_c_p_layout_element_1affef747c81632de33f08483b7fd10d01" compoundref="qcustomplot_8h" startline="690">mMinimumSize</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1ab5ce2ba22b36d9a3b70a1be562c326e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QSize</type>
        <definition>QSize QCPLayoutElement::maximumSizeHint</definition>
        <argsstring>() const</argsstring>
        <name>maximumSizeHint</name>
        <reimplementedby refid="class_q_c_p_layout_grid_1a3720d1b79931b2bdec3f2158a5f0181c">maximumSizeHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_plot_title_1ae24c395b5d3be64b42dcb9e27ed023c4">maximumSizeHint</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the maximum size this layout element (the inner <ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">rect</ref>) may be expanded to.</para>
<para>if a maximum size (<ref refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" kindref="member">setMaximumSize</ref>) was not set manually, parent layouts consult this function to determine the maximum allowed size of this layout element. (A manual maximum size is considered set if it is smaller than Qt&apos;s QWIDGETSIZE_MAX.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="681" column="17" bodyfile="qcustomplot.cpp" bodystart="1964" bodyend="1967"/>
        <references refid="class_q_c_p_layout_element_1a64a387973fd4addac842028c89088998" compoundref="qcustomplot_8h" startline="690">mMaximumSize</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a76dec8cb31e498994a944d7647a43309" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QList&lt; <ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref> * &gt;</type>
        <definition>QList&lt; QCPLayoutElement * &gt; QCPLayoutElement::elements</definition>
        <argsstring>(bool recursive) const</argsstring>
        <name>elements</name>
        <reimplementedby refid="class_q_c_p_layout_1adc9ebc73fc215f9cc22796712a251ff4">elements</reimplementedby>
        <reimplementedby refid="class_q_c_p_layout_grid_1a20a745d013de4c89cf5de8004a5a36f7">elements</reimplementedby>
        <reimplementedby refid="class_q_c_p_axis_rect_1a40c0b3b17eb317ff4d393b7cb9b082a2">elements</reimplementedby>
        <param>
          <type>bool</type>
          <declname>recursive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a list of all child elements in this layout element. If <emphasis>recursive</emphasis> is true, all sub-child elements are included in the list, too.</para>
<para><simplesect kind="warning"><para>There may be entries with value 0 in the returned list. (For example, <ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref> may have empty cells which yield 0 at the respective index.) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="682" column="17" bodyfile="qcustomplot.cpp" bodystart="1976" bodyend="1980"/>
        <referencedby refid="class_q_custom_plot_1a12af771429e2d7e313c8c5d5fca068fe" compoundref="qcustomplot_8cpp" startline="10227" endline="10248">QCustomPlot::axisRects</referencedby>
        <referencedby refid="class_q_custom_plot_1afaa1d304e0287d140fd238e90889ef3c" compoundref="qcustomplot_8cpp" startline="10259" endline="10277">QCustomPlot::layoutElementAt</referencedby>
        <referencedby refid="class_q_c_p_layout_element_1a1478899e80e8244b411e96ec3b2e5ce2" compoundref="qcustomplot_8cpp" startline="2018" endline="2025">parentPlotInitialized</referencedby>
        <referencedby refid="class_q_custom_plot_1ac87624ddff1cbf4064781a8e8ae321c4" compoundref="qcustomplot_8cpp" startline="10308" endline="10333">QCustomPlot::selectedLegends</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a0b96ae0d7bcfa6e38188fcb1e73e143f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QCPLayoutElement::selectTest</definition>
        <argsstring>(const QPointF &amp;pos, bool onlySelectable, QVariant *details=0) const</argsstring>
        <name>selectTest</name>
        <reimplements refid="class_q_c_p_layerable_1a04db8351fefd44cfdb77958e75c6288e">selectTest</reimplements>
        <reimplementedby refid="class_q_c_p_layout_inset_1afcd56d5d1b8853838cdc535f1904f68a">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_legend_item_1ac834bf9003c491e5064a31e2a7de418d">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_legend_1acd7be544c81324e391cfa6be9c413c01">selectTest</reimplementedby>
        <reimplementedby refid="class_q_c_p_plot_title_1aae4bcb2401e6947ea0abd3c960488d35">selectTest</reimplementedby>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelectable</declname>
        </param>
        <param>
          <type>QVariant *</type>
          <declname>details</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Layout elements are sensitive to events inside their outer rect. If <emphasis>pos</emphasis> is within the outer rect, this method returns a value corresponding to 0.99 times the parent plot&apos;s selection tolerance. However, layout elements are not selectable by default. So if <emphasis>onlySelectable</emphasis> is true, -1.0 is returned.</para>
<para>See <ref refid="class_q_c_p_layerable_1a04db8351fefd44cfdb77958e75c6288e" kindref="member">QCPLayerable::selectTest</ref> for a general explanation of this virtual method.</para>
<para><ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref> subclasses may reimplement this method to provide more specific selection test behaviour. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="685" column="18" bodyfile="qcustomplot.cpp" bodystart="1993" bodyend="2011"/>
        <references refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" compoundref="qcustomplot_8h" startline="691">mOuterRect</references>
        <references refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" compoundref="qcustomplot_8h" startline="447">QCPLayerable::mParentPlot</references>
        <references refid="class_q_custom_plot_1a5441d11013afeaf4b8f2ea06e8624a25" compoundref="qcustomplot_8h" startline="1728" endline="1728">QCustomPlot::selectionTolerance</references>
        <referencedby refid="class_q_custom_plot_1afaa1d304e0287d140fd238e90889ef3c" compoundref="qcustomplot_8cpp" startline="10259" endline="10277">QCustomPlot::layoutElementAt</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_layout_element_1a005c9f0fe84bc1591a2cf2c46fd477b4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int QCPLayoutElement::calculateAutoMargin</definition>
        <argsstring>(QCP::MarginSide side)</argsstring>
        <name>calculateAutoMargin</name>
        <reimplementedby refid="class_q_c_p_axis_rect_1ae79f18302e6507586aa8c032a5f9ed1c">calculateAutoMargin</reimplementedby>
        <param>
          <type><ref refid="namespace_q_c_p_1a7e487e3e2ccb62ab7771065bab7cae54" kindref="member">QCP::MarginSide</ref></type>
          <declname>side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="697" column="15" bodyfile="qcustomplot.cpp" bodystart="2036" bodyend="2039"/>
        <references refid="namespace_q_c_p_1a23a2679d3495c444acc26acc61e35b5b" compoundref="qcustomplot_8h" startline="213" endline="224">QCP::getMarginValue</references>
        <references refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" compoundref="qcustomplot_8h" startline="692">mMargins</references>
        <references refid="class_q_c_p_layout_element_1a5ba71f25d1af4bb092b28df618538e63" compoundref="qcustomplot_8h" startline="692">mMinimumMargins</references>
        <referencedby refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" compoundref="qcustomplot_8cpp" startline="1918" endline="1943">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a2d82ea21fe0ee628f177bd824bc51a71" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::mousePressEvent</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>mousePressEvent</name>
        <reimplementedby refid="class_q_c_p_axis_rect_1a77501dbeccdac7256f7979b05077c04e">mousePressEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_1a5df6ad81b2ad045878d276c2d5be7120">mousePressEvent</reimplementedby>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This event is called, if the mouse was pressed while being inside the outer rect of this layout element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="699" column="16" bodyfile="qcustomplot.h" bodystart="699" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a14f4acf58cdb8dd2c6c571479c4c4a40" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::mouseMoveEvent</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>mouseMoveEvent</name>
        <reimplementedby refid="class_q_c_p_axis_rect_1a4baf3d5dd69166788f6ceda0ea182c6e">mouseMoveEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_1a3aca469d531ce7b5882de73590aa0de6">mouseMoveEvent</reimplementedby>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This event is called, if the mouse is moved inside the outer rect of this layout element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="700" column="16" bodyfile="qcustomplot.h" bodystart="700" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1ae526ac828cce1e5bb94eaa85776d7404" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::mouseReleaseEvent</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>mouseReleaseEvent</name>
        <reimplementedby refid="class_q_c_p_axis_rect_1adf6c99780cea55ab39459a6eaad3a94a">mouseReleaseEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_1a0916613d20901950fc6d00c6f99fe0a1">mouseReleaseEvent</reimplementedby>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This event is called, if the mouse was previously pressed inside the outer rect of this layout element and is now released. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="701" column="16" bodyfile="qcustomplot.h" bodystart="701" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1aa8fef6486cb6ceb7c82cbdd50bc32ee9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::mouseDoubleClickEvent</definition>
        <argsstring>(QMouseEvent *event)</argsstring>
        <name>mouseDoubleClickEvent</name>
        <param>
          <type>QMouseEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This event is called, if the mouse is double-clicked inside the outer rect of this layout element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="702" column="16" bodyfile="qcustomplot.h" bodystart="702" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a300521d2fd18a893c1b85f6be11ce2bf" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::wheelEvent</definition>
        <argsstring>(QWheelEvent *event)</argsstring>
        <name>wheelEvent</name>
        <reimplementedby refid="class_q_c_p_axis_rect_1a5acf41fc30aa68ea263246ecfad85c31">wheelEvent</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_1ab398e14c01240f3dc855884fe9e1ee8c">wheelEvent</reimplementedby>
        <param>
          <type>QWheelEvent *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This event is called, if the mouse wheel is scrolled while the cursor is inside the rect of this layout element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="703" column="16" bodyfile="qcustomplot.h" bodystart="703" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1aeb35a17f57baa24b4c2d7614316e4dc0" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPLayoutElement::applyDefaultAntialiasingHint</definition>
        <argsstring>(QCPPainter *painter) const</argsstring>
        <name>applyDefaultAntialiasingHint</name>
        <reimplements refid="class_q_c_p_layerable_1afdf83ddc6a265cbf4c89fe99d3d93473">applyDefaultAntialiasingHint</reimplements>
        <reimplementedby refid="class_q_c_p_axis_rect_1aa954ebda9ddbc74146ab9b47abad277b">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_legend_item_1a8e69a5e58a526ba0cb2c7619e7ba4da9">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_legend_1a1aea4fc7cdde130a58d0d225440cdbbb">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_plot_title_1ae225a89ab1f62e8a364e01f12c13c4d3">applyDefaultAntialiasingHint</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_1adcd2fa0d7f53d73788ec1cf54e44a6e2">applyDefaultAntialiasingHint</reimplementedby>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="706" column="16" bodyfile="qcustomplot.h" bodystart="706" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a547bcc1e6e2be5645ca781efe0834653" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPLayoutElement::draw</definition>
        <argsstring>(QCPPainter *painter)</argsstring>
        <name>draw</name>
        <reimplements refid="class_q_c_p_layerable_1aecf2f7087482d4b6a78cb2770e5ed12d">draw</reimplements>
        <reimplementedby refid="class_q_c_p_axis_rect_1afb1bbbbda8345cd2710d92ee48440b53">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_plottable_legend_item_1a68a781c3de4f9959fdf82075052d43aa">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_legend_1a4462151bf875ca85fa3815457c683fdc">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_plot_title_1ae4f1f8d24489628dabb7256363b097d2">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_color_scale_axis_rect_private_1adb67bfe9057a9dd9a85f548c274e6d98">draw</reimplementedby>
        <reimplementedby refid="class_q_c_p_abstract_legend_item_1a97dedc084c672359710f16b31d046d1d">draw</reimplementedby>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="707" column="16" bodyfile="qcustomplot.h" bodystart="707" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layout_element_1a1478899e80e8244b411e96ec3b2e5ce2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPLayoutElement::parentPlotInitialized</definition>
        <argsstring>(QCustomPlot *parentPlot)</argsstring>
        <name>parentPlotInitialized</name>
        <reimplements refid="class_q_c_p_layerable_1ab20b7dbd8e0249ed61adb9622c427382">parentPlotInitialized</reimplements>
        <reimplementedby refid="class_q_c_p_legend_1a4d552c63d82742d77fb7f177bae7b1ba">parentPlotInitialized</reimplementedby>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="708" column="16" bodyfile="qcustomplot.cpp" bodystart="2018" bodyend="2025"/>
        <references refid="class_q_c_p_layout_element_1a76dec8cb31e498994a944d7647a43309" compoundref="qcustomplot_8cpp" startline="1976" endline="1980">elements</references>
        <references refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" compoundref="qcustomplot_8cpp" startline="1082" endline="1095">QCPLayerable::initializeParentPlot</references>
        <references refid="class_q_c_p_layerable_1a473edb813a4c1929d6b6a8fe3ff3faf7" compoundref="qcustomplot_8h" startline="424" endline="424">QCPLayerable::parentPlot</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The abstract base class for all objects that form the layout system. </para>
    </briefdescription>
    <detaileddescription>
<para>This is an abstract base class. As such, it can&apos;t be instantiated directly, rather use one of its subclasses.</para>
<para>A Layout element is a rectangular object which can be placed in layouts. It has an outer rect (<ref refid="class_q_c_p_layout_element_1a2a32a12a6161c9dffbadeb9cc585510c" kindref="member">QCPLayoutElement::outerRect</ref>) and an inner rect (<ref refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" kindref="member">QCPLayoutElement::rect</ref>). The difference between outer and inner rect is called its margin. The margin can either be set to automatic or manual (<ref refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" kindref="member">setAutoMargins</ref>) on a per-side basis. If a side is set to manual, that margin can be set explicitly with <ref refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" kindref="member">setMargins</ref> and will stay fixed at that value. If it&apos;s set to automatic, the layout element subclass will control the value itself (via <ref refid="class_q_c_p_layout_element_1a005c9f0fe84bc1591a2cf2c46fd477b4" kindref="member">calculateAutoMargin</ref>).</para>
<para>Layout elements can be placed in layouts (base class <ref refid="class_q_c_p_layout" kindref="compound">QCPLayout</ref>) like <ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref>. The top level layout is reachable via <ref refid="class_q_custom_plot_1af1a1f1f571237deb7c2bd34a5e9f018f" kindref="member">QCustomPlot::plotLayout</ref>, and is a <ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref>. Since <ref refid="class_q_c_p_layout" kindref="compound">QCPLayout</ref> itself derives from <ref refid="class_q_c_p_layout_element" kindref="compound">QCPLayoutElement</ref>, layouts can be nested.</para>
<para>Thus in <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> one can divide layout elements into two categories: The ones that are invisible by themselves, because they don&apos;t draw anything. Their only purpose is to manage the position and size of other layout elements. This category of layout elements usually use <ref refid="class_q_c_p_layout" kindref="compound">QCPLayout</ref> as base class. Then there is the category of layout elements which actually draw something. For example, <ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref>, <ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref> and <ref refid="class_q_c_p_plot_title" kindref="compound">QCPPlotTitle</ref> are of this category. This does not necessarily mean that the latter category can&apos;t have child layout elements. <ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref> for instance, actually derives from <ref refid="class_q_c_p_layout_grid" kindref="compound">QCPLayoutGrid</ref> and the individual legend items are child layout elements in the grid layout. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>QCPColorScaleAxisRectPrivate</label>
        <link refid="class_q_c_p_color_scale_axis_rect_private"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QCPPlotTitle</label>
        <link refid="class_q_c_p_plot_title"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="11">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QCPColorScale</label>
        <link refid="class_q_c_p_color_scale"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QCPAbstractLegendItem</label>
        <link refid="class_q_c_p_abstract_legend_item"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QCPPlottableLegendItem</label>
        <link refid="class_q_c_p_plottable_legend_item"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>#mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="10">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
      <node id="16">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QCPLineEnding</label>
        <link refid="class_q_c_p_line_ending"/>
      </node>
      <node id="8">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>QCPAxisPainterPrivate</label>
        <link refid="class_q_c_p_axis_painter_private"/>
        <childnode refid="12" relation="usage">
          <edgelabel>+lowerEnding</edgelabel>
          <edgelabel>+upperEnding</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QWidget</label>
      </node>
      <node id="4">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>#mLayer</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>#mRange</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>#mAxisPainter</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>#mGrid</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>#mAxisRect</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>#mInsetLayout</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>#mDragStartHorzRange</edgelabel>
          <edgelabel>#mDragStartVertRange</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QCustomPlot</label>
        <link refid="class_q_custom_plot"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>#mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>#mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>+xAxis</edgelabel>
          <edgelabel>+xAxis2</edgelabel>
          <edgelabel>+yAxis</edgelabel>
          <edgelabel>+yAxis2</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>+legend</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="629" column="1" bodyfile="qcustomplot.h" bodystart="630" bodyend="716"/>
    <listofallmembers>
      <member refid="class_q_c_p_layerable_1a71cbd212fde2703cee076e204a475709" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>antialiased</name></member>
      <member refid="class_q_c_p_layerable_1acb663e375d2d36dc5c55021ee5a2119b" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>applyAntialiasingHint</name></member>
      <member refid="class_q_c_p_layout_element_1aeb35a17f57baa24b4c2d7614316e4dc0" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="class_q_c_p_layout_element_1a2585bc8c5cc70ee712909751a2fc8909" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>autoMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a005c9f0fe84bc1591a2cf2c46fd477b4" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>calculateAutoMargin</name></member>
      <member refid="class_q_c_p_layerable_1acbcfc9ecc75433747b1978a77b1864b3" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>clipRect</name></member>
      <member refid="class_q_c_p_layerable_1ae546370644a5551c76af739afc008bee" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>deselectEvent</name></member>
      <member refid="class_q_c_p_layout_element_1a547bcc1e6e2be5645ca781efe0834653" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>draw</name></member>
      <member refid="class_q_c_p_layout_element_1a76dec8cb31e498994a944d7647a43309" prot="public" virt="virtual"><scope>QCPLayoutElement</scope><name>elements</name></member>
      <member refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>initializeParentPlot</name></member>
      <member refid="class_q_c_p_layerable_1a5ff4862e8c784c9f5986dbc1533ba2a4" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>layer</name></member>
      <member refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>layerChanged</name></member>
      <member refid="class_q_c_p_layout_element_1a4efdcbde9d28f410e5ef166c9d691deb" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>layout</name></member>
      <member refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mAntialiased</name></member>
      <member refid="class_q_c_p_layout_element_1a8af6bcf81e12fe1d6f44490f34522b90" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>marginGroup</name></member>
      <member refid="class_q_c_p_layout_element_1ac8d1139a81a1625860647e307ae2b733" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>marginGroups</name></member>
      <member refid="class_q_c_p_layout_element_1af4ac9450aa2d60863bf3a8ea0c940c9d" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>margins</name></member>
      <member refid="class_q_c_p_layout_element_1af61c70354d1275778d68206b2a1b2d36" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mAutoMargins</name></member>
      <member refid="class_q_c_p_layout_element_1afb9503858d4aa0f3b9f1794b084fb40a" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>maximumSize</name></member>
      <member refid="class_q_c_p_layout_element_1ab5ce2ba22b36d9a3b70a1be562c326e5" prot="public" virt="virtual"><scope>QCPLayoutElement</scope><name>maximumSizeHint</name></member>
      <member refid="class_q_c_p_layout_element_1a5eae30e28f28d73fd1c56409c011393e" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>minimumMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a60d4295468a2b57fe91f6f68e20c3993" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>minimumSize</name></member>
      <member refid="class_q_c_p_layout_element_1ab3fdb5c9a5189bb2dac10d4d25329cd8" prot="public" virt="virtual"><scope>QCPLayoutElement</scope><name>minimumSizeHint</name></member>
      <member refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mLayer</name></member>
      <member refid="class_q_c_p_layout_element_1aeafbbc1130e02eee663c5326761fc963" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mMarginGroups</name></member>
      <member refid="class_q_c_p_layout_element_1ac2a32b99ee527ca5dfff9da03628fe94" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a64a387973fd4addac842028c89088998" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mMaximumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a5ba71f25d1af4bb092b28df618538e63" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mMinimumMargins</name></member>
      <member refid="class_q_c_p_layout_element_1affef747c81632de33f08483b7fd10d01" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mMinimumSize</name></member>
      <member refid="class_q_c_p_layout_element_1aa8fef6486cb6ceb7c82cbdd50bc32ee9" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>mouseDoubleClickEvent</name></member>
      <member refid="class_q_c_p_layout_element_1a14f4acf58cdb8dd2c6c571479c4c4a40" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>mouseMoveEvent</name></member>
      <member refid="class_q_c_p_layout_element_1a2d82ea21fe0ee628f177bd824bc51a71" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>mousePressEvent</name></member>
      <member refid="class_q_c_p_layout_element_1ae526ac828cce1e5bb94eaa85776d7404" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>mouseReleaseEvent</name></member>
      <member refid="class_q_c_p_layout_element_1a07bb4973379e75cb0fa5b032c1d24afd" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mOuterRect</name></member>
      <member refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>moveToLayer</name></member>
      <member refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mParentLayerable</name></member>
      <member refid="class_q_c_p_layout_element_1ae7c75c25549608bd688bdb65d4c38066" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mParentLayout</name></member>
      <member refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mParentPlot</name></member>
      <member refid="class_q_c_p_layout_element_1ad8896f05550389f7b9e92c9e6cdf6e01" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mRect</name></member>
      <member refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>mVisible</name></member>
      <member refid="class_q_c_p_layout_element_1a2a32a12a6161c9dffbadeb9cc585510c" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>outerRect</name></member>
      <member refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>parentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a473edb813a4c1929d6b6a8fe3ff3faf7" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>parentPlot</name></member>
      <member refid="class_q_c_p_layout_element_1a1478899e80e8244b411e96ec3b2e5ce2" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>parentPlotInitialized</name></member>
      <member refid="class_q_c_p_layerable_1a74c0fa237f29bf0e49565013fc5d1ec0" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>QCPLayerable</name></member>
      <member refid="class_q_c_p_layout_element_1a588aac0a0d721f6c5f10126d8596a20f" prot="private" virt="non-virtual"><scope>QCPLayoutElement</scope><name>QCPLayout</name></member>
      <member refid="class_q_c_p_layout_element_1a8947f0ada17e672aaba3d424cbbb67e3" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>QCPLayoutElement</name></member>
      <member refid="class_q_c_p_layout_element_1ad077a686e85ab6fa03dcb2fd37fc499a" prot="private" virt="non-virtual"><scope>QCPLayoutElement</scope><name>QCPMarginGroup</name></member>
      <member refid="class_q_c_p_layout_element_1a1cdf9df76adcfae45261690aa0ca2198" prot="private" virt="non-virtual"><scope>QCPLayoutElement</scope><name>QCustomPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>realVisibility</name></member>
      <member refid="class_q_c_p_layout_element_1a208effccfe2cca4a0eaf9393e60f2dd4" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>rect</name></member>
      <member refid="class_q_c_p_layerable_1a7498c2d0d081cf7cad0fb3bb93aa0e91" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>selectEvent</name></member>
      <member refid="class_q_c_p_layerable_1a908c9edda761886f33893be326dab77d" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>selectionCategory</name></member>
      <member refid="class_q_c_p_layout_element_1a0b96ae0d7bcfa6e38188fcb1e73e143f" prot="public" virt="virtual"><scope>QCPLayoutElement</scope><name>selectTest</name></member>
      <member refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setAntialiased</name></member>
      <member refid="class_q_c_p_layout_element_1accfda49994e3e6d51ed14504abf9d27d" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setAutoMargins</name></member>
      <member refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layout_element_1a516e56f76b6bc100e8e71d329866847d" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setMarginGroup</name></member>
      <member refid="class_q_c_p_layout_element_1a8f450b1f3f992ad576fce2c63d8b79cf" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a74eb5280a737ab44833d506db65efd95" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setMaximumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a03e0e9c48f230217c529b0819f832d84" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setMaximumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a0a8a17abc16b7923159fcc7608f94673" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setMinimumMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a5dd29a3c8bc88440c97c06b67be7886b" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setMinimumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a8e0447614a0bf92de9a7304588c6b96e" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setMinimumSize</name></member>
      <member refid="class_q_c_p_layout_element_1a38975ea13e36de8e53391ce41d94bc0f" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setOuterRect</name></member>
      <member refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setParentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>setVisible</name></member>
      <member refid="class_q_c_p_layout_element_1a929c2ec62e0e0e1d8418eaa802e2af9b" prot="public" virt="virtual"><scope>QCPLayoutElement</scope><name>update</name></member>
      <member refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374d" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>UpdatePhase</name></member>
      <member refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da5d1ccf5d79967c232c3c511796860045" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>upLayout</name></member>
      <member refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374da288cb59a92280e47261a341f2813e676" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>upMargins</name></member>
      <member refid="class_q_c_p_layout_element_1a0d83360e05735735aaf6d7983c56374dad6119882eba136357c2f627992e527d3" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>upPreparation</name></member>
      <member refid="class_q_c_p_layerable_1af0297b944b6192b6d67d00bff41b6b70" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>visible</name></member>
      <member refid="class_q_c_p_layout_element_1a300521d2fd18a893c1b85f6be11ce2bf" prot="protected" virt="virtual"><scope>QCPLayoutElement</scope><name>wheelEvent</name></member>
      <member refid="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="non-virtual"><scope>QCPLayoutElement</scope><name>~QCPLayerable</name></member>
      <member refid="class_q_c_p_layout_element_1a0dc52343920011b3e72d61fc94ed3400" prot="public" virt="virtual"><scope>QCPLayoutElement</scope><name>~QCPLayoutElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
