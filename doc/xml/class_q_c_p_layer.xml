<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_q_c_p_layer" kind="class" language="C++" prot="public">
    <compoundname>QCPLayer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">QObject</basecompoundref>
    <includes refid="qcustomplot_8h" local="no">qcustomplot.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_layer_1a2f3374a7884bf403720cd1cf6f7ad1bb" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
        <definition>QCustomPlot* QCPLayer::mParentPlot</definition>
        <argsstring></argsstring>
        <name>mParentPlot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="391" column="15" bodyfile="qcustomplot.h" bodystart="391" bodyend="-1"/>
        <referencedby refid="class_q_c_p_layer_1afc1a8940f8e34c9f25ead9dfd4828cae" compoundref="qcustomplot_8cpp" startline="750" endline="762">~QCPLayer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layer_1a91e6298183cb4b9dfd4efdfaf1ecc220" prot="protected" static="no" mutable="no">
        <type>QString</type>
        <definition>QString QCPLayer::mName</definition>
        <argsstring></argsstring>
        <name>mName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="392" column="11" bodyfile="qcustomplot.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layer_1a122088bcab6cec76a52b75ce8606605b" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int QCPLayer::mIndex</definition>
        <argsstring></argsstring>
        <name>mIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="393" column="7" bodyfile="qcustomplot.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layer_1a704aa71bba469383c3a3c598c1ec0d28" prot="protected" static="no" mutable="no">
        <type>QList&lt; <ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> * &gt;</type>
        <definition>QList&lt;QCPLayerable*&gt; QCPLayer::mChildren</definition>
        <argsstring></argsstring>
        <name>mChildren</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="394" column="9" bodyfile="qcustomplot.h" bodystart="394" bodyend="-1"/>
        <referencedby refid="class_q_c_p_layer_1a57ce5e49364aa9122276d5df3b4a0ddc" compoundref="qcustomplot_8cpp" startline="787" endline="797">addChild</referencedby>
        <referencedby refid="class_q_c_p_layer_1ac2f64ac7761650582d968d86670ef362" compoundref="qcustomplot_8cpp" startline="808" endline="812">removeChild</referencedby>
        <referencedby refid="class_q_c_p_layer_1afc1a8940f8e34c9f25ead9dfd4828cae" compoundref="qcustomplot_8cpp" startline="750" endline="762">~QCPLayer</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_layer_1a264950deb08e589460c126c895a1e2b5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPLayer::mVisible</definition>
        <argsstring></argsstring>
        <name>mVisible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="395" column="8" bodyfile="qcustomplot.h" bodystart="395" bodyend="-1"/>
        <referencedby refid="class_q_c_p_layer_1ac07671f74edf6884b51a82afb2c19516" compoundref="qcustomplot_8cpp" startline="772" endline="775">setVisible</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_q_c_p_layer_1a1cdf9df76adcfae45261690aa0ca2198" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCustomPlot</definition>
        <argsstring></argsstring>
        <name>QCustomPlot</name>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="404" column="3" bodyfile="qcustomplot.h" bodystart="404" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_layer_1ad655f55cccf49ba14d5172ec517e07ae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCPLayerable</definition>
        <argsstring></argsstring>
        <name>QCPLayerable</name>
        <param>
          <type><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="405" column="3" bodyfile="qcustomplot.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_layer_1a5d0657fc86d624e5efbe930ef21af718" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPLayer::QCPLayer</definition>
        <argsstring>(QCustomPlot *parentPlot, const QString &amp;layerName)</argsstring>
        <name>QCPLayer</name>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
          <declname>parentPlot</declname>
        </param>
        <param>
          <type>const QString &amp;</type>
          <declname>layerName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a new <ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref> instance.</para>
<para>Normally you shouldn&apos;t directly instantiate layers, use <ref refid="class_q_custom_plot_1ad5255393df078448bb6ac83fa5db5f52" kindref="member">QCustomPlot::addLayer</ref> instead.</para>
<para><simplesect kind="warning"><para>It is not checked that <emphasis>layerName</emphasis> is actually a unique layer name in <emphasis>parentPlot</emphasis>. This check is only performed by <ref refid="class_q_custom_plot_1ad5255393df078448bb6ac83fa5db5f52" kindref="member">QCustomPlot::addLayer</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="376" column="3" bodyfile="qcustomplot.cpp" bodystart="739" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layer_1afc1a8940f8e34c9f25ead9dfd4828cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPLayer::~QCPLayer</definition>
        <argsstring>()</argsstring>
        <name>~QCPLayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="377" column="3" bodyfile="qcustomplot.cpp" bodystart="750" bodyend="762"/>
        <references refid="class_q_custom_plot_1a0421d647f420b0b4c57aec1708857af5" compoundref="qcustomplot_8cpp" startline="10013" endline="10016">QCustomPlot::currentLayer</references>
        <references refid="class_q_c_p_layer_1a704aa71bba469383c3a3c598c1ec0d28" compoundref="qcustomplot_8h" startline="394">mChildren</references>
        <references refid="class_q_c_p_layer_1a2f3374a7884bf403720cd1cf6f7ad1bb" compoundref="qcustomplot_8h" startline="391">mParentPlot</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layer_1a5520019787482e13857ebe631c27c3fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> *</type>
        <definition>QCustomPlot* QCPLayer::parentPlot</definition>
        <argsstring>() const</argsstring>
        <name>parentPlot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="380" column="15" bodyfile="qcustomplot.h" bodystart="380" bodyend="380"/>
        <referencedby refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" compoundref="qcustomplot_8cpp" startline="1121" endline="1143">QCPLayerable::moveToLayer</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layer_1a37806f662b50b588fb1029a14fc5ef50" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QString</type>
        <definition>QString QCPLayer::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="381" column="11" bodyfile="qcustomplot.h" bodystart="381" bodyend="381"/>
        <referencedby refid="class_q_custom_plot_1a0a96244e7773b242ef23c32b7bdfb159" compoundref="qcustomplot_8cpp" startline="9982" endline="9990">QCustomPlot::layer</referencedby>
        <referencedby refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" compoundref="qcustomplot_8cpp" startline="1121" endline="1143">QCPLayerable::moveToLayer</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layer_1ad322905c4700dcc7ceba63e011c730d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int QCPLayer::index</definition>
        <argsstring>() const</argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the index this layer has in the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref>. The index is the integer number by which this layer can be accessed via <ref refid="class_q_custom_plot_1a0a96244e7773b242ef23c32b7bdfb159" kindref="member">QCustomPlot::layer</ref>.</para>
<para>Layers with higher indices will be drawn above layers with lower indices. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="382" column="7" bodyfile="qcustomplot.h" bodystart="382" bodyend="382"/>
        <referencedby refid="class_q_custom_plot_1ad5255393df078448bb6ac83fa5db5f52" compoundref="qcustomplot_8cpp" startline="10083" endline="10102">QCustomPlot::addLayer</referencedby>
        <referencedby refid="class_q_custom_plot_1ae896140beff19424e9e9e02d6e331104" compoundref="qcustomplot_8cpp" startline="10164" endline="10184">QCustomPlot::moveLayer</referencedby>
        <referencedby refid="class_q_custom_plot_1a40f75e342c5eaab6a86066a42a0e2a94" compoundref="qcustomplot_8cpp" startline="10118" endline="10153">QCustomPlot::removeLayer</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layer_1a183b90941fc78f0b136edd77c5fb6966" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QList&lt; <ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> * &gt;</type>
        <definition>QList&lt; QCPLayerable * &gt; QCPLayer::children</definition>
        <argsstring>() const</argsstring>
        <name>children</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a list of all layerables on this layer. The order corresponds to the rendering order: layerables with higher indices are drawn above layerables with lower indices. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="383" column="9" bodyfile="qcustomplot.h" bodystart="383" bodyend="383"/>
        <referencedby refid="class_q_custom_plot_1a9d4808ab925b003054085246c92a257c" compoundref="qcustomplot_8cpp" startline="10344" endline="10351">QCustomPlot::deselectAll</referencedby>
        <referencedby refid="class_q_custom_plot_1ad7a7d878bf050f101a43008e7d8fdb52" compoundref="qcustomplot_8cpp" startline="10874" endline="10910">QCustomPlot::draw</referencedby>
        <referencedby refid="class_q_custom_plot_1a724e97d2e8c03e68adac5f4b6164a1b3" compoundref="qcustomplot_8cpp" startline="10776" endline="10848">QCustomPlot::mouseReleaseEvent</referencedby>
        <referencedby refid="class_q_custom_plot_1a40f75e342c5eaab6a86066a42a0e2a94" compoundref="qcustomplot_8cpp" startline="10118" endline="10153">QCustomPlot::removeLayer</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layer_1ad1cc2d6b32d2abb33c7f449b964e068c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPLayer::visible</definition>
        <argsstring>() const</argsstring>
        <name>visible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="384" column="8" bodyfile="qcustomplot.h" bodystart="384" bodyend="384"/>
        <referencedby refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" compoundref="qcustomplot_8cpp" startline="1018" endline="1021">QCPLayerable::realVisibility</referencedby>
        <referencedby refid="class_q_c_p_layer_1ac07671f74edf6884b51a82afb2c19516" compoundref="qcustomplot_8cpp" startline="772" endline="775">setVisible</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layer_1ac07671f74edf6884b51a82afb2c19516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayer::setVisible</definition>
        <argsstring>(bool visible)</argsstring>
        <name>setVisible</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets whether this layer is visible or not. If <emphasis>visible</emphasis> is set to false, all layerables on this layer will be invisible.</para>
<para>This function doesn&apos;t change the visibility property of the layerables (<ref refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" kindref="member">QCPLayerable::setVisible</ref>), but the <ref refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" kindref="member">QCPLayerable::realVisibility</ref> of each layerable takes the visibility of the parent layer into account. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="387" column="8" bodyfile="qcustomplot.cpp" bodystart="772" bodyend="775"/>
        <references refid="class_q_c_p_layer_1a264950deb08e589460c126c895a1e2b5" compoundref="qcustomplot_8h" startline="395">mVisible</references>
        <references refid="class_q_c_p_layer_1ad1cc2d6b32d2abb33c7f449b964e068c" compoundref="qcustomplot_8h" startline="384" endline="384">visible</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_layer_1a57ce5e49364aa9122276d5df3b4a0ddc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayer::addChild</definition>
        <argsstring>(QCPLayerable *layerable, bool prepend)</argsstring>
        <name>addChild</name>
        <param>
          <type><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> *</type>
          <declname>layerable</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>prepend</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="398" column="8" bodyfile="qcustomplot.cpp" bodystart="787" bodyend="797"/>
        <references refid="class_q_c_p_layer_1a704aa71bba469383c3a3c598c1ec0d28" compoundref="qcustomplot_8h" startline="394">mChildren</references>
        <referencedby refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" compoundref="qcustomplot_8cpp" startline="1121" endline="1143">QCPLayerable::moveToLayer</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_layer_1ac2f64ac7761650582d968d86670ef362" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPLayer::removeChild</definition>
        <argsstring>(QCPLayerable *layerable)</argsstring>
        <name>removeChild</name>
        <param>
          <type><ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> *</type>
          <declname>layerable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="399" column="8" bodyfile="qcustomplot.cpp" bodystart="808" bodyend="812"/>
        <references refid="class_q_c_p_layer_1a704aa71bba469383c3a3c598c1ec0d28" compoundref="qcustomplot_8h" startline="394">mChildren</references>
        <referencedby refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" compoundref="qcustomplot_8cpp" startline="1121" endline="1143">QCPLayerable::moveToLayer</referencedby>
        <referencedby refid="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" compoundref="qcustomplot_8cpp" startline="939" endline="946">QCPLayerable::~QCPLayerable</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A layer that may contain objects, to control the rendering order. </para>
    </briefdescription>
    <detaileddescription>
<para>The Layering system of <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> is the mechanism to control the rendering order of the elements inside the plot.</para>
<para>It is based on the two classes <ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref> and <ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref>. <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> holds an ordered list of one or more instances of <ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref> (see <ref refid="class_q_custom_plot_1ad5255393df078448bb6ac83fa5db5f52" kindref="member">QCustomPlot::addLayer</ref>, <ref refid="class_q_custom_plot_1a0a96244e7773b242ef23c32b7bdfb159" kindref="member">QCustomPlot::layer</ref>, <ref refid="class_q_custom_plot_1ae896140beff19424e9e9e02d6e331104" kindref="member">QCustomPlot::moveLayer</ref>, etc.). When replotting, <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> goes through the list of layers bottom to top and successively draws the layerables of the layers.</para>
<para>A <ref refid="class_q_c_p_layer" kindref="compound">QCPLayer</ref> contains an ordered list of <ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> instances. <ref refid="class_q_c_p_layerable" kindref="compound">QCPLayerable</ref> is an abstract base class from which almost all visible objects derive, like axes, grids, graphs, items, etc.</para>
<para>Initially, <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> has five layers: &quot;background&quot;, &quot;grid&quot;, &quot;main&quot;, &quot;axes&quot; and &quot;legend&quot; (in that order). The top two layers &quot;axes&quot; and &quot;legend&quot; contain the default axes and legend, so they will be drawn on top. In the middle, there is the &quot;main&quot; layer. It is initially empty and set as the current layer (see <ref refid="class_q_custom_plot_1a73a6dc47c653bb6f8f030abca5a11852" kindref="member">QCustomPlot::setCurrentLayer</ref>). This means, all new plottables, items etc. are created on this layer by default. Then comes the &quot;grid&quot; layer which contains the <ref refid="class_q_c_p_grid" kindref="compound">QCPGrid</ref> instances (which belong tightly to <ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>, see <ref refid="class_q_c_p_axis_1a63f1dd2df663680d2a8d06c19592dd63" kindref="member">QCPAxis::grid</ref>). The Axis rect background shall be drawn behind everything else, thus the default <ref refid="class_q_c_p_axis_rect" kindref="compound">QCPAxisRect</ref> instance is placed on the &quot;background&quot; layer. Of course, the layer affiliation of the individual objects can be changed as required (<ref refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" kindref="member">QCPLayerable::setLayer</ref>).</para>
<para>Controlling the ordering of objects is easy: Create a new layer in the position you want it to be, e.g. above &quot;main&quot;, with <ref refid="class_q_custom_plot_1ad5255393df078448bb6ac83fa5db5f52" kindref="member">QCustomPlot::addLayer</ref>. Then set the current layer with <ref refid="class_q_custom_plot_1a73a6dc47c653bb6f8f030abca5a11852" kindref="member">QCustomPlot::setCurrentLayer</ref> to that new layer and finally create the objects normally. They will be placed on the new layer automatically, due to the current layer setting. Alternatively you could have also ignored the current layer setting and just moved the objects with <ref refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" kindref="member">QCPLayerable::setLayer</ref> to the desired layer after creating them.</para>
<para>It is also possible to move whole layers. For example, If you want the grid to be shown in front of all plottables/items on the &quot;main&quot; layer, just move it above &quot;main&quot; with <ref refid="class_q_custom_plot_1ae896140beff19424e9e9e02d6e331104" kindref="member">QCustomPlot::moveLayer</ref>.</para>
<para>The rendering order within one layer is simply by order of creation or insertion. The item created last (or added last to the layer), is drawn on top of all other objects on that layer.</para>
<para>When a layer is deleted, the objects on it are not deleted with it, but fall on the layer below the deleted layer, see <ref refid="class_q_custom_plot_1a40f75e342c5eaab6a86066a42a0e2a94" kindref="member">QCustomPlot::removeLayer</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="15">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QObject</label>
      </node>
      <node id="10">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
      <node id="16">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QCPLineEnding</label>
        <link refid="class_q_c_p_line_ending"/>
      </node>
      <node id="6">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>QCPAxisPainterPrivate</label>
        <link refid="class_q_c_p_axis_painter_private"/>
        <childnode refid="12" relation="usage">
          <edgelabel>+lowerEnding</edgelabel>
          <edgelabel>+upperEnding</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QWidget</label>
      </node>
      <node id="1">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>#mLayer</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>#mRange</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>#mAxisPainter</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>#mGrid</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>#mAxisRect</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>#mInsetLayout</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>#mDragStartHorzRange</edgelabel>
          <edgelabel>#mDragStartVertRange</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QCustomPlot</label>
        <link refid="class_q_custom_plot"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>#mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>+xAxis</edgelabel>
          <edgelabel>+xAxis2</edgelabel>
          <edgelabel>+yAxis</edgelabel>
          <edgelabel>+yAxis2</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>+legend</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="365" column="1" bodyfile="qcustomplot.h" bodystart="366" bodyend="406"/>
    <listofallmembers>
      <member refid="class_q_c_p_layer_1a57ce5e49364aa9122276d5df3b4a0ddc" prot="protected" virt="non-virtual"><scope>QCPLayer</scope><name>addChild</name></member>
      <member refid="class_q_c_p_layer_1a183b90941fc78f0b136edd77c5fb6966" prot="public" virt="non-virtual"><scope>QCPLayer</scope><name>children</name></member>
      <member refid="class_q_c_p_layer_1ad322905c4700dcc7ceba63e011c730d2" prot="public" virt="non-virtual"><scope>QCPLayer</scope><name>index</name></member>
      <member refid="class_q_c_p_layer_1a704aa71bba469383c3a3c598c1ec0d28" prot="protected" virt="non-virtual"><scope>QCPLayer</scope><name>mChildren</name></member>
      <member refid="class_q_c_p_layer_1a122088bcab6cec76a52b75ce8606605b" prot="protected" virt="non-virtual"><scope>QCPLayer</scope><name>mIndex</name></member>
      <member refid="class_q_c_p_layer_1a91e6298183cb4b9dfd4efdfaf1ecc220" prot="protected" virt="non-virtual"><scope>QCPLayer</scope><name>mName</name></member>
      <member refid="class_q_c_p_layer_1a2f3374a7884bf403720cd1cf6f7ad1bb" prot="protected" virt="non-virtual"><scope>QCPLayer</scope><name>mParentPlot</name></member>
      <member refid="class_q_c_p_layer_1a264950deb08e589460c126c895a1e2b5" prot="protected" virt="non-virtual"><scope>QCPLayer</scope><name>mVisible</name></member>
      <member refid="class_q_c_p_layer_1a37806f662b50b588fb1029a14fc5ef50" prot="public" virt="non-virtual"><scope>QCPLayer</scope><name>name</name></member>
      <member refid="class_q_c_p_layer_1a5520019787482e13857ebe631c27c3fa" prot="public" virt="non-virtual"><scope>QCPLayer</scope><name>parentPlot</name></member>
      <member refid="class_q_c_p_layer_1a5d0657fc86d624e5efbe930ef21af718" prot="public" virt="non-virtual"><scope>QCPLayer</scope><name>QCPLayer</name></member>
      <member refid="class_q_c_p_layer_1ad655f55cccf49ba14d5172ec517e07ae" prot="private" virt="non-virtual"><scope>QCPLayer</scope><name>QCPLayerable</name></member>
      <member refid="class_q_c_p_layer_1a1cdf9df76adcfae45261690aa0ca2198" prot="private" virt="non-virtual"><scope>QCPLayer</scope><name>QCustomPlot</name></member>
      <member refid="class_q_c_p_layer_1ac2f64ac7761650582d968d86670ef362" prot="protected" virt="non-virtual"><scope>QCPLayer</scope><name>removeChild</name></member>
      <member refid="class_q_c_p_layer_1ac07671f74edf6884b51a82afb2c19516" prot="public" virt="non-virtual"><scope>QCPLayer</scope><name>setVisible</name></member>
      <member refid="class_q_c_p_layer_1ad1cc2d6b32d2abb33c7f449b964e068c" prot="public" virt="non-virtual"><scope>QCPLayer</scope><name>visible</name></member>
      <member refid="class_q_c_p_layer_1afc1a8940f8e34c9f25ead9dfd4828cae" prot="public" virt="non-virtual"><scope>QCPLayer</scope><name>~QCPLayer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
