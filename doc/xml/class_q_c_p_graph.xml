<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_q_c_p_graph" kind="class" language="C++" prot="public">
    <compoundname>QCPGraph</compoundname>
    <basecompoundref refid="class_q_c_p_abstract_plottable" prot="public" virt="non-virtual">QCPAbstractPlottable</basecompoundref>
    <includes refid="qcustomplot_8h" local="no">qcustomplot.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859" prot="public" static="no" strong="no">
        <type></type>
        <name>LineStyle</name>
        <enumvalue id="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" prot="public">
          <name>lsNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>data points are not connected with any lines (e.g. data only represented with symbols according to the scatter style, see <ref refid="class_q_c_p_graph_1a12bd17a8ba21983163ec5d8f42a9fea5" kindref="member">setScatterStyle</ref>) </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a3c42a27b15aa3c92d399082fad8b7515" prot="public">
          <name>lsLine</name>
          <briefdescription>
<para>data points are connected by a straight line </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859ae10568bda57836487d9dec5eba1d6c6e" prot="public">
          <name>lsStepLeft</name>
          <briefdescription>
<para>line is drawn as steps where the step height is the value of the left data point </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a9c37951f7d11aa070100fd16f2935c9e" prot="public">
          <name>lsStepRight</name>
          <briefdescription>
<para>line is drawn as steps where the step height is the value of the right data point </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a5adf7b04da215a40a764c21294ea7366" prot="public">
          <name>lsStepCenter</name>
          <briefdescription>
<para>line is drawn as steps where the step is in between two data points </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" prot="public">
          <name>lsImpulse</name>
          <briefdescription>
<para>each data point is represented by a line parallel to the value axis, which reaches from the data point to the zero-value-line </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines how the graph&apos;s line is represented visually in the plot. The line is drawn with the current pen of the graph (<ref refid="class_q_c_p_abstract_plottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" kindref="member">setPen</ref>). <simplesect kind="see"><para><ref refid="class_q_c_p_graph_1a513fecccff5b2a50ce53f665338c60ff" kindref="member">setLineStyle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2509" column="3" bodyfile="qcustomplot.h" bodystart="2509" bodyend="2516"/>
      </memberdef>
      <memberdef kind="enum" id="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6af" prot="public" static="no" strong="no">
        <type></type>
        <name>ErrorType</name>
        <enumvalue id="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afaeae745e7cc1766bb8546e35d4b76a711" prot="public">
          <name>etNone</name>
          <briefdescription>
<para>No error bars are shown. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa2a5d89cd76fb8b6b18d71b8f6f6c0f43" prot="public">
          <name>etKey</name>
          <briefdescription>
<para>Error bars for the key dimension of the data point are shown. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa147022ccdc49f6bd48f904cb4f61872e" prot="public">
          <name>etValue</name>
          <briefdescription>
<para>Error bars for the value dimension of the data point are shown. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa761cb7d61670c1e2efecccd8974409ab" prot="public">
          <name>etBoth</name>
          <briefdescription>
<para>Error bars for both key and value dimensions of the data point are shown. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines what kind of error bars are drawn for each data point </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2521" column="3" bodyfile="qcustomplot.h" bodystart="2521" bodyend="2525"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" prot="protected" static="no" mutable="no">
        <type><ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref> *</type>
        <definition>QCPDataMap* QCPGraph::mData</definition>
        <argsstring></argsstring>
        <name>mData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2582" column="14" bodyfile="qcustomplot.h" bodystart="2582" bodyend="-1"/>
        <referencedby refid="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" compoundref="qcustomplot_8cpp" startline="14862" endline="14865">addData</referencedby>
        <referencedby refid="class_q_c_p_graph_1ad4e94a4e44e5e76fbec81a72a977157d" compoundref="qcustomplot_8cpp" startline="14972" endline="14975">clearData</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae413e4ea50fea821a48ee2b3c4aaa055" compoundref="qcustomplot_8cpp" startline="15990" endline="16002">countDataInBounds</referencedby>
        <referencedby refid="class_q_c_p_graph_1a659218cc62c2a7786213d9dd429c1c8d" compoundref="qcustomplot_8cpp" startline="15077" endline="15122">draw</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae6425d5df537c08159f794cb18c051c3" compoundref="qcustomplot_8cpp" startline="16506" endline="16613">getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" compoundref="qcustomplot_8cpp" startline="15661" endline="15840">getPreparedData</referencedby>
        <referencedby refid="class_q_c_p_graph_1ac23c7702ca836c7055f48e6fc3295ca4" compoundref="qcustomplot_8cpp" startline="16621" endline="16728">getValueRange</referencedby>
        <referencedby refid="class_q_c_p_graph_1abda485a2f71ebe00d890840acbb91516" compoundref="qcustomplot_8cpp" startline="15960" endline="15978">getVisibleDataBounds</referencedby>
        <referencedby refid="class_q_c_p_graph_1a96146099a5e68f49c7326a765f768da2" compoundref="qcustomplot_8cpp" startline="16400" endline="16459">pointDistance</referencedby>
        <referencedby refid="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" compoundref="qcustomplot_8cpp" startline="14483" endline="14500">QCPGraph</referencedby>
        <referencedby refid="class_q_c_p_graph_1a4a0fde50b7db9db0a85b5c5b6b10098f" compoundref="qcustomplot_8cpp" startline="14946" endline="14953">removeData</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae42d645ef617cfc75fc0df58e62c522a" compoundref="qcustomplot_8cpp" startline="14931" endline="14937">removeDataAfter</referencedby>
        <referencedby refid="class_q_c_p_graph_1a9fe0b3e54e8c7b61319bd03337e21e99" compoundref="qcustomplot_8cpp" startline="14920" endline="14925">removeDataBefore</referencedby>
        <referencedby refid="class_q_c_p_graph_1a051fb77b459ba1ae8d65552c67f45e94" compoundref="qcustomplot_8cpp" startline="15011" endline="15038">rescaleKeyAxis</referencedby>
        <referencedby refid="class_q_c_p_graph_1a9e0e620a56932c4df80a3762c2f93608" compoundref="qcustomplot_8cpp" startline="15047" endline="15074">rescaleValueAxis</referencedby>
        <referencedby refid="class_q_c_p_graph_1a36011c34aca4f7a477de25961e2f6c13" compoundref="qcustomplot_8cpp" startline="14978" endline="14989">selectTest</referencedby>
        <referencedby refid="class_q_c_p_graph_1a1df2fd710545c8ba3b2c99a39a27bf8b" compoundref="qcustomplot_8cpp" startline="14517" endline="14532">setData</referencedby>
        <referencedby refid="class_q_c_p_graph_1a873fe46bdb20be5710428e474ade8908" compoundref="qcustomplot_8cpp" startline="14669" endline="14687">setDataBothError</referencedby>
        <referencedby refid="class_q_c_p_graph_1abce9f07c0d722bc3e4fa7bd73c7e5dfa" compoundref="qcustomplot_8cpp" startline="14616" endline="14631">setDataKeyError</referencedby>
        <referencedby refid="class_q_c_p_graph_1acba6296eadcb36b93267628b8dae3de5" compoundref="qcustomplot_8cpp" startline="14563" endline="14578">setDataValueError</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae9998cfb9d379ac0ef3fbd6995cfbd76" compoundref="qcustomplot_8cpp" startline="14502" endline="14505">~QCPGraph</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_graph_1aa35681a24165c2831301091a87b662ce" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPGraph::mErrorPen</definition>
        <argsstring></argsstring>
        <name>mErrorPen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2583" column="8" bodyfile="qcustomplot.h" bodystart="2583" bodyend="-1"/>
        <referencedby refid="class_q_c_p_graph_1ae1f3edd5eb41aa5782e61673488fd3e0" compoundref="qcustomplot_8cpp" startline="15513" endline="15549">drawScatterPlot</referencedby>
        <referencedby refid="class_q_c_p_graph_1abd4c7f81939e10776ea64603a704f22a" compoundref="qcustomplot_8cpp" startline="14760" endline="14763">setErrorPen</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859" kindref="member">LineStyle</ref></type>
        <definition>LineStyle QCPGraph::mLineStyle</definition>
        <argsstring></argsstring>
        <name>mLineStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2584" column="13" bodyfile="qcustomplot.h" bodystart="2584" bodyend="-1"/>
        <referencedby refid="class_q_c_p_graph_1a659218cc62c2a7786213d9dd429c1c8d" compoundref="qcustomplot_8cpp" startline="15077" endline="15122">draw</referencedby>
        <referencedby refid="class_q_c_p_graph_1a9e6ce6db9aa7b29fc397c724fcf7b126" compoundref="qcustomplot_8cpp" startline="15481" endline="15502">drawFill</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae962caca309faae29ce0988d0d0eff4b" compoundref="qcustomplot_8cpp" startline="15125" endline="15157">drawLegendIcon</referencedby>
        <referencedby refid="class_q_c_p_graph_1a5ec495f97b8185ba9712430cb1558f52" compoundref="qcustomplot_8cpp" startline="15177" endline="15188">getPlotData</referencedby>
        <referencedby refid="class_q_c_p_graph_1a96146099a5e68f49c7326a765f768da2" compoundref="qcustomplot_8cpp" startline="16400" endline="16459">pointDistance</referencedby>
        <referencedby refid="class_q_c_p_graph_1a513fecccff5b2a50ce53f665338c60ff" compoundref="qcustomplot_8cpp" startline="14727" endline="14730">setLineStyle</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref></type>
        <definition>QCPScatterStyle QCPGraph::mScatterStyle</definition>
        <argsstring></argsstring>
        <name>mScatterStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2585" column="19" bodyfile="qcustomplot.h" bodystart="2585" bodyend="-1"/>
        <referencedby refid="class_q_c_p_graph_1a659218cc62c2a7786213d9dd429c1c8d" compoundref="qcustomplot_8cpp" startline="15077" endline="15122">draw</referencedby>
        <referencedby refid="class_q_c_p_graph_1ab51aeba7e9d29754e58852cfad3436cc" compoundref="qcustomplot_8cpp" startline="15849" endline="15944">drawError</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae962caca309faae29ce0988d0d0eff4b" compoundref="qcustomplot_8cpp" startline="15125" endline="15157">drawLegendIcon</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae1f3edd5eb41aa5782e61673488fd3e0" compoundref="qcustomplot_8cpp" startline="15513" endline="15549">drawScatterPlot</referencedby>
        <referencedby refid="class_q_c_p_graph_1a96146099a5e68f49c7326a765f768da2" compoundref="qcustomplot_8cpp" startline="16400" endline="16459">pointDistance</referencedby>
        <referencedby refid="class_q_c_p_graph_1a12bd17a8ba21983163ec5d8f42a9fea5" compoundref="qcustomplot_8cpp" startline="14738" endline="14741">setScatterStyle</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6af" kindref="member">ErrorType</ref></type>
        <definition>ErrorType QCPGraph::mErrorType</definition>
        <argsstring></argsstring>
        <name>mErrorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2586" column="13" bodyfile="qcustomplot.h" bodystart="2586" bodyend="-1"/>
        <referencedby refid="class_q_c_p_graph_1ab51aeba7e9d29754e58852cfad3436cc" compoundref="qcustomplot_8cpp" startline="15849" endline="15944">drawError</referencedby>
        <referencedby refid="class_q_c_p_graph_1ae1f3edd5eb41aa5782e61673488fd3e0" compoundref="qcustomplot_8cpp" startline="15513" endline="15549">drawScatterPlot</referencedby>
        <referencedby refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" compoundref="qcustomplot_8cpp" startline="14751" endline="14754">setErrorType</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_graph_1a7b51c8d09510f9d195b5e765ccbcf05b" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QCPGraph::mErrorBarSize</definition>
        <argsstring></argsstring>
        <name>mErrorBarSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2587" column="10" bodyfile="qcustomplot.h" bodystart="2587" bodyend="-1"/>
        <referencedby refid="class_q_c_p_graph_1ab51aeba7e9d29754e58852cfad3436cc" compoundref="qcustomplot_8cpp" startline="15849" endline="15944">drawError</referencedby>
        <referencedby refid="class_q_c_p_graph_1a10f50c5495ce45ef559ec2066194a335" compoundref="qcustomplot_8cpp" startline="14768" endline="14771">setErrorBarSize</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_graph_1acf631d7dbd1055a69ab3b63094868557" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPGraph::mErrorBarSkipSymbol</definition>
        <argsstring></argsstring>
        <name>mErrorBarSkipSymbol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2588" column="8" bodyfile="qcustomplot.h" bodystart="2588" bodyend="-1"/>
        <referencedby refid="class_q_c_p_graph_1ab51aeba7e9d29754e58852cfad3436cc" compoundref="qcustomplot_8cpp" startline="15849" endline="15944">drawError</referencedby>
        <referencedby refid="class_q_c_p_graph_1ab1c1ee03d8dd94676a564e5e5f11aac2" compoundref="qcustomplot_8cpp" startline="14784" endline="14787">setErrorBarSkipSymbol</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" prot="protected" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> &gt;</type>
        <definition>QPointer&lt;QCPGraph&gt; QCPGraph::mChannelFillGraph</definition>
        <argsstring></argsstring>
        <name>mChannelFillGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2589" column="12" bodyfile="qcustomplot.h" bodystart="2589" bodyend="-1"/>
        <referencedby refid="class_q_c_p_graph_1a9e6ce6db9aa7b29fc397c724fcf7b126" compoundref="qcustomplot_8cpp" startline="15481" endline="15502">drawFill</referencedby>
        <referencedby refid="class_q_c_p_graph_1add26655bd2338adaa7fc99e27bd06550" compoundref="qcustomplot_8cpp" startline="16190" endline="16323">getChannelFillPolygon</referencedby>
        <referencedby refid="class_q_c_p_graph_1a2d03156df1b64037a2e36cfa50351ca3" compoundref="qcustomplot_8cpp" startline="14798" endline="14816">setChannelFillGraph</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_graph_1aa951e78aeba714cf443be6da2e52502e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPGraph::mAdaptiveSampling</definition>
        <argsstring></argsstring>
        <name>mAdaptiveSampling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2590" column="8" bodyfile="qcustomplot.h" bodystart="2590" bodyend="-1"/>
        <referencedby refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" compoundref="qcustomplot_8cpp" startline="15661" endline="15840">getPreparedData</referencedby>
        <referencedby refid="class_q_c_p_graph_1ab468cd600160f327836aa0644291e64c" compoundref="qcustomplot_8cpp" startline="14849" endline="14852">setAdaptiveSampling</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_q_c_p_graph_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCustomPlot</definition>
        <argsstring></argsstring>
        <name>QCustomPlot</name>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2629" column="3" bodyfile="qcustomplot.h" bodystart="2629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_graph_1a8429035e7adfbd7f05805a6530ad5e3b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCPLegend</definition>
        <argsstring></argsstring>
        <name>QCPLegend</name>
        <param>
          <type><ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2630" column="3" bodyfile="qcustomplot.h" bodystart="2630" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPGraph::QCPGraph</definition>
        <argsstring>(QCPAxis *keyAxis, QCPAxis *valueAxis)</argsstring>
        <name>QCPGraph</name>
        <param>
          <type><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref> *</type>
          <declname>keyAxis</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref> *</type>
          <declname>valueAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a graph which uses <emphasis>keyAxis</emphasis> as its key axis (&quot;x&quot;) and <emphasis>valueAxis</emphasis> as its value axis (&quot;y&quot;). <emphasis>keyAxis</emphasis> and <emphasis>valueAxis</emphasis> must reside in the same <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> instance and not have the same orientation. If either of these restrictions is violated, a corresponding message is printed to the debug output (qDebug), the construction is not aborted, though.</para>
<para>The constructed <ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> can be added to the plot with <ref refid="class_q_custom_plot_1ab7ad9174f701f9c6f64e378df77927a6" kindref="member">QCustomPlot::addPlottable</ref>, <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> then takes ownership of the graph.</para>
<para>To directly create a graph inside a plot, you can also use the simpler <ref refid="class_q_custom_plot_1a6fb2873d35a8a8089842d81a70a54167" kindref="member">QCustomPlot::addGraph</ref> function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2528" column="12" bodyfile="qcustomplot.cpp" bodystart="14483" bodyend="14500"/>
        <references refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afaeae745e7cc1766bb8546e35d4b76a711" compoundref="qcustomplot_8h" startline="2521">etNone</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a3c42a27b15aa3c92d399082fad8b7515" compoundref="qcustomplot_8h" startline="2511">lsLine</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_graph_1ab468cd600160f327836aa0644291e64c" compoundref="qcustomplot_8cpp" startline="14849" endline="14852">setAdaptiveSampling</references>
        <references refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" compoundref="qcustomplot_8cpp" startline="6937" endline="6940">QCPAbstractPlottable::setBrush</references>
        <references refid="class_q_c_p_graph_1a2d03156df1b64037a2e36cfa50351ca3" compoundref="qcustomplot_8cpp" startline="14798" endline="14816">setChannelFillGraph</references>
        <references refid="class_q_c_p_graph_1a10f50c5495ce45ef559ec2066194a335" compoundref="qcustomplot_8cpp" startline="14768" endline="14771">setErrorBarSize</references>
        <references refid="class_q_c_p_graph_1ab1c1ee03d8dd94676a564e5e5f11aac2" compoundref="qcustomplot_8cpp" startline="14784" endline="14787">setErrorBarSkipSymbol</references>
        <references refid="class_q_c_p_graph_1abd4c7f81939e10776ea64603a704f22a" compoundref="qcustomplot_8cpp" startline="14760" endline="14763">setErrorPen</references>
        <references refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" compoundref="qcustomplot_8cpp" startline="14751" endline="14754">setErrorType</references>
        <references refid="class_q_c_p_graph_1a513fecccff5b2a50ce53f665338c60ff" compoundref="qcustomplot_8cpp" startline="14727" endline="14730">setLineStyle</references>
        <references refid="class_q_c_p_abstract_plottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" compoundref="qcustomplot_8cpp" startline="6912" endline="6915">QCPAbstractPlottable::setPen</references>
        <references refid="class_q_c_p_abstract_plottable_1ae8c816874089f7a44001e8618e81a9dc" compoundref="qcustomplot_8cpp" startline="6948" endline="6951">QCPAbstractPlottable::setSelectedBrush</references>
        <references refid="class_q_c_p_abstract_plottable_1a6911603cad23ab0469b108224517516f" compoundref="qcustomplot_8cpp" startline="6923" endline="6926">QCPAbstractPlottable::setSelectedPen</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ae9998cfb9d379ac0ef3fbd6995cfbd76" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>QCPGraph::~QCPGraph</definition>
        <argsstring>()</argsstring>
        <name>~QCPGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2529" column="11" bodyfile="qcustomplot.cpp" bodystart="14502" bodyend="14505"/>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref> *</type>
        <definition>QCPDataMap * QCPGraph::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to the internal data storage of type <ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref>. You may use it to directly manipulate the data, which may be more convenient and faster than using the regular <ref refid="class_q_c_p_graph_1a1df2fd710545c8ba3b2c99a39a27bf8b" kindref="member">setData</ref> or <ref refid="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" kindref="member">addData</ref> methods, in certain situations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2532" column="14" bodyfile="qcustomplot.h" bodystart="2532" bodyend="2532"/>
        <referencedby refid="class_q_c_p_graph_1a80cc91e1e0ef77eb50afc5b366d0efd9" compoundref="qcustomplot_8cpp" startline="14875" endline="14878">addData</referencedby>
        <referencedby refid="class_q_c_p_graph_1a84277b1655474453a5c83318053414d5" compoundref="qcustomplot_8h" startline="2539" endline="2539">channelFillGraph</referencedby>
        <referencedby refid="class_q_c_p_graph_1ab51aeba7e9d29754e58852cfad3436cc" compoundref="qcustomplot_8cpp" startline="15849" endline="15944">drawError</referencedby>
        <referencedby refid="class_q_c_p_graph_1aaabd6c6a7200a2672c44e62bd2a1cafa" compoundref="qcustomplot_8cpp" startline="16332" endline="16345">findIndexAboveX</referencedby>
        <referencedby refid="class_q_c_p_graph_1a8b952a5f937840dc242489585cc8000d" compoundref="qcustomplot_8cpp" startline="16376" endline="16389">findIndexAboveY</referencedby>
        <referencedby refid="class_q_c_p_graph_1a8c3f15dd5a06633011a6ef36016d308b" compoundref="qcustomplot_8cpp" startline="16354" endline="16367">findIndexBelowX</referencedby>
        <referencedby refid="class_q_c_p_graph_1a5b0291f248e8ca8eaa82833ab420dcd0" compoundref="qcustomplot_8cpp" startline="16469" endline="16482">findIndexBelowY</referencedby>
        <referencedby refid="class_simulator_1a5a7f9537737abd907827b552fcd7f172" compoundref="simulator_8cpp" startline="176" endline="263">Simulator::PlotMouse</referencedby>
        <referencedby refid="class_q_c_p_graph_1a1df2fd710545c8ba3b2c99a39a27bf8b" compoundref="qcustomplot_8cpp" startline="14517" endline="14532">setData</referencedby>
        <referencedby refid="class_q_c_p_item_tracer_1a5b90296109e36384aedbc8908a670413" compoundref="qcustomplot_8cpp" startline="23249" endline="23295">QCPItemTracer::updatePosition</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ac3e6f4b3387338df45992b47691b2551" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859" kindref="member">LineStyle</ref></type>
        <definition>LineStyle QCPGraph::lineStyle</definition>
        <argsstring>() const</argsstring>
        <name>lineStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2533" column="13" bodyfile="qcustomplot.h" bodystart="2533" bodyend="2533"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a36d5b641db08e27527827c212542bbbd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref></type>
        <definition>QCPScatterStyle QCPGraph::scatterStyle</definition>
        <argsstring>() const</argsstring>
        <name>scatterStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2534" column="19" bodyfile="qcustomplot.h" bodystart="2534" bodyend="2534"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a1efa62c4b826f34716b505b15d2b2583" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6af" kindref="member">ErrorType</ref></type>
        <definition>ErrorType QCPGraph::errorType</definition>
        <argsstring>() const</argsstring>
        <name>errorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2535" column="13" bodyfile="qcustomplot.h" bodystart="2535" bodyend="2535"/>
        <referencedby refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" compoundref="qcustomplot_8cpp" startline="14751" endline="14754">setErrorType</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1abcf453d2c0d7a751d3a311a8b919b8d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPGraph::errorPen</definition>
        <argsstring>() const</argsstring>
        <name>errorPen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2536" column="8" bodyfile="qcustomplot.h" bodystart="2536" bodyend="2536"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a5b071344b150359aadb7be0b10b0eae9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QCPGraph::errorBarSize</definition>
        <argsstring>() const</argsstring>
        <name>errorBarSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2537" column="10" bodyfile="qcustomplot.h" bodystart="2537" bodyend="2537"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a810db049eff26150c0bcead1bfbcf931" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPGraph::errorBarSkipSymbol</definition>
        <argsstring>() const</argsstring>
        <name>errorBarSkipSymbol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2538" column="8" bodyfile="qcustomplot.h" bodystart="2538" bodyend="2538"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a84277b1655474453a5c83318053414d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> *</type>
        <definition>QCPGraph* QCPGraph::channelFillGraph</definition>
        <argsstring>() const</argsstring>
        <name>channelFillGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2539" column="12" bodyfile="qcustomplot.h" bodystart="2539" bodyend="2539"/>
        <references refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" compoundref="qcustomplot_8h" startline="2532" endline="2532">data</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a1ba934b9621270b9a40fcdd2d9ba2adb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPGraph::adaptiveSampling</definition>
        <argsstring>() const</argsstring>
        <name>adaptiveSampling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2540" column="8" bodyfile="qcustomplot.h" bodystart="2540" bodyend="2540"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a1df2fd710545c8ba3b2c99a39a27bf8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setData</definition>
        <argsstring>(QCPDataMap *data, bool copy=false)</argsstring>
        <name>setData</name>
        <param>
          <type><ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces the current data with the provided <emphasis>data</emphasis>.</para>
<para>If <emphasis>copy</emphasis> is set to true, data points in <emphasis>data</emphasis> will only be copied. if false, the graph takes ownership of the passed data and replaces the internal data pointer with it. This is significantly faster than copying for large datasets.</para>
<para>Alternatively, you can also access and modify the graph&apos;s data via the <ref refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" kindref="member">data</ref> method, which returns a pointer to the internal <ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2543" column="8" bodyfile="qcustomplot.cpp" bodystart="14517" bodyend="14532"/>
        <references refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" compoundref="qcustomplot_8h" startline="2532" endline="2532">data</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <referencedby refid="class_simulator_1a5a7f9537737abd907827b552fcd7f172" compoundref="simulator_8cpp" startline="176" endline="263">Simulator::PlotMouse</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a4c55d8ac13bfa42c8c93747820891a76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value)</argsstring>
        <name>setData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Replaces the current data with the provided points in <emphasis>key</emphasis> and <emphasis>value</emphasis> pairs. The provided vectors should have equal length. Else, the number of added points will be the size of the smallest vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2544" column="8" bodyfile="qcustomplot.cpp" bodystart="14540" bodyend="14552"/>
        <references refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" compoundref="qcustomplot_8h" startline="2472">QCPData::key</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" compoundref="qcustomplot_8h" startline="2472">QCPData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1abce9f07c0d722bc3e4fa7bd73c7e5dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setDataKeyError</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value, const QVector&lt; double &gt; &amp;keyError)</argsstring>
        <name>setDataKeyError</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keyError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces the current data with the provided points in <emphasis>key</emphasis> and <emphasis>value</emphasis> pairs. Additionally the symmetrical key error of the data points are set to the values in <emphasis>keyError</emphasis>. For error bars to show appropriately, see <ref refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" kindref="member">setErrorType</ref>. The provided vectors should have equal length. Else, the number of added points will be the size of the smallest vector.</para>
<para>For asymmetrical errors (plus different from minus), see the overloaded version of this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2545" column="8" bodyfile="qcustomplot.cpp" bodystart="14616" bodyend="14631"/>
        <references refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" compoundref="qcustomplot_8h" startline="2472">QCPData::key</references>
        <references refid="class_q_c_p_data_1af107d650b8ee5c3b2961ecddcfb1bccb" compoundref="qcustomplot_8h" startline="2473">QCPData::keyErrorMinus</references>
        <references refid="class_q_c_p_data_1ae468c3808107c2fd23052481156ab5b5" compoundref="qcustomplot_8h" startline="2473">QCPData::keyErrorPlus</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" compoundref="qcustomplot_8h" startline="2472">QCPData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ac15c749c5fedf740d5692c6fe67143b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setDataKeyError</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value, const QVector&lt; double &gt; &amp;keyErrorMinus, const QVector&lt; double &gt; &amp;keyErrorPlus)</argsstring>
        <name>setDataKeyError</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keyErrorMinus</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keyErrorPlus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Replaces the current data with the provided points in <emphasis>key</emphasis> and <emphasis>value</emphasis> pairs. Additionally the negative key error of the data points are set to the values in <emphasis>keyErrorMinus</emphasis>, the positive key error to <emphasis>keyErrorPlus</emphasis>. For error bars to show appropriately, see <ref refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" kindref="member">setErrorType</ref>. The provided vectors should have equal length. Else, the number of added points will be the size of the smallest vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2546" column="8" bodyfile="qcustomplot.cpp" bodystart="14642" bodyend="14658"/>
        <references refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" compoundref="qcustomplot_8h" startline="2472">QCPData::key</references>
        <references refid="class_q_c_p_data_1af107d650b8ee5c3b2961ecddcfb1bccb" compoundref="qcustomplot_8h" startline="2473">QCPData::keyErrorMinus</references>
        <references refid="class_q_c_p_data_1ae468c3808107c2fd23052481156ab5b5" compoundref="qcustomplot_8h" startline="2473">QCPData::keyErrorPlus</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" compoundref="qcustomplot_8h" startline="2472">QCPData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1acba6296eadcb36b93267628b8dae3de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setDataValueError</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value, const QVector&lt; double &gt; &amp;valueError)</argsstring>
        <name>setDataValueError</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>valueError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces the current data with the provided points in <emphasis>key</emphasis> and <emphasis>value</emphasis> pairs. Additionally the symmetrical value error of the data points are set to the values in <emphasis>valueError</emphasis>. For error bars to show appropriately, see <ref refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" kindref="member">setErrorType</ref>. The provided vectors should have equal length. Else, the number of added points will be the size of the smallest vector.</para>
<para>For asymmetrical errors (plus different from minus), see the overloaded version of this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2547" column="8" bodyfile="qcustomplot.cpp" bodystart="14563" bodyend="14578"/>
        <references refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" compoundref="qcustomplot_8h" startline="2472">QCPData::key</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" compoundref="qcustomplot_8h" startline="2472">QCPData::value</references>
        <references refid="class_q_c_p_data_1a51d8f42bf4d49a1f263531e70cadd6a3" compoundref="qcustomplot_8h" startline="2474">QCPData::valueErrorMinus</references>
        <references refid="class_q_c_p_data_1ad26912552d03485ea20d91dcad16aa8f" compoundref="qcustomplot_8h" startline="2474">QCPData::valueErrorPlus</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a3afbfd7222d739351c69387904776f93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setDataValueError</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value, const QVector&lt; double &gt; &amp;valueErrorMinus, const QVector&lt; double &gt; &amp;valueErrorPlus)</argsstring>
        <name>setDataValueError</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>valueErrorMinus</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>valueErrorPlus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Replaces the current data with the provided points in <emphasis>key</emphasis> and <emphasis>value</emphasis> pairs. Additionally the negative value error of the data points are set to the values in <emphasis>valueErrorMinus</emphasis>, the positive value error to <emphasis>valueErrorPlus</emphasis>. For error bars to show appropriately, see <ref refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" kindref="member">setErrorType</ref>. The provided vectors should have equal length. Else, the number of added points will be the size of the smallest vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2548" column="8" bodyfile="qcustomplot.cpp" bodystart="14589" bodyend="14605"/>
        <references refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" compoundref="qcustomplot_8h" startline="2472">QCPData::key</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" compoundref="qcustomplot_8h" startline="2472">QCPData::value</references>
        <references refid="class_q_c_p_data_1a51d8f42bf4d49a1f263531e70cadd6a3" compoundref="qcustomplot_8h" startline="2474">QCPData::valueErrorMinus</references>
        <references refid="class_q_c_p_data_1ad26912552d03485ea20d91dcad16aa8f" compoundref="qcustomplot_8h" startline="2474">QCPData::valueErrorPlus</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a873fe46bdb20be5710428e474ade8908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setDataBothError</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value, const QVector&lt; double &gt; &amp;keyError, const QVector&lt; double &gt; &amp;valueError)</argsstring>
        <name>setDataBothError</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keyError</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>valueError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces the current data with the provided points in <emphasis>key</emphasis> and <emphasis>value</emphasis> pairs. Additionally the symmetrical key and value errors of the data points are set to the values in <emphasis>keyError</emphasis> and <emphasis>valueError</emphasis>. For error bars to show appropriately, see <ref refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" kindref="member">setErrorType</ref>. The provided vectors should have equal length. Else, the number of added points will be the size of the smallest vector.</para>
<para>For asymmetrical errors (plus different from minus), see the overloaded version of this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2549" column="8" bodyfile="qcustomplot.cpp" bodystart="14669" bodyend="14687"/>
        <references refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" compoundref="qcustomplot_8h" startline="2472">QCPData::key</references>
        <references refid="class_q_c_p_data_1af107d650b8ee5c3b2961ecddcfb1bccb" compoundref="qcustomplot_8h" startline="2473">QCPData::keyErrorMinus</references>
        <references refid="class_q_c_p_data_1ae468c3808107c2fd23052481156ab5b5" compoundref="qcustomplot_8h" startline="2473">QCPData::keyErrorPlus</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" compoundref="qcustomplot_8h" startline="2472">QCPData::value</references>
        <references refid="class_q_c_p_data_1a51d8f42bf4d49a1f263531e70cadd6a3" compoundref="qcustomplot_8h" startline="2474">QCPData::valueErrorMinus</references>
        <references refid="class_q_c_p_data_1ad26912552d03485ea20d91dcad16aa8f" compoundref="qcustomplot_8h" startline="2474">QCPData::valueErrorPlus</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1abb75736ecdbf6e6a7501e1da64fb18cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setDataBothError</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value, const QVector&lt; double &gt; &amp;keyErrorMinus, const QVector&lt; double &gt; &amp;keyErrorPlus, const QVector&lt; double &gt; &amp;valueErrorMinus, const QVector&lt; double &gt; &amp;valueErrorPlus)</argsstring>
        <name>setDataBothError</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keyErrorMinus</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keyErrorPlus</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>valueErrorMinus</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>valueErrorPlus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Replaces the current data with the provided points in <emphasis>key</emphasis> and <emphasis>value</emphasis> pairs. Additionally the negative key and value errors of the data points are set to the values in <emphasis>keyErrorMinus</emphasis> and <emphasis>valueErrorMinus</emphasis>. The positive key and value errors are set to the values in <emphasis>keyErrorPlus</emphasis> <emphasis>valueErrorPlus</emphasis>. For error bars to show appropriately, see <ref refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" kindref="member">setErrorType</ref>. The provided vectors should have equal length. Else, the number of added points will be the size of the smallest vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2550" column="8" bodyfile="qcustomplot.cpp" bodystart="14698" bodyend="14718"/>
        <references refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" compoundref="qcustomplot_8h" startline="2472">QCPData::key</references>
        <references refid="class_q_c_p_data_1af107d650b8ee5c3b2961ecddcfb1bccb" compoundref="qcustomplot_8h" startline="2473">QCPData::keyErrorMinus</references>
        <references refid="class_q_c_p_data_1ae468c3808107c2fd23052481156ab5b5" compoundref="qcustomplot_8h" startline="2473">QCPData::keyErrorPlus</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" compoundref="qcustomplot_8h" startline="2472">QCPData::value</references>
        <references refid="class_q_c_p_data_1a51d8f42bf4d49a1f263531e70cadd6a3" compoundref="qcustomplot_8h" startline="2474">QCPData::valueErrorMinus</references>
        <references refid="class_q_c_p_data_1ad26912552d03485ea20d91dcad16aa8f" compoundref="qcustomplot_8h" startline="2474">QCPData::valueErrorPlus</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a513fecccff5b2a50ce53f665338c60ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setLineStyle</definition>
        <argsstring>(LineStyle ls)</argsstring>
        <name>setLineStyle</name>
        <param>
          <type><ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859" kindref="member">LineStyle</ref></type>
          <declname>ls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets how the single data points are connected in the plot. For scatter-only plots, set <emphasis>ls</emphasis> to <ref refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" kindref="member">lsNone</ref> and <ref refid="class_q_c_p_graph_1a12bd17a8ba21983163ec5d8f42a9fea5" kindref="member">setScatterStyle</ref> to the desired scatter style.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_1a12bd17a8ba21983163ec5d8f42a9fea5" kindref="member">setScatterStyle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2551" column="8" bodyfile="qcustomplot.cpp" bodystart="14727" bodyend="14730"/>
        <references refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" compoundref="qcustomplot_8h" startline="2584">mLineStyle</references>
        <referencedby refid="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" compoundref="qcustomplot_8cpp" startline="14483" endline="14500">QCPGraph</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a12bd17a8ba21983163ec5d8f42a9fea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setScatterStyle</definition>
        <argsstring>(const QCPScatterStyle &amp;style)</argsstring>
        <name>setScatterStyle</name>
        <param>
          <type>const <ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the visual appearance of single data points in the plot. If set to <ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349abd144c291ca274f77053ec68cab6c022" kindref="member">QCPScatterStyle::ssNone</ref>, no scatter points are drawn (e.g. for line-only-plots with appropriate line style).</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_scatter_style" kindref="compound">QCPScatterStyle</ref>, <ref refid="class_q_c_p_graph_1a513fecccff5b2a50ce53f665338c60ff" kindref="member">setLineStyle</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2552" column="8" bodyfile="qcustomplot.cpp" bodystart="14738" bodyend="14741"/>
        <references refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" compoundref="qcustomplot_8h" startline="2585">mScatterStyle</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setErrorType</definition>
        <argsstring>(ErrorType errorType)</argsstring>
        <name>setErrorType</name>
        <param>
          <type><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6af" kindref="member">ErrorType</ref></type>
          <declname>errorType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets which kind of error bars (Key Error, Value Error or both) should be drawn on each data point. If you set <emphasis>errorType</emphasis> to something other than <ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afaeae745e7cc1766bb8546e35d4b76a711" kindref="member">etNone</ref>, make sure to actually pass error data via the specific setData functions along with the data points (e.g. <ref refid="class_q_c_p_graph_1acba6296eadcb36b93267628b8dae3de5" kindref="member">setDataValueError</ref>, <ref refid="class_q_c_p_graph_1abce9f07c0d722bc3e4fa7bd73c7e5dfa" kindref="member">setDataKeyError</ref>, <ref refid="class_q_c_p_graph_1a873fe46bdb20be5710428e474ade8908" kindref="member">setDataBothError</ref>).</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6af" kindref="member">ErrorType</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2553" column="8" bodyfile="qcustomplot.cpp" bodystart="14751" bodyend="14754"/>
        <references refid="class_q_c_p_graph_1a1efa62c4b826f34716b505b15d2b2583" compoundref="qcustomplot_8h" startline="2535" endline="2535">errorType</references>
        <references refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" compoundref="qcustomplot_8h" startline="2586">mErrorType</references>
        <referencedby refid="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" compoundref="qcustomplot_8cpp" startline="14483" endline="14500">QCPGraph</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1abd4c7f81939e10776ea64603a704f22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setErrorPen</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setErrorPen</name>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the pen with which the error bars will be drawn. <simplesect kind="see"><para><ref refid="class_q_c_p_graph_1a10f50c5495ce45ef559ec2066194a335" kindref="member">setErrorBarSize</ref>, <ref refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" kindref="member">setErrorType</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2554" column="8" bodyfile="qcustomplot.cpp" bodystart="14760" bodyend="14763"/>
        <references refid="class_q_c_p_graph_1aa35681a24165c2831301091a87b662ce" compoundref="qcustomplot_8h" startline="2583">mErrorPen</references>
        <references refid="class_q_c_p_abstract_plottable_1ad5972efc31344e5a7a78ab4f8864b2d3" compoundref="qcustomplot_8h" startline="1413" endline="1413">QCPAbstractPlottable::pen</references>
        <referencedby refid="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" compoundref="qcustomplot_8cpp" startline="14483" endline="14500">QCPGraph</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a10f50c5495ce45ef559ec2066194a335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setErrorBarSize</definition>
        <argsstring>(double size)</argsstring>
        <name>setErrorBarSize</name>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the width of the handles at both ends of an error bar in pixels. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2555" column="8" bodyfile="qcustomplot.cpp" bodystart="14768" bodyend="14771"/>
        <references refid="class_q_c_p_graph_1a7b51c8d09510f9d195b5e765ccbcf05b" compoundref="qcustomplot_8h" startline="2587">mErrorBarSize</references>
        <referencedby refid="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" compoundref="qcustomplot_8cpp" startline="14483" endline="14500">QCPGraph</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ab1c1ee03d8dd94676a564e5e5f11aac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setErrorBarSkipSymbol</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setErrorBarSkipSymbol</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>enabled</emphasis> is set to true, the error bar will not be drawn as a solid line under the scatter symbol but leave some free space around the symbol.</para>
<para>This feature uses the current scatter size (<ref refid="class_q_c_p_scatter_style_1aaefdd031052892c4136129db68596e0f" kindref="member">QCPScatterStyle::setSize</ref>) to determine the size of the area to leave blank. So when drawing Pixmaps as scatter points (<ref refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a8718b849ca7c307b07b8e091efb0c31e" kindref="member">QCPScatterStyle::ssPixmap</ref>), the scatter size must be set manually to a value corresponding to the size of the Pixmap, if the error bars should leave gaps to its boundaries.</para>
<para><ref refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" kindref="member">setErrorType</ref>, setErrorBarSize, setScatterStyle </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2556" column="8" bodyfile="qcustomplot.cpp" bodystart="14784" bodyend="14787"/>
        <references refid="class_q_c_p_graph_1acf631d7dbd1055a69ab3b63094868557" compoundref="qcustomplot_8h" startline="2588">mErrorBarSkipSymbol</references>
        <referencedby refid="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" compoundref="qcustomplot_8cpp" startline="14483" endline="14500">QCPGraph</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a2d03156df1b64037a2e36cfa50351ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setChannelFillGraph</definition>
        <argsstring>(QCPGraph *targetGraph)</argsstring>
        <name>setChannelFillGraph</name>
        <param>
          <type><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> *</type>
          <declname>targetGraph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the target graph for filling the area between this graph and <emphasis>targetGraph</emphasis> with the current brush (<ref refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" kindref="member">setBrush</ref>).</para>
<para>When <emphasis>targetGraph</emphasis> is set to 0, a normal graph fill to the zero-value-line will be shown. To disable any filling, set the brush to Qt::NoBrush.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" kindref="member">setBrush</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2557" column="8" bodyfile="qcustomplot.cpp" bodystart="14798" bodyend="14816"/>
        <references refid="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" compoundref="qcustomplot_8h" startline="2589">mChannelFillGraph</references>
        <references refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" compoundref="qcustomplot_8h" startline="447">QCPLayerable::mParentPlot</references>
        <referencedby refid="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" compoundref="qcustomplot_8cpp" startline="14483" endline="14500">QCPGraph</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ab468cd600160f327836aa0644291e64c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setAdaptiveSampling</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setAdaptiveSampling</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets whether adaptive sampling shall be used when plotting this graph. <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref>&apos;s adaptive sampling technique can drastically improve the replot performance for graphs with a larger number of points (e.g. above 10,000), without notably changing the appearance of the graph.</para>
<para>By default, adaptive sampling is enabled. Even if enabled, <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> decides whether adaptive sampling shall actually be used on a per-graph basis. So leaving adaptive sampling enabled has no disadvantage in almost all cases.</para>
<para><image type="html" name="adaptive-sampling-line.png">A line plot of 500,000 points without and with adaptive sampling</image>
</para>
<para>As can be seen, line plots experience no visual degradation from adaptive sampling. Outliers are reproduced reliably, as well as the overall shape of the data set. The replot time reduces dramatically though. This allows <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> to display large amounts of data in realtime.</para>
<para><image type="html" name="adaptive-sampling-scatter.png">A scatter plot of 100,000 points without and with adaptive sampling</image>
</para>
<para>Care must be taken when using high-density scatter plots in combination with adaptive sampling. The adaptive sampling algorithm treats scatter plots more carefully than line plots which still gives a significant reduction of replot times, but not quite as much as for line plots. This is because scatter plots inherently need more data points to be preserved in order to still resemble the original, non-adaptive-sampling plot. As shown above, the results still aren&apos;t quite identical, as banding occurs for the outer data points. This is in fact intentional, such that the boundaries of the data cloud stay visible to the viewer. How strong the banding appears, depends on the point density, i.e. the number of points in the plot.</para>
<para>For some situations with scatter plots it might thus be desirable to manually turn adaptive sampling off. For example, when saving the plot to disk. This can be achieved by setting <emphasis>enabled</emphasis> to false before issuing a command like <ref refid="class_q_custom_plot_1a7636261aff1f6d25c9da749ece3fc8b8" kindref="member">QCustomPlot::savePng</ref>, and setting <emphasis>enabled</emphasis> back to true afterwards. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2558" column="8" bodyfile="qcustomplot.cpp" bodystart="14849" bodyend="14852"/>
        <references refid="class_q_c_p_graph_1aa951e78aeba714cf443be6da2e52502e" compoundref="qcustomplot_8h" startline="2590">mAdaptiveSampling</references>
        <referencedby refid="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" compoundref="qcustomplot_8cpp" startline="14483" endline="14500">QCPGraph</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::addData</definition>
        <argsstring>(const QCPDataMap &amp;dataMap)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref> &amp;</type>
          <declname>dataMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds the provided data points in <emphasis>dataMap</emphasis> to the current data.</para>
<para>Alternatively, you can also access and modify the graph&apos;s data via the <ref refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" kindref="member">data</ref> method, which returns a pointer to the internal <ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_1a4a0fde50b7db9db0a85b5c5b6b10098f" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2561" column="8" bodyfile="qcustomplot.cpp" bodystart="14862" bodyend="14865"/>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a80cc91e1e0ef77eb50afc5b366d0efd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::addData</definition>
        <argsstring>(const QCPData &amp;data)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="class_q_c_p_data" kindref="compound">QCPData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Adds the provided single data point in <emphasis>data</emphasis> to the current data.</para>
<para>Alternatively, you can also access and modify the graph&apos;s data via the <ref refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" kindref="member">data</ref> method, which returns a pointer to the internal <ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_1a4a0fde50b7db9db0a85b5c5b6b10098f" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2562" column="8" bodyfile="qcustomplot.cpp" bodystart="14875" bodyend="14878"/>
        <references refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" compoundref="qcustomplot_8h" startline="2532" endline="2532">data</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a0bf98b1972286cfb7b1c4b7dd6ae2012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::addData</definition>
        <argsstring>(double key, double value)</argsstring>
        <name>addData</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Adds the provided single data point as <emphasis>key</emphasis> and <emphasis>value</emphasis> pair to the current data.</para>
<para>Alternatively, you can also access and modify the graph&apos;s data via the <ref refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" kindref="member">data</ref> method, which returns a pointer to the internal <ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_1a4a0fde50b7db9db0a85b5c5b6b10098f" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2563" column="8" bodyfile="qcustomplot.cpp" bodystart="14888" bodyend="14894"/>
        <references refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" compoundref="qcustomplot_8h" startline="2472">QCPData::key</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" compoundref="qcustomplot_8h" startline="2472">QCPData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ab6da6377541fe80d892a9893a92db9c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::addData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;keys, const QVector&lt; double &gt; &amp;values)</argsstring>
        <name>addData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Adds the provided data points as <emphasis>key</emphasis> and <emphasis>value</emphasis> pairs to the current data.</para>
<para>Alternatively, you can also access and modify the graph&apos;s data via the <ref refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" kindref="member">data</ref> method, which returns a pointer to the internal <ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_1a4a0fde50b7db9db0a85b5c5b6b10098f" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2564" column="8" bodyfile="qcustomplot.cpp" bodystart="14904" bodyend="14914"/>
        <references refid="class_q_c_p_data_1a2f5ba9aca61bb74f88516e148a4cf71b" compoundref="qcustomplot_8h" startline="2472">QCPData::key</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_data_1aefe1ecf8fa2e34ed875b67523e542373" compoundref="qcustomplot_8h" startline="2472">QCPData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a9fe0b3e54e8c7b61319bd03337e21e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::removeDataBefore</definition>
        <argsstring>(double key)</argsstring>
        <name>removeDataBefore</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all data points with keys smaller than <emphasis>key</emphasis>. <simplesect kind="see"><para><ref refid="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" kindref="member">addData</ref>, <ref refid="class_q_c_p_graph_1ad4e94a4e44e5e76fbec81a72a977157d" kindref="member">clearData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2565" column="8" bodyfile="qcustomplot.cpp" bodystart="14920" bodyend="14925"/>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ae42d645ef617cfc75fc0df58e62c522a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::removeDataAfter</definition>
        <argsstring>(double key)</argsstring>
        <name>removeDataAfter</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all data points with keys greater than <emphasis>key</emphasis>. <simplesect kind="see"><para><ref refid="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" kindref="member">addData</ref>, <ref refid="class_q_c_p_graph_1ad4e94a4e44e5e76fbec81a72a977157d" kindref="member">clearData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2566" column="8" bodyfile="qcustomplot.cpp" bodystart="14931" bodyend="14937"/>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a4a0fde50b7db9db0a85b5c5b6b10098f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::removeData</definition>
        <argsstring>(double fromKey, double toKey)</argsstring>
        <name>removeData</name>
        <param>
          <type>double</type>
          <declname>fromKey</declname>
        </param>
        <param>
          <type>double</type>
          <declname>toKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all data points with keys between <emphasis>fromKey</emphasis> and <emphasis>toKey</emphasis>. if <emphasis>fromKey</emphasis> is greater or equal to <emphasis>toKey</emphasis>, the function does nothing. To remove a single data point with known key, use <ref refid="class_q_c_p_graph_1a4a706020b4318f118381648ef18aca3f" kindref="member">removeData(double key)</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" kindref="member">addData</ref>, <ref refid="class_q_c_p_graph_1ad4e94a4e44e5e76fbec81a72a977157d" kindref="member">clearData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2567" column="8" bodyfile="qcustomplot.cpp" bodystart="14946" bodyend="14953"/>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a4a706020b4318f118381648ef18aca3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::removeData</definition>
        <argsstring>(double key)</argsstring>
        <name>removeData</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Removes a single data point at <emphasis>key</emphasis>. If the position is not known with absolute precision, consider using <ref refid="class_q_c_p_graph_1a4a0fde50b7db9db0a85b5c5b6b10098f" kindref="member">removeData(double fromKey, double toKey)</ref> with a small fuzziness interval around the suspected position, depeding on the precision with which the key is known.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" kindref="member">addData</ref>, <ref refid="class_q_c_p_graph_1ad4e94a4e44e5e76fbec81a72a977157d" kindref="member">clearData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2568" column="8" bodyfile="qcustomplot.cpp" bodystart="14963" bodyend="14966"/>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ad4e94a4e44e5e76fbec81a72a977157d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPGraph::clearData</definition>
        <argsstring>()</argsstring>
        <name>clearData</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1a86e5b8fd4b6ff4f4084e7ea4c573fc53">clearData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all data points. <simplesect kind="see"><para><ref refid="class_q_c_p_graph_1a4a0fde50b7db9db0a85b5c5b6b10098f" kindref="member">removeData</ref>, <ref refid="class_q_c_p_graph_1ae42d645ef617cfc75fc0df58e62c522a" kindref="member">removeDataAfter</ref>, <ref refid="class_q_c_p_graph_1a9fe0b3e54e8c7b61319bd03337e21e99" kindref="member">removeDataBefore</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2571" column="16" bodyfile="qcustomplot.cpp" bodystart="14972" bodyend="14975"/>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a36011c34aca4f7a477de25961e2f6c13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QCPGraph::selectTest</definition>
        <argsstring>(const QPointF &amp;pos, bool onlySelectable, QVariant *details=0) const</argsstring>
        <name>selectTest</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1a38efe9641d972992a3d44204bc80ec1d">selectTest</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelectable</declname>
        </param>
        <param>
          <type>QVariant *</type>
          <declname>details</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to decide whether a click hits a layerable object or not.</para>
<para><emphasis>pos</emphasis> is a point in pixel coordinates on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> surface. This function returns the shortest pixel distance of this point to the object. If the object is either invisible or the distance couldn&apos;t be determined, -1.0 is returned. Further, if <emphasis>onlySelectable</emphasis> is true and the object is not selectable, -1.0 is returned, too.</para>
<para>If the object is represented not by single lines but by an area like a <ref refid="class_q_c_p_item_text" kindref="compound">QCPItemText</ref> or the bars of a <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> plottable, a click inside the area should also be considered a hit. In these cases this function thus returns a constant value greater zero but still below the parent plot&apos;s selection tolerance. (typically the selectionTolerance multiplied by 0.99).</para>
<para>Providing a constant value for area objects allows selecting line objects even when they are obscured by such area objects, by clicking close to the lines (i.e. closer than 0.99*selectionTolerance).</para>
<para>The actual setting of the selection state is not done by this function. This is handled by the parent <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> when the mouseReleaseEvent occurs, and the finally selected object is notified via the selectEvent/deselectEvent methods.</para>
<para><emphasis>details</emphasis> is an optional output parameter. Every layerable subclass may place any information in <emphasis>details</emphasis>. This information will be passed to <ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">selectEvent</ref> when the parent <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> decides on the basis of this selectTest call, that the object was successfully selected. The subsequent call to <ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">selectEvent</ref> will carry the <emphasis>details</emphasis>. This is useful for multi-part objects (like <ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>). This way, a possibly complex calculation to decide which part was clicked is only done once in <ref refid="class_q_c_p_graph_1a36011c34aca4f7a477de25961e2f6c13" kindref="member">selectTest</ref>. The result (i.e. the actually clicked part) can then be placed in <emphasis>details</emphasis>. So in the subsequent <ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">selectEvent</ref>, the decision which part was selected doesn&apos;t have to be done a second time for a single selection operation.</para>
<para>You may pass 0 as <emphasis>details</emphasis> to indicate that you are not interested in those selection details.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">selectEvent</ref>, <ref refid="class_q_c_p_abstract_plottable_1a6fa0d0f95560ea8b01ee13f296dab2b1" kindref="member">deselectEvent</ref>, <ref refid="class_q_custom_plot_1a5ee1e2f6ae27419deca53e75907c27e5" kindref="member">QCustomPlot::setInteractions</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2572" column="18" bodyfile="qcustomplot.cpp" bodystart="14978" bodyend="14989"/>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" compoundref="qcustomplot_8h" startline="1466">QCPAbstractPlottable::mSelectable</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_graph_1a96146099a5e68f49c7326a765f768da2" compoundref="qcustomplot_8cpp" startline="16400" endline="16459">pointDistance</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a9c3909d6116e9d03978f057d41174e6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::rescaleAxes</definition>
        <argsstring>(bool onlyEnlarge, bool includeErrorBars) const</argsstring>
        <name>rescaleAxes</name>
        <param>
          <type>bool</type>
          <declname>onlyEnlarge</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeErrorBars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Allows to define whether error bars are taken into consideration when determining the new axis range.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_1a051fb77b459ba1ae8d65552c67f45e94" kindref="member">rescaleKeyAxis</ref>, <ref refid="class_q_c_p_graph_1a9e0e620a56932c4df80a3762c2f93608" kindref="member">rescaleValueAxis</ref>, <ref refid="class_q_c_p_abstract_plottable_1a1491c4a606bccd2d09e65e11b79eb882" kindref="member">QCPAbstractPlottable::rescaleAxes</ref>, <ref refid="class_q_custom_plot_1ad86528f2cee6c7e446dea4a6e8839935" kindref="member">QCustomPlot::rescaleAxes</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2576" column="8" bodyfile="qcustomplot.cpp" bodystart="14998" bodyend="15002"/>
        <references refid="class_q_c_p_graph_1ae96b83c961e257da116c6acf9c7da308" compoundref="qcustomplot_8cpp" startline="7050" endline="7080">rescaleKeyAxis</references>
        <references refid="class_q_c_p_graph_1aa1e408bb2d13999150c3f7f8a8579ca9" compoundref="qcustomplot_8cpp" startline="7090" endline="7120">rescaleValueAxis</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a051fb77b459ba1ae8d65552c67f45e94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::rescaleKeyAxis</definition>
        <argsstring>(bool onlyEnlarge, bool includeErrorBars) const</argsstring>
        <name>rescaleKeyAxis</name>
        <param>
          <type>bool</type>
          <declname>onlyEnlarge</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeErrorBars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Allows to define whether error bars (of kind <ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa2a5d89cd76fb8b6b18d71b8f6f6c0f43" kindref="member">QCPGraph::etKey</ref>) are taken into consideration when determining the new axis range.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_1a9c3909d6116e9d03978f057d41174e6a" kindref="member">rescaleAxes</ref>, <ref refid="class_q_c_p_abstract_plottable_1ae96b83c961e257da116c6acf9c7da308" kindref="member">QCPAbstractPlottable::rescaleKeyAxis</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2577" column="8" bodyfile="qcustomplot.cpp" bodystart="15011" bodyend="15038"/>
        <references refid="class_q_c_p_graph_1ad65bc571de3bd0af36296a3cbd0d77ee" compoundref="qcustomplot_8cpp" startline="16485" endline="16490">getKeyRange</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">QCPRange::lower</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_axis_1ac4058855a81f1a883cf2e754f6a6acb1" compoundref="qcustomplot_8h" startline="1096" endline="1096">QCPAxis::range</references>
        <references refid="class_q_c_p_axis_1ad23e9ad97b44e9aeaf4fab8904280098" compoundref="qcustomplot_8h" startline="1094" endline="1094">QCPAxis::scaleType</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" compoundref="qcustomplot_8h" startline="1456">QCPAbstractPlottable::sdBoth</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" compoundref="qcustomplot_8h" startline="1455">QCPAbstractPlottable::sdNegative</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" compoundref="qcustomplot_8h" startline="1457">QCPAbstractPlottable::sdPositive</references>
        <references refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" compoundref="qcustomplot_8cpp" startline="4206" endline="4223">QCPAxis::setRange</references>
        <references refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" compoundref="qcustomplot_8h" startline="1073">QCPAxis::stLogarithmic</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">QCPRange::upper</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a9e0e620a56932c4df80a3762c2f93608" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::rescaleValueAxis</definition>
        <argsstring>(bool onlyEnlarge, bool includeErrorBars) const</argsstring>
        <name>rescaleValueAxis</name>
        <param>
          <type>bool</type>
          <declname>onlyEnlarge</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeErrorBars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Allows to define whether error bars (of kind <ref refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa147022ccdc49f6bd48f904cb4f61872e" kindref="member">QCPGraph::etValue</ref>) are taken into consideration when determining the new axis range.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_1a9c3909d6116e9d03978f057d41174e6a" kindref="member">rescaleAxes</ref>, <ref refid="class_q_c_p_abstract_plottable_1aa1e408bb2d13999150c3f7f8a8579ca9" kindref="member">QCPAbstractPlottable::rescaleValueAxis</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2578" column="8" bodyfile="qcustomplot.cpp" bodystart="15047" bodyend="15074"/>
        <references refid="class_q_c_p_graph_1ac205efd80b4a70d67b163429dc6cba8d" compoundref="qcustomplot_8cpp" startline="16493" endline="16498">getValueRange</references>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">QCPRange::lower</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ac4058855a81f1a883cf2e754f6a6acb1" compoundref="qcustomplot_8h" startline="1096" endline="1096">QCPAxis::range</references>
        <references refid="class_q_c_p_axis_1ad23e9ad97b44e9aeaf4fab8904280098" compoundref="qcustomplot_8h" startline="1094" endline="1094">QCPAxis::scaleType</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" compoundref="qcustomplot_8h" startline="1456">QCPAbstractPlottable::sdBoth</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" compoundref="qcustomplot_8h" startline="1455">QCPAbstractPlottable::sdNegative</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" compoundref="qcustomplot_8h" startline="1457">QCPAbstractPlottable::sdPositive</references>
        <references refid="class_q_c_p_axis_1aebdfea5d44c3a0ad2b4700cd4d25b641" compoundref="qcustomplot_8cpp" startline="4206" endline="4223">QCPAxis::setRange</references>
        <references refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" compoundref="qcustomplot_8h" startline="1073">QCPAxis::stLogarithmic</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">QCPRange::upper</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a1491c4a606bccd2d09e65e11b79eb882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAbstractPlottable::rescaleAxes</definition>
        <argsstring>(bool onlyEnlarge=false) const</argsstring>
        <name>rescaleAxes</name>
        <param>
          <type>bool</type>
          <declname>onlyEnlarge</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rescales the key and value axes associated with this plottable to contain all displayed data, so the whole plottable is visible. If the scaling of an axis is logarithmic, rescaleAxes will make sure not to rescale to an illegal range i.e. a range containing different signs and/or zero. Instead it will stay in the current sign domain and ignore all parts of the plottable that lie outside of that domain.</para>
<para><emphasis>onlyEnlarge</emphasis> makes sure the ranges are only expanded, never reduced. So it&apos;s possible to show multiple plottables in their entirety by multiple calls to rescaleAxes where the first call has <emphasis>onlyEnlarge</emphasis> set to false (the default), and all subsequent set to true.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_graph_1a051fb77b459ba1ae8d65552c67f45e94" kindref="member">rescaleKeyAxis</ref>, <ref refid="class_q_c_p_graph_1a9e0e620a56932c4df80a3762c2f93608" kindref="member">rescaleValueAxis</ref>, <ref refid="class_q_custom_plot_1ad86528f2cee6c7e446dea4a6e8839935" kindref="member">QCustomPlot::rescaleAxes</ref>, <ref refid="class_q_c_p_axis_1a499345f02ebce4b23d8ccec96e58daa9" kindref="member">QCPAxis::rescale</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2573" column="3" bodyfile="qcustomplot.cpp" bodystart="7039" bodyend="7043"/>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ae96b83c961e257da116c6acf9c7da308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAbstractPlottable::rescaleKeyAxis</definition>
        <argsstring>(bool onlyEnlarge=false) const</argsstring>
        <name>rescaleKeyAxis</name>
        <param>
          <type>bool</type>
          <declname>onlyEnlarge</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rescales the key axis of the plottable so the whole plottable is visible.</para>
<para>See <ref refid="class_q_c_p_graph_1a9c3909d6116e9d03978f057d41174e6a" kindref="member">rescaleAxes</ref> for detailed behaviour. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2574" column="3" bodyfile="qcustomplot.cpp" bodystart="7050" bodyend="7080"/>
        <referencedby refid="class_q_c_p_graph_1a9c3909d6116e9d03978f057d41174e6a" compoundref="qcustomplot_8cpp" startline="14998" endline="15002">rescaleAxes</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1aa1e408bb2d13999150c3f7f8a8579ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPAbstractPlottable::rescaleValueAxis</definition>
        <argsstring>(bool onlyEnlarge=false) const</argsstring>
        <name>rescaleValueAxis</name>
        <param>
          <type>bool</type>
          <declname>onlyEnlarge</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rescales the value axis of the plottable so the whole plottable is visible.</para>
<para>Returns true if the axis was actually scaled. This might not be the case if this plottable has an invalid range, e.g. because it has no data points.</para>
<para>See <ref refid="class_q_c_p_graph_1a9c3909d6116e9d03978f057d41174e6a" kindref="member">rescaleAxes</ref> for detailed behaviour. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2575" column="3" bodyfile="qcustomplot.cpp" bodystart="7090" bodyend="7120"/>
        <referencedby refid="class_q_c_p_graph_1a9c3909d6116e9d03978f057d41174e6a" compoundref="qcustomplot_8cpp" startline="14998" endline="15002">rescaleAxes</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_graph_1a659218cc62c2a7786213d9dd429c1c8d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPGraph::draw</definition>
        <argsstring>(QCPPainter *painter)</argsstring>
        <name>draw</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1acbab5e30dcd04fd302b4a5902ac2c482">draw</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2593" column="16" bodyfile="qcustomplot.cpp" bodystart="15077" bodyend="15122"/>
        <references refid="class_q_c_p_graph_1a9e6ce6db9aa7b29fc397c724fcf7b126" compoundref="qcustomplot_8cpp" startline="15481" endline="15502">drawFill</references>
        <references refid="class_q_c_p_graph_1ac62c84f51d85b78ee583455b8c37ba56" compoundref="qcustomplot_8cpp" startline="15635" endline="15647">drawImpulsePlot</references>
        <references refid="class_q_c_p_graph_1af460db06d4d6466806721fe101f512e3" compoundref="qcustomplot_8cpp" startline="15560" endline="15626">drawLinePlot</references>
        <references refid="class_q_c_p_graph_1ae1f3edd5eb41aa5782e61673488fd3e0" compoundref="qcustomplot_8cpp" startline="15513" endline="15549">drawScatterPlot</references>
        <references refid="class_q_c_p_graph_1a5ec495f97b8185ba9712430cb1558f52" compoundref="qcustomplot_8cpp" startline="15177" endline="15188">getPlotData</references>
        <references refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" compoundref="qcustomplot_8h" startline="172" endline="175">QCP::isInvalidData</references>
        <references refid="class_q_c_p_scatter_style_1a72db6bcb1e1abd6e53c1315dd3dea7e4" compoundref="qcustomplot_8h" startline="291" endline="291">QCPScatterStyle::isNone</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" compoundref="qcustomplot_8h" startline="2515">lsImpulse</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" compoundref="qcustomplot_8h" startline="2509">lsNone</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" compoundref="qcustomplot_8h" startline="2584">mLineStyle</references>
        <references refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" compoundref="qcustomplot_8h" startline="2585">mScatterStyle</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a52c226eefcb1920240eeabae574d28c0" compoundref="qcustomplot_8h" startline="1409" endline="1409">QCPAbstractPlottable::name</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ae962caca309faae29ce0988d0d0eff4b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPGraph::drawLegendIcon</definition>
        <argsstring>(QCPPainter *painter, const QRectF &amp;rect) const</argsstring>
        <name>drawLegendIcon</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1a9a450783fd9ed539e589999fd390cdf7">drawLegendIcon</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2594" column="16" bodyfile="qcustomplot.cpp" bodystart="15125" bodyend="15157"/>
        <references refid="class_q_c_p_abstract_plottable_1a59a80773c5cefc05a0646ac8e1149ed5" compoundref="qcustomplot_8cpp" startline="7297" endline="7300">QCPAbstractPlottable::applyDefaultAntialiasingHint</references>
        <references refid="class_q_c_p_abstract_plottable_1a8d06a59ea23324cce6330ebf2262c0ed" compoundref="qcustomplot_8cpp" startline="7313" endline="7316">QCPAbstractPlottable::applyFillAntialiasingHint</references>
        <references refid="class_q_c_p_abstract_plottable_1ac95f26b15a1e5d9c7bd2c0a46d760fc9" compoundref="qcustomplot_8cpp" startline="7329" endline="7332">QCPAbstractPlottable::applyScattersAntialiasingHint</references>
        <references refid="class_q_c_p_scatter_style_1afd8044ece445300499ca0dc164821e0f" compoundref="qcustomplot_8cpp" startline="520" endline="524">QCPScatterStyle::applyTo</references>
        <references refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" compoundref="qcustomplot_8cpp" startline="129" endline="135">QCPPainter::drawLine</references>
        <references refid="class_q_c_p_scatter_style_1a2b3964961b6cbfbc87be6e1e3a6f3c96" compoundref="qcustomplot_8cpp" startline="534" endline="537">QCPScatterStyle::drawShape</references>
        <references refid="class_q_c_p_scatter_style_1a72db6bcb1e1abd6e53c1315dd3dea7e4" compoundref="qcustomplot_8h" startline="291" endline="291">QCPScatterStyle::isNone</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" compoundref="qcustomplot_8h" startline="2509">lsNone</references>
        <references refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" compoundref="qcustomplot_8h" startline="1464">QCPAbstractPlottable::mBrush</references>
        <references refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" compoundref="qcustomplot_8h" startline="2584">mLineStyle</references>
        <references refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" compoundref="qcustomplot_8h" startline="1463">QCPAbstractPlottable::mPen</references>
        <references refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" compoundref="qcustomplot_8h" startline="2585">mScatterStyle</references>
        <references refid="class_q_c_p_scatter_style_1a9b2d1a2ec0aac0c74f7582d14050e93a" compoundref="qcustomplot_8h" startline="279" endline="279">QCPScatterStyle::pixmap</references>
        <references refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" compoundref="qcustomplot_8cpp" startline="86" endline="91">QCPPainter::setPen</references>
        <references refid="class_q_c_p_scatter_style_1a5fb611d46acfac520d7b89a1c71d9246" compoundref="qcustomplot_8cpp" startline="494" endline="498">QCPScatterStyle::setPixmap</references>
        <references refid="class_q_c_p_scatter_style_1af04cad55bd7f58a96da4fc6bc46a0a1e" compoundref="qcustomplot_8h" startline="276" endline="276">QCPScatterStyle::shape</references>
        <references refid="class_q_c_p_scatter_style_1adb31525af6b680e6f1b7472e43859349a8718b849ca7c307b07b8e091efb0c31e" compoundref="qcustomplot_8h" startline="262">QCPScatterStyle::ssPixmap</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ad65bc571de3bd0af36296a3cbd0d77ee" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>QCPRange QCPGraph::getKeyRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain=sdBoth) const</argsstring>
        <name>getKeyRange</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1a345d702b2e7e12c8cfdddff65ba85e8c">getKeyRange</reimplements>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
          <defval><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2595" column="20" bodyfile="qcustomplot.cpp" bodystart="16485" bodyend="16490"/>
        <referencedby refid="class_q_c_p_graph_1a051fb77b459ba1ae8d65552c67f45e94" compoundref="qcustomplot_8cpp" startline="15011" endline="15038">rescaleKeyAxis</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ac205efd80b4a70d67b163429dc6cba8d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>QCPRange QCPGraph::getValueRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain=sdBoth) const</argsstring>
        <name>getValueRange</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1aa3331b415b5939fe4df60b78831b2799">getValueRange</reimplements>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
          <defval><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2596" column="20" bodyfile="qcustomplot.cpp" bodystart="16493" bodyend="16498"/>
        <referencedby refid="class_q_c_p_graph_1a9e0e620a56932c4df80a3762c2f93608" compoundref="qcustomplot_8cpp" startline="15047" endline="15074">rescaleValueAxis</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ae6425d5df537c08159f794cb18c051c3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>QCPRange QCPGraph::getKeyRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain, bool includeErrors) const</argsstring>
        <name>getKeyRange</name>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeErrors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Allows to specify whether the error bars should be included in the range calculation.</para>
<para><simplesect kind="see"><para>getKeyRange(bool &amp;foundRange, SignDomain inSignDomain) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2597" column="20" bodyfile="qcustomplot.cpp" bodystart="16506" bodyend="16613"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">QCPRange::lower</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" compoundref="qcustomplot_8h" startline="1456">QCPAbstractPlottable::sdBoth</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" compoundref="qcustomplot_8h" startline="1455">QCPAbstractPlottable::sdNegative</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" compoundref="qcustomplot_8h" startline="1457">QCPAbstractPlottable::sdPositive</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">QCPRange::upper</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ac23c7702ca836c7055f48e6fc3295ca4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>QCPRange QCPGraph::getValueRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain, bool includeErrors) const</argsstring>
        <name>getValueRange</name>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeErrors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Allows to specify whether the error bars should be included in the range calculation.</para>
<para><simplesect kind="see"><para>getValueRange(bool &amp;foundRange, SignDomain inSignDomain) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2598" column="20" bodyfile="qcustomplot.cpp" bodystart="16621" bodyend="16728"/>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">QCPRange::lower</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" compoundref="qcustomplot_8h" startline="1456">QCPAbstractPlottable::sdBoth</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" compoundref="qcustomplot_8h" startline="1455">QCPAbstractPlottable::sdNegative</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" compoundref="qcustomplot_8h" startline="1457">QCPAbstractPlottable::sdPositive</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">QCPRange::upper</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a9e6ce6db9aa7b29fc397c724fcf7b126" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPGraph::drawFill</definition>
        <argsstring>(QCPPainter *painter, QVector&lt; QPointF &gt; *lineData) const</argsstring>
        <name>drawFill</name>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2601" column="16" bodyfile="qcustomplot.cpp" bodystart="15481" bodyend="15502"/>
        <references refid="class_q_c_p_graph_1a8e517dcd3baba1b41daed0248841c092" compoundref="qcustomplot_8cpp" startline="16019" endline="16035">addFillBasePoints</references>
        <references refid="class_q_c_p_abstract_plottable_1a8d06a59ea23324cce6330ebf2262c0ed" compoundref="qcustomplot_8cpp" startline="7313" endline="7316">QCPAbstractPlottable::applyFillAntialiasingHint</references>
        <references refid="class_q_c_p_graph_1add26655bd2338adaa7fc99e27bd06550" compoundref="qcustomplot_8cpp" startline="16190" endline="16323">getChannelFillPolygon</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" compoundref="qcustomplot_8h" startline="2515">lsImpulse</references>
        <references refid="class_q_c_p_abstract_plottable_1ac9147022a662e92b46c39e7cb821b0af" compoundref="qcustomplot_8cpp" startline="7279" endline="7282">QCPAbstractPlottable::mainBrush</references>
        <references refid="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" compoundref="qcustomplot_8h" startline="2589">mChannelFillGraph</references>
        <references refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" compoundref="qcustomplot_8h" startline="2584">mLineStyle</references>
        <references refid="class_q_c_p_graph_1aff2ae149f6d319fc3ed2c7c6fb348553" compoundref="qcustomplot_8cpp" startline="16043" endline="16049">removeFillBasePoints</references>
        <references refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" compoundref="qcustomplot_8cpp" startline="86" endline="91">QCPPainter::setPen</references>
        <referencedby refid="class_q_c_p_graph_1a659218cc62c2a7786213d9dd429c1c8d" compoundref="qcustomplot_8cpp" startline="15077" endline="15122">draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ae1f3edd5eb41aa5782e61673488fd3e0" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPGraph::drawScatterPlot</definition>
        <argsstring>(QCPPainter *painter, QVector&lt; QCPData &gt; *scatterData) const</argsstring>
        <name>drawScatterPlot</name>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="class_q_c_p_data" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2602" column="16" bodyfile="qcustomplot.cpp" bodystart="15513" bodyend="15549"/>
        <references refid="class_q_c_p_abstract_plottable_1a0889abc8dbfd357053f40bfafff8bf7d" compoundref="qcustomplot_8cpp" startline="7345" endline="7348">QCPAbstractPlottable::applyErrorBarsAntialiasingHint</references>
        <references refid="class_q_c_p_abstract_plottable_1ac95f26b15a1e5d9c7bd2c0a46d760fc9" compoundref="qcustomplot_8cpp" startline="7329" endline="7332">QCPAbstractPlottable::applyScattersAntialiasingHint</references>
        <references refid="class_q_c_p_scatter_style_1afd8044ece445300499ca0dc164821e0f" compoundref="qcustomplot_8cpp" startline="520" endline="524">QCPScatterStyle::applyTo</references>
        <references refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</references>
        <references refid="class_q_c_p_graph_1ab51aeba7e9d29754e58852cfad3436cc" compoundref="qcustomplot_8cpp" startline="15849" endline="15944">drawError</references>
        <references refid="class_q_c_p_scatter_style_1a2b3964961b6cbfbc87be6e1e3a6f3c96" compoundref="qcustomplot_8cpp" startline="534" endline="537">QCPScatterStyle::drawShape</references>
        <references refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afaeae745e7cc1766bb8546e35d4b76a711" compoundref="qcustomplot_8h" startline="2521">etNone</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_graph_1aa35681a24165c2831301091a87b662ce" compoundref="qcustomplot_8h" startline="2583">mErrorPen</references>
        <references refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" compoundref="qcustomplot_8h" startline="2586">mErrorType</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" compoundref="qcustomplot_8h" startline="1463">QCPAbstractPlottable::mPen</references>
        <references refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" compoundref="qcustomplot_8h" startline="2585">mScatterStyle</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" compoundref="qcustomplot_8cpp" startline="86" endline="91">QCPPainter::setPen</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_graph_1a659218cc62c2a7786213d9dd429c1c8d" compoundref="qcustomplot_8cpp" startline="15077" endline="15122">draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1af460db06d4d6466806721fe101f512e3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPGraph::drawLinePlot</definition>
        <argsstring>(QCPPainter *painter, QVector&lt; QPointF &gt; *lineData) const</argsstring>
        <name>drawLinePlot</name>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2603" column="16" bodyfile="qcustomplot.cpp" bodystart="15560" bodyend="15626"/>
        <references refid="class_q_c_p_abstract_plottable_1a59a80773c5cefc05a0646ac8e1149ed5" compoundref="qcustomplot_8cpp" startline="7297" endline="7300">QCPAbstractPlottable::applyDefaultAntialiasingHint</references>
        <references refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" compoundref="qcustomplot_8cpp" startline="129" endline="135">QCPPainter::drawLine</references>
        <references refid="class_q_c_p_abstract_plottable_1abd790a3b229239f49067f136633a4b98" compoundref="qcustomplot_8cpp" startline="7269" endline="7272">QCPAbstractPlottable::mainPen</references>
        <references refid="class_q_c_p_painter_1aef102658219b24165f7ee2aad1b9e48f" compoundref="qcustomplot_8h" startline="334" endline="334">QCPPainter::modes</references>
        <references refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" compoundref="qcustomplot_8h" startline="447">QCPLayerable::mParentPlot</references>
        <references refid="namespace_q_c_p_1a5400e5fcb9528d92002ddb938c1f4ef4aa5fd227bc878c56ad2a87ea32c74ee4d" compoundref="qcustomplot_8h" startline="140">QCP::phFastPolylines</references>
        <references refid="class_q_custom_plot_1ac724f4075822f74f7b676a790095b877" compoundref="qcustomplot_8h" startline="1730" endline="1730">QCustomPlot::plottingHints</references>
        <references refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156dae78f9a4eb277a5f9207f50850a51a0b0" compoundref="qcustomplot_8h" startline="322">QCPPainter::pmNoCaching</references>
        <references refid="class_q_c_p_painter_1a156cf16444ff5e0d81a73c615fdb156daeda679cd55dcd468341d07d48a30b6ab" compoundref="qcustomplot_8h" startline="321">QCPPainter::pmVectorized</references>
        <references refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" compoundref="qcustomplot_8cpp" startline="86" endline="91">QCPPainter::setPen</references>
        <referencedby refid="class_q_c_p_graph_1a659218cc62c2a7786213d9dd429c1c8d" compoundref="qcustomplot_8cpp" startline="15077" endline="15122">draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ac62c84f51d85b78ee583455b8c37ba56" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPGraph::drawImpulsePlot</definition>
        <argsstring>(QCPPainter *painter, QVector&lt; QPointF &gt; *lineData) const</argsstring>
        <name>drawImpulsePlot</name>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2604" column="16" bodyfile="qcustomplot.cpp" bodystart="15635" bodyend="15647"/>
        <references refid="class_q_c_p_abstract_plottable_1a59a80773c5cefc05a0646ac8e1149ed5" compoundref="qcustomplot_8cpp" startline="7297" endline="7300">QCPAbstractPlottable::applyDefaultAntialiasingHint</references>
        <references refid="class_q_c_p_abstract_plottable_1abd790a3b229239f49067f136633a4b98" compoundref="qcustomplot_8cpp" startline="7269" endline="7272">QCPAbstractPlottable::mainPen</references>
        <references refid="class_q_c_p_abstract_plottable_1ad5972efc31344e5a7a78ab4f8864b2d3" compoundref="qcustomplot_8h" startline="1413" endline="1413">QCPAbstractPlottable::pen</references>
        <references refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" compoundref="qcustomplot_8cpp" startline="86" endline="91">QCPPainter::setPen</references>
        <referencedby refid="class_q_c_p_graph_1a659218cc62c2a7786213d9dd429c1c8d" compoundref="qcustomplot_8cpp" startline="15077" endline="15122">draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getPreparedData</definition>
        <argsstring>(QVector&lt; QCPData &gt; *lineData, QVector&lt; QCPData &gt; *scatterData) const</argsstring>
        <name>getPreparedData</name>
        <param>
          <type>QVector&lt; <ref refid="class_q_c_p_data" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>lineData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="class_q_c_p_data" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2607" column="8" bodyfile="qcustomplot.cpp" bodystart="15661" bodyend="15840"/>
        <references refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</references>
        <references refid="class_q_c_p_graph_1ae413e4ea50fea821a48ee2b3c4aaa055" compoundref="qcustomplot_8cpp" startline="15990" endline="16002">countDataInBounds</references>
        <references refid="class_q_c_p_graph_1abda485a2f71ebe00d890840acbb91516" compoundref="qcustomplot_8cpp" startline="15960" endline="15978">getVisibleDataBounds</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">QCPRange::lower</references>
        <references refid="class_q_c_p_graph_1aa951e78aeba714cf443be6da2e52502e" compoundref="qcustomplot_8h" startline="2590">mAdaptiveSampling</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_axis_1a536ef8f624cac59b6b6fdcb495723c57" compoundref="qcustomplot_8cpp" startline="5286" endline="5319">QCPAxis::pixelToCoord</references>
        <references refid="class_q_c_p_axis_1ac4058855a81f1a883cf2e754f6a6acb1" compoundref="qcustomplot_8h" startline="1096" endline="1096">QCPAxis::range</references>
        <references refid="class_q_c_p_axis_1ab9866dd1a78f1920f491ec12a794bec2" compoundref="qcustomplot_8h" startline="1097" endline="1097">QCPAxis::rangeReversed</references>
        <references refid="class_q_c_p_axis_1ad23e9ad97b44e9aeaf4fab8904280098" compoundref="qcustomplot_8h" startline="1094" endline="1094">QCPAxis::scaleType</references>
        <references refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0abf5b785ad976618816dc6f79b73216d4" compoundref="qcustomplot_8h" startline="1073">QCPAxis::stLogarithmic</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">QCPRange::upper</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_graph_1aae73c001a78cbe54e55e6779d7a70957" compoundref="qcustomplot_8cpp" startline="15429" endline="15466">getImpulsePlotData</referencedby>
        <referencedby refid="class_q_c_p_graph_1a77314984a7af578a66e939db0db48556" compoundref="qcustomplot_8cpp" startline="15217" endline="15245">getLinePlotData</referencedby>
        <referencedby refid="class_q_c_p_graph_1a6ea929da420e6c104998060d19740ed6" compoundref="qcustomplot_8cpp" startline="15201" endline="15204">getScatterPlotData</referencedby>
        <referencedby refid="class_q_c_p_graph_1ab860d67ecc7e2d7253ab1f19032958c2" compoundref="qcustomplot_8cpp" startline="15364" endline="15416">getStepCenterPlotData</referencedby>
        <referencedby refid="class_q_c_p_graph_1a8f8ae9cb4aa312c2085c3f6f298f19d4" compoundref="qcustomplot_8cpp" startline="15258" endline="15298">getStepLeftPlotData</referencedby>
        <referencedby refid="class_q_c_p_graph_1a59fecb135f47db10e14d75018210bf80" compoundref="qcustomplot_8cpp" startline="15311" endline="15351">getStepRightPlotData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a5ec495f97b8185ba9712430cb1558f52" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getPlotData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *lineData, QVector&lt; QCPData &gt; *scatterData) const</argsstring>
        <name>getPlotData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="class_q_c_p_data" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2608" column="8" bodyfile="qcustomplot.cpp" bodystart="15177" bodyend="15188"/>
        <references refid="class_q_c_p_graph_1aae73c001a78cbe54e55e6779d7a70957" compoundref="qcustomplot_8cpp" startline="15429" endline="15466">getImpulsePlotData</references>
        <references refid="class_q_c_p_graph_1a77314984a7af578a66e939db0db48556" compoundref="qcustomplot_8cpp" startline="15217" endline="15245">getLinePlotData</references>
        <references refid="class_q_c_p_graph_1a6ea929da420e6c104998060d19740ed6" compoundref="qcustomplot_8cpp" startline="15201" endline="15204">getScatterPlotData</references>
        <references refid="class_q_c_p_graph_1ab860d67ecc7e2d7253ab1f19032958c2" compoundref="qcustomplot_8cpp" startline="15364" endline="15416">getStepCenterPlotData</references>
        <references refid="class_q_c_p_graph_1a8f8ae9cb4aa312c2085c3f6f298f19d4" compoundref="qcustomplot_8cpp" startline="15258" endline="15298">getStepLeftPlotData</references>
        <references refid="class_q_c_p_graph_1a59fecb135f47db10e14d75018210bf80" compoundref="qcustomplot_8cpp" startline="15311" endline="15351">getStepRightPlotData</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" compoundref="qcustomplot_8h" startline="2515">lsImpulse</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a3c42a27b15aa3c92d399082fad8b7515" compoundref="qcustomplot_8h" startline="2511">lsLine</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" compoundref="qcustomplot_8h" startline="2509">lsNone</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a5adf7b04da215a40a764c21294ea7366" compoundref="qcustomplot_8h" startline="2514">lsStepCenter</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859ae10568bda57836487d9dec5eba1d6c6e" compoundref="qcustomplot_8h" startline="2512">lsStepLeft</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a9c37951f7d11aa070100fd16f2935c9e" compoundref="qcustomplot_8h" startline="2513">lsStepRight</references>
        <references refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" compoundref="qcustomplot_8h" startline="2584">mLineStyle</references>
        <referencedby refid="class_q_c_p_graph_1a659218cc62c2a7786213d9dd429c1c8d" compoundref="qcustomplot_8cpp" startline="15077" endline="15122">draw</referencedby>
        <referencedby refid="class_q_c_p_graph_1a96146099a5e68f49c7326a765f768da2" compoundref="qcustomplot_8cpp" startline="16400" endline="16459">pointDistance</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a6ea929da420e6c104998060d19740ed6" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getScatterPlotData</definition>
        <argsstring>(QVector&lt; QCPData &gt; *scatterData) const</argsstring>
        <name>getScatterPlotData</name>
        <param>
          <type>QVector&lt; <ref refid="class_q_c_p_data" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2609" column="8" bodyfile="qcustomplot.cpp" bodystart="15201" bodyend="15204"/>
        <references refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" compoundref="qcustomplot_8cpp" startline="15661" endline="15840">getPreparedData</references>
        <referencedby refid="class_q_c_p_graph_1a5ec495f97b8185ba9712430cb1558f52" compoundref="qcustomplot_8cpp" startline="15177" endline="15188">getPlotData</referencedby>
        <referencedby refid="class_q_c_p_graph_1a96146099a5e68f49c7326a765f768da2" compoundref="qcustomplot_8cpp" startline="16400" endline="16459">pointDistance</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a77314984a7af578a66e939db0db48556" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getLinePlotData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *linePixelData, QVector&lt; QCPData &gt; *scatterData) const</argsstring>
        <name>getLinePlotData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>linePixelData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="class_q_c_p_data" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2610" column="8" bodyfile="qcustomplot.cpp" bodystart="15217" bodyend="15245"/>
        <references refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</references>
        <references refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" compoundref="qcustomplot_8cpp" startline="15661" endline="15840">getPreparedData</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_graph_1a5ec495f97b8185ba9712430cb1558f52" compoundref="qcustomplot_8cpp" startline="15177" endline="15188">getPlotData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a8f8ae9cb4aa312c2085c3f6f298f19d4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getStepLeftPlotData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *linePixelData, QVector&lt; QCPData &gt; *scatterData) const</argsstring>
        <name>getStepLeftPlotData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>linePixelData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="class_q_c_p_data" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2611" column="8" bodyfile="qcustomplot.cpp" bodystart="15258" bodyend="15298"/>
        <references refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</references>
        <references refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" compoundref="qcustomplot_8cpp" startline="15661" endline="15840">getPreparedData</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_graph_1a5ec495f97b8185ba9712430cb1558f52" compoundref="qcustomplot_8cpp" startline="15177" endline="15188">getPlotData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a59fecb135f47db10e14d75018210bf80" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getStepRightPlotData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *linePixelData, QVector&lt; QCPData &gt; *scatterData) const</argsstring>
        <name>getStepRightPlotData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>linePixelData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="class_q_c_p_data" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2612" column="8" bodyfile="qcustomplot.cpp" bodystart="15311" bodyend="15351"/>
        <references refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</references>
        <references refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" compoundref="qcustomplot_8cpp" startline="15661" endline="15840">getPreparedData</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_graph_1a5ec495f97b8185ba9712430cb1558f52" compoundref="qcustomplot_8cpp" startline="15177" endline="15188">getPlotData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ab860d67ecc7e2d7253ab1f19032958c2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getStepCenterPlotData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *linePixelData, QVector&lt; QCPData &gt; *scatterData) const</argsstring>
        <name>getStepCenterPlotData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>linePixelData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="class_q_c_p_data" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2613" column="8" bodyfile="qcustomplot.cpp" bodystart="15364" bodyend="15416"/>
        <references refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</references>
        <references refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" compoundref="qcustomplot_8cpp" startline="15661" endline="15840">getPreparedData</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_graph_1a5ec495f97b8185ba9712430cb1558f52" compoundref="qcustomplot_8cpp" startline="15177" endline="15188">getPlotData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1aae73c001a78cbe54e55e6779d7a70957" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getImpulsePlotData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *linePixelData, QVector&lt; QCPData &gt; *scatterData) const</argsstring>
        <name>getImpulsePlotData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>linePixelData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="class_q_c_p_data" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2614" column="8" bodyfile="qcustomplot.cpp" bodystart="15429" bodyend="15466"/>
        <references refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</references>
        <references refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" compoundref="qcustomplot_8cpp" startline="15661" endline="15840">getPreparedData</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_graph_1a5ec495f97b8185ba9712430cb1558f52" compoundref="qcustomplot_8cpp" startline="15177" endline="15188">getPlotData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ab51aeba7e9d29754e58852cfad3436cc" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::drawError</definition>
        <argsstring>(QCPPainter *painter, double x, double y, const QCPData &amp;data) const</argsstring>
        <name>drawError</name>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="class_q_c_p_data" kindref="compound">QCPData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2615" column="8" bodyfile="qcustomplot.cpp" bodystart="15849" bodyend="15944"/>
        <references refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</references>
        <references refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" compoundref="qcustomplot_8h" startline="2532" endline="2532">data</references>
        <references refid="class_q_c_p_painter_1a0b4b1b9bd495e182c731774dc800e6e0" compoundref="qcustomplot_8cpp" startline="129" endline="135">QCPPainter::drawLine</references>
        <references refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa761cb7d61670c1e2efecccd8974409ab" compoundref="qcustomplot_8h" startline="2524">etBoth</references>
        <references refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa2a5d89cd76fb8b6b18d71b8f6f6c0f43" compoundref="qcustomplot_8h" startline="2522">etKey</references>
        <references refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa147022ccdc49f6bd48f904cb4f61872e" compoundref="qcustomplot_8h" startline="2523">etValue</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_graph_1a7b51c8d09510f9d195b5e765ccbcf05b" compoundref="qcustomplot_8h" startline="2587">mErrorBarSize</references>
        <references refid="class_q_c_p_graph_1acf631d7dbd1055a69ab3b63094868557" compoundref="qcustomplot_8h" startline="2588">mErrorBarSkipSymbol</references>
        <references refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" compoundref="qcustomplot_8h" startline="2586">mErrorType</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" compoundref="qcustomplot_8h" startline="2585">mScatterStyle</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_axis_1ab9866dd1a78f1920f491ec12a794bec2" compoundref="qcustomplot_8h" startline="1097" endline="1097">QCPAxis::rangeReversed</references>
        <references refid="class_q_c_p_scatter_style_1a0e94526d9165d9f50e262102bdd71a47" compoundref="qcustomplot_8h" startline="275" endline="275">QCPScatterStyle::size</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_graph_1ae1f3edd5eb41aa5782e61673488fd3e0" compoundref="qcustomplot_8cpp" startline="15513" endline="15549">drawScatterPlot</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1abda485a2f71ebe00d890840acbb91516" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getVisibleDataBounds</definition>
        <argsstring>(QCPDataMap::const_iterator &amp;lower, QCPDataMap::const_iterator &amp;upper) const</argsstring>
        <name>getVisibleDataBounds</name>
        <param>
          <type>QCPDataMap::const_iterator &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>QCPDataMap::const_iterator &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2616" column="8" bodyfile="qcustomplot.cpp" bodystart="15960" bodyend="15978"/>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <referencedby refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" compoundref="qcustomplot_8cpp" startline="15661" endline="15840">getPreparedData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ae413e4ea50fea821a48ee2b3c4aaa055" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPGraph::countDataInBounds</definition>
        <argsstring>(const QCPDataMap::const_iterator &amp;lower, const QCPDataMap::const_iterator &amp;upper, int maxCount) const</argsstring>
        <name>countDataInBounds</name>
        <param>
          <type>const QCPDataMap::const_iterator &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>const QCPDataMap::const_iterator &amp;</type>
          <declname>upper</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2617" column="7" bodyfile="qcustomplot.cpp" bodystart="15990" bodyend="16002"/>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <referencedby refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" compoundref="qcustomplot_8cpp" startline="15661" endline="15840">getPreparedData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a8e517dcd3baba1b41daed0248841c092" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::addFillBasePoints</definition>
        <argsstring>(QVector&lt; QPointF &gt; *lineData) const</argsstring>
        <name>addFillBasePoints</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2618" column="8" bodyfile="qcustomplot.cpp" bodystart="16019" bodyend="16035"/>
        <references refid="class_q_c_p_graph_1ace7c17a07e9aa824853e469816a5aa1c" compoundref="qcustomplot_8cpp" startline="16065" endline="16114">lowerFillBasePoint</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_graph_1a7a255fc7260d96ed6f9d972839941f93" compoundref="qcustomplot_8cpp" startline="16130" endline="16179">upperFillBasePoint</references>
        <referencedby refid="class_q_c_p_graph_1a9e6ce6db9aa7b29fc397c724fcf7b126" compoundref="qcustomplot_8cpp" startline="15481" endline="15502">drawFill</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1aff2ae149f6d319fc3ed2c7c6fb348553" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::removeFillBasePoints</definition>
        <argsstring>(QVector&lt; QPointF &gt; *lineData) const</argsstring>
        <name>removeFillBasePoints</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2619" column="8" bodyfile="qcustomplot.cpp" bodystart="16043" bodyend="16049"/>
        <referencedby refid="class_q_c_p_graph_1a9e6ce6db9aa7b29fc397c724fcf7b126" compoundref="qcustomplot_8cpp" startline="15481" endline="15502">drawFill</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1ace7c17a07e9aa824853e469816a5aa1c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF QCPGraph::lowerFillBasePoint</definition>
        <argsstring>(double lowerKey) const</argsstring>
        <name>lowerFillBasePoint</name>
        <param>
          <type>double</type>
          <declname>lowerKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2620" column="11" bodyfile="qcustomplot.cpp" bodystart="16065" bodyend="16114"/>
        <references refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" compoundref="qcustomplot_8h" startline="1045">QCPAxis::atBottom</references>
        <references refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" compoundref="qcustomplot_8h" startline="1042">QCPAxis::atLeft</references>
        <references refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" compoundref="qcustomplot_8h" startline="1043">QCPAxis::atRight</references>
        <references refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" compoundref="qcustomplot_8h" startline="1044">QCPAxis::atTop</references>
        <references refid="class_q_c_p_axis_1afc94bcfdf8adfe8e01013f13bdf159a2" compoundref="qcustomplot_8h" startline="1093" endline="1093">QCPAxis::axisRect</references>
        <references refid="class_q_c_p_axis_1aa19679359783c5ecd27757b7e5619976" compoundref="qcustomplot_8h" startline="1092" endline="1092">QCPAxis::axisType</references>
        <references refid="class_q_c_p_axis_rect_1acefdf1abaa8a8ab681e906cc2be9581e" compoundref="qcustomplot_8h" startline="2028" endline="2028">QCPAxisRect::bottom</references>
        <references refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_axis_rect_1afb4a3de02046b20b9310bdb8fca781c3" compoundref="qcustomplot_8h" startline="2025" endline="2025">QCPAxisRect::left</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_axis_1ac4058855a81f1a883cf2e754f6a6acb1" compoundref="qcustomplot_8h" startline="1096" endline="1096">QCPAxis::range</references>
        <references refid="class_q_c_p_axis_1ab9866dd1a78f1920f491ec12a794bec2" compoundref="qcustomplot_8h" startline="1097" endline="1097">QCPAxis::rangeReversed</references>
        <references refid="class_q_c_p_axis_rect_1a3f819d4a1b2193723d1fdafc573eea10" compoundref="qcustomplot_8h" startline="2026" endline="2026">QCPAxisRect::right</references>
        <references refid="class_q_c_p_axis_1ad23e9ad97b44e9aeaf4fab8904280098" compoundref="qcustomplot_8h" startline="1094" endline="1094">QCPAxis::scaleType</references>
        <references refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" compoundref="qcustomplot_8h" startline="1072">QCPAxis::stLinear</references>
        <references refid="class_q_c_p_axis_rect_1a45dbad181cbb9f09d068dbb76c817c95" compoundref="qcustomplot_8h" startline="2027" endline="2027">QCPAxisRect::top</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">QCPRange::upper</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_graph_1a8e517dcd3baba1b41daed0248841c092" compoundref="qcustomplot_8cpp" startline="16019" endline="16035">addFillBasePoints</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a7a255fc7260d96ed6f9d972839941f93" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF QCPGraph::upperFillBasePoint</definition>
        <argsstring>(double upperKey) const</argsstring>
        <name>upperFillBasePoint</name>
        <param>
          <type>double</type>
          <declname>upperKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2621" column="11" bodyfile="qcustomplot.cpp" bodystart="16130" bodyend="16179"/>
        <references refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aa220d68888516b6c3b493d144f1ba438f" compoundref="qcustomplot_8h" startline="1045">QCPAxis::atBottom</references>
        <references refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aaf84aa6cac6fb6099f54a2cbf7546b730" compoundref="qcustomplot_8h" startline="1042">QCPAxis::atLeft</references>
        <references refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aadf5509f7d29199ef2f263b1dd224b345" compoundref="qcustomplot_8h" startline="1043">QCPAxis::atRight</references>
        <references refid="class_q_c_p_axis_1ae2bcc1728b382f10f064612b368bc18aac0ece2b680d3f545e701f75af1655977" compoundref="qcustomplot_8h" startline="1044">QCPAxis::atTop</references>
        <references refid="class_q_c_p_axis_1afc94bcfdf8adfe8e01013f13bdf159a2" compoundref="qcustomplot_8h" startline="1093" endline="1093">QCPAxis::axisRect</references>
        <references refid="class_q_c_p_axis_1aa19679359783c5ecd27757b7e5619976" compoundref="qcustomplot_8h" startline="1092" endline="1092">QCPAxis::axisType</references>
        <references refid="class_q_c_p_axis_rect_1acefdf1abaa8a8ab681e906cc2be9581e" compoundref="qcustomplot_8h" startline="2028" endline="2028">QCPAxisRect::bottom</references>
        <references refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_axis_rect_1afb4a3de02046b20b9310bdb8fca781c3" compoundref="qcustomplot_8h" startline="2025" endline="2025">QCPAxisRect::left</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_axis_1ac4058855a81f1a883cf2e754f6a6acb1" compoundref="qcustomplot_8h" startline="1096" endline="1096">QCPAxis::range</references>
        <references refid="class_q_c_p_axis_1ab9866dd1a78f1920f491ec12a794bec2" compoundref="qcustomplot_8h" startline="1097" endline="1097">QCPAxis::rangeReversed</references>
        <references refid="class_q_c_p_axis_rect_1a3f819d4a1b2193723d1fdafc573eea10" compoundref="qcustomplot_8h" startline="2026" endline="2026">QCPAxisRect::right</references>
        <references refid="class_q_c_p_axis_1ad23e9ad97b44e9aeaf4fab8904280098" compoundref="qcustomplot_8h" startline="1094" endline="1094">QCPAxis::scaleType</references>
        <references refid="class_q_c_p_axis_1a36d8e8658dbaa179bf2aeb973db2d6f0aff6e30a11a828bc850caffab0ff994f6" compoundref="qcustomplot_8h" startline="1072">QCPAxis::stLinear</references>
        <references refid="class_q_c_p_axis_rect_1a45dbad181cbb9f09d068dbb76c817c95" compoundref="qcustomplot_8h" startline="2027" endline="2027">QCPAxisRect::top</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">QCPRange::upper</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_graph_1a8e517dcd3baba1b41daed0248841c092" compoundref="qcustomplot_8cpp" startline="16019" endline="16035">addFillBasePoints</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1add26655bd2338adaa7fc99e27bd06550" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const QPolygonF</type>
        <definition>const QPolygonF QCPGraph::getChannelFillPolygon</definition>
        <argsstring>(const QVector&lt; QPointF &gt; *lineData) const</argsstring>
        <name>getChannelFillPolygon</name>
        <param>
          <type>const QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2622" column="19" bodyfile="qcustomplot.cpp" bodystart="16190" bodyend="16323"/>
        <references refid="class_q_c_p_graph_1aaabd6c6a7200a2672c44e62bd2a1cafa" compoundref="qcustomplot_8cpp" startline="16332" endline="16345">findIndexAboveX</references>
        <references refid="class_q_c_p_graph_1a8b952a5f937840dc242489585cc8000d" compoundref="qcustomplot_8cpp" startline="16376" endline="16389">findIndexAboveY</references>
        <references refid="class_q_c_p_graph_1a8c3f15dd5a06633011a6ef36016d308b" compoundref="qcustomplot_8cpp" startline="16354" endline="16367">findIndexBelowX</references>
        <references refid="class_q_c_p_graph_1a5b0291f248e8ca8eaa82833ab420dcd0" compoundref="qcustomplot_8cpp" startline="16469" endline="16482">findIndexBelowY</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" compoundref="qcustomplot_8h" startline="2589">mChannelFillGraph</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_graph_1a9e6ce6db9aa7b29fc397c724fcf7b126" compoundref="qcustomplot_8cpp" startline="15481" endline="15502">drawFill</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a8c3f15dd5a06633011a6ef36016d308b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPGraph::findIndexBelowX</definition>
        <argsstring>(const QVector&lt; QPointF &gt; *data, double x) const</argsstring>
        <name>findIndexBelowX</name>
        <param>
          <type>const QVector&lt; QPointF &gt; *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2623" column="7" bodyfile="qcustomplot.cpp" bodystart="16354" bodyend="16367"/>
        <references refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" compoundref="qcustomplot_8h" startline="2532" endline="2532">data</references>
        <referencedby refid="class_q_c_p_graph_1add26655bd2338adaa7fc99e27bd06550" compoundref="qcustomplot_8cpp" startline="16190" endline="16323">getChannelFillPolygon</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1aaabd6c6a7200a2672c44e62bd2a1cafa" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPGraph::findIndexAboveX</definition>
        <argsstring>(const QVector&lt; QPointF &gt; *data, double x) const</argsstring>
        <name>findIndexAboveX</name>
        <param>
          <type>const QVector&lt; QPointF &gt; *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2624" column="7" bodyfile="qcustomplot.cpp" bodystart="16332" bodyend="16345"/>
        <references refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" compoundref="qcustomplot_8h" startline="2532" endline="2532">data</references>
        <referencedby refid="class_q_c_p_graph_1add26655bd2338adaa7fc99e27bd06550" compoundref="qcustomplot_8cpp" startline="16190" endline="16323">getChannelFillPolygon</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a5b0291f248e8ca8eaa82833ab420dcd0" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPGraph::findIndexBelowY</definition>
        <argsstring>(const QVector&lt; QPointF &gt; *data, double y) const</argsstring>
        <name>findIndexBelowY</name>
        <param>
          <type>const QVector&lt; QPointF &gt; *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2625" column="7" bodyfile="qcustomplot.cpp" bodystart="16469" bodyend="16482"/>
        <references refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" compoundref="qcustomplot_8h" startline="2532" endline="2532">data</references>
        <referencedby refid="class_q_c_p_graph_1add26655bd2338adaa7fc99e27bd06550" compoundref="qcustomplot_8cpp" startline="16190" endline="16323">getChannelFillPolygon</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a8b952a5f937840dc242489585cc8000d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPGraph::findIndexAboveY</definition>
        <argsstring>(const QVector&lt; QPointF &gt; *data, double y) const</argsstring>
        <name>findIndexAboveY</name>
        <param>
          <type>const QVector&lt; QPointF &gt; *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2626" column="7" bodyfile="qcustomplot.cpp" bodystart="16376" bodyend="16389"/>
        <references refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" compoundref="qcustomplot_8h" startline="2532" endline="2532">data</references>
        <referencedby refid="class_q_c_p_graph_1add26655bd2338adaa7fc99e27bd06550" compoundref="qcustomplot_8cpp" startline="16190" endline="16323">getChannelFillPolygon</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_graph_1a96146099a5e68f49c7326a765f768da2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QCPGraph::pointDistance</definition>
        <argsstring>(const QPointF &amp;pixelPoint) const</argsstring>
        <name>pointDistance</name>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pixelPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2627" column="10" bodyfile="qcustomplot.cpp" bodystart="16400" bodyend="16459"/>
        <references refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" compoundref="qcustomplot_8cpp" startline="7193" endline="7208">QCPAbstractPlottable::coordsToPixels</references>
        <references refid="class_q_c_p_abstract_plottable_1af7e992b638c8aa688abceac579bb90d7" compoundref="qcustomplot_8cpp" startline="7360" endline="7379">QCPAbstractPlottable::distSqrToLine</references>
        <references refid="class_q_c_p_graph_1a5ec495f97b8185ba9712430cb1558f52" compoundref="qcustomplot_8cpp" startline="15177" endline="15188">getPlotData</references>
        <references refid="class_q_c_p_graph_1a6ea929da420e6c104998060d19740ed6" compoundref="qcustomplot_8cpp" startline="15201" endline="15204">getScatterPlotData</references>
        <references refid="class_q_c_p_scatter_style_1a72db6bcb1e1abd6e53c1315dd3dea7e4" compoundref="qcustomplot_8h" startline="291" endline="291">QCPScatterStyle::isNone</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" compoundref="qcustomplot_8h" startline="2515">lsImpulse</references>
        <references refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" compoundref="qcustomplot_8h" startline="2509">lsNone</references>
        <references refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" compoundref="qcustomplot_8h" startline="2582">mData</references>
        <references refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" compoundref="qcustomplot_8h" startline="2584">mLineStyle</references>
        <references refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" compoundref="qcustomplot_8h" startline="2585">mScatterStyle</references>
        <referencedby refid="class_q_c_p_graph_1a36011c34aca4f7a477de25961e2f6c13" compoundref="qcustomplot_8cpp" startline="14978" endline="14989">selectTest</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A plottable representing a graph in a plot. </para>
    </briefdescription>
    <detaileddescription>
<para><image type="html" name="QCPGraph.png"></image>
</para>
<para>Usually you create new graphs by calling <ref refid="class_q_custom_plot_1a6fb2873d35a8a8089842d81a70a54167" kindref="member">QCustomPlot::addGraph</ref>. The resulting instance can be accessed via <ref refid="class_q_custom_plot_1a6ecae130f684b25276fb47bd3a5875c6" kindref="member">QCustomPlot::graph</ref>.</para>
<para>To plot data, assign it with the <ref refid="class_q_c_p_graph_1a1df2fd710545c8ba3b2c99a39a27bf8b" kindref="member">setData</ref> or <ref refid="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" kindref="member">addData</ref> functions. Alternatively, you can also access and modify the graph&apos;s data via the <ref refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" kindref="member">data</ref> method, which returns a pointer to the internal <ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref>.</para>
<para>Graphs are used to display single-valued data. Single-valued means that there should only be one data point per unique key coordinate. In other words, the graph can&apos;t have <emphasis>loops</emphasis>. If you do want to plot non-single-valued curves, rather use the <ref refid="class_q_c_p_curve" kindref="compound">QCPCurve</ref> plottable.</para>
<para>Gaps in the graph line can be created by adding data points with NaN as value (<computeroutput>qQNaN()</computeroutput> or <computeroutput>std::numeric_limits&lt;double&gt;::quiet_NaN()</computeroutput>) in between the two data points that shall be separated.</para>
<sect1 id="class_q_c_p_statistical_box_1appearance">
<title>Changing the appearance</title>
<para>The appearance of the graph is mainly determined by the line style, scatter style, brush and pen of the graph (<ref refid="class_q_c_p_graph_1a513fecccff5b2a50ce53f665338c60ff" kindref="member">setLineStyle</ref>, <ref refid="class_q_c_p_graph_1a12bd17a8ba21983163ec5d8f42a9fea5" kindref="member">setScatterStyle</ref>, <ref refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" kindref="member">setBrush</ref>, <ref refid="class_q_c_p_abstract_plottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" kindref="member">setPen</ref>).</para>
<sect2 id="class_q_c_p_graph_1filling">
<title>Filling under or between graphs</title>
<para><ref refid="class_q_c_p_graph" kindref="compound">QCPGraph</ref> knows two types of fills: Normal graph fills towards the zero-value-line parallel to the key axis of the graph, and fills between two graphs, called channel fills. To enable a fill, just set a brush with <ref refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" kindref="member">setBrush</ref> which is neither Qt::NoBrush nor fully transparent.</para>
<para>By default, a normal fill towards the zero-value-line will be drawn. To set up a channel fill between this graph and another one, call <ref refid="class_q_c_p_graph_1a2d03156df1b64037a2e36cfa50351ca3" kindref="member">setChannelFillGraph</ref> with the other graph as parameter.</para>
<para><simplesect kind="see"><para><ref refid="class_q_custom_plot_1a6fb2873d35a8a8089842d81a70a54167" kindref="member">QCustomPlot::addGraph</ref>, <ref refid="class_q_custom_plot_1a6ecae130f684b25276fb47bd3a5875c6" kindref="member">QCustomPlot::graph</ref> </para>
</simplesect>
</para>
</sect2>
</sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="2">
        <label>QCPAbstractPlottable</label>
        <link refid="class_q_c_p_abstract_plottable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QCPGraph</label>
        <link refid="class_q_c_p_graph"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="12">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
      <node id="18">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QCPAbstractPlottable</label>
        <link refid="class_q_c_p_abstract_plottable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QCPLineEnding</label>
        <link refid="class_q_c_p_line_ending"/>
      </node>
      <node id="9">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>#mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>QCPAxisPainterPrivate</label>
        <link refid="class_q_c_p_axis_painter_private"/>
        <childnode refid="14" relation="usage">
          <edgelabel>+lowerEnding</edgelabel>
          <edgelabel>+upperEnding</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QCPGraph</label>
        <link refid="class_q_c_p_graph"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>#mScatterStyle</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QWidget</label>
      </node>
      <node id="5">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#mLayer</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#mRange</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>#mAxisPainter</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>#mGrid</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>#mAxisRect</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>#mInsetLayout</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#mDragStartHorzRange</edgelabel>
          <edgelabel>#mDragStartVertRange</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QCustomPlot</label>
        <link refid="class_q_custom_plot"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>#mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>+xAxis</edgelabel>
          <edgelabel>+xAxis2</edgelabel>
          <edgelabel>+yAxis</edgelabel>
          <edgelabel>+yAxis2</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>+legend</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>QCPScatterStyle</label>
        <link refid="class_q_c_p_scatter_style"/>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="2490" column="1" bodyfile="qcustomplot.h" bodystart="2491" bodyend="2631"/>
    <listofallmembers>
      <member refid="class_q_c_p_graph_1a1ba934b9621270b9a40fcdd2d9ba2adb" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>adaptiveSampling</name></member>
      <member refid="class_q_c_p_graph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>addData</name></member>
      <member refid="class_q_c_p_graph_1a80cc91e1e0ef77eb50afc5b366d0efd9" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>addData</name></member>
      <member refid="class_q_c_p_graph_1a0bf98b1972286cfb7b1c4b7dd6ae2012" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>addData</name></member>
      <member refid="class_q_c_p_graph_1ab6da6377541fe80d892a9893a92db9c6" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>addData</name></member>
      <member refid="class_q_c_p_graph_1a8e517dcd3baba1b41daed0248841c092" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>addFillBasePoints</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a70f8cabfd808f7d5204b9f18c45c13f5" prot="public" virt="virtual"><scope>QCPGraph</scope><name>addToLegend</name></member>
      <member refid="class_q_c_p_layerable_1a71cbd212fde2703cee076e204a475709" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>antialiased</name></member>
      <member refid="class_q_c_p_abstract_plottable_1add06e122d84deb9f451ace9bb8ad9c96" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>antialiasedErrorBars</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a022717896dc57b638a7b5a7be7212ba9" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>antialiasedFill</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a795370db6b1309de0ab60b633efb5ec2" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>antialiasedScatters</name></member>
      <member refid="class_q_c_p_layerable_1acb663e375d2d36dc5c55021ee5a2119b" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>applyAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a59a80773c5cefc05a0646ac8e1149ed5" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a0889abc8dbfd357053f40bfafff8bf7d" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>applyErrorBarsAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a8d06a59ea23324cce6330ebf2262c0ed" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>applyFillAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ac95f26b15a1e5d9c7bd2c0a46d760fc9" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>applyScattersAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a893b4896dfd92b68b05b2600b80f5826" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>brush</name></member>
      <member refid="class_q_c_p_graph_1a84277b1655474453a5c83318053414d5" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>channelFillGraph</name></member>
      <member refid="class_q_c_p_graph_1ad4e94a4e44e5e76fbec81a72a977157d" prot="public" virt="virtual"><scope>QCPGraph</scope><name>clearData</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aafb817dbea97d2798967f3371a701413" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>clipRect</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>coordsToPixels</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a5acb50ae984eef09a7ab92315d2ad708" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>coordsToPixels</name></member>
      <member refid="class_q_c_p_graph_1ae413e4ea50fea821a48ee2b3c4aaa055" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>countDataInBounds</name></member>
      <member refid="class_q_c_p_graph_1acde1c0d1f6a817930489548396e6b3e6" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>data</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a6fa0d0f95560ea8b01ee13f296dab2b1" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>deselectEvent</name></member>
      <member refid="class_q_c_p_abstract_plottable_1af7e992b638c8aa688abceac579bb90d7" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>distSqrToLine</name></member>
      <member refid="class_q_c_p_graph_1a659218cc62c2a7786213d9dd429c1c8d" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>draw</name></member>
      <member refid="class_q_c_p_graph_1ab51aeba7e9d29754e58852cfad3436cc" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>drawError</name></member>
      <member refid="class_q_c_p_graph_1a9e6ce6db9aa7b29fc397c724fcf7b126" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>drawFill</name></member>
      <member refid="class_q_c_p_graph_1ac62c84f51d85b78ee583455b8c37ba56" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>drawImpulsePlot</name></member>
      <member refid="class_q_c_p_graph_1ae962caca309faae29ce0988d0d0eff4b" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>drawLegendIcon</name></member>
      <member refid="class_q_c_p_graph_1af460db06d4d6466806721fe101f512e3" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>drawLinePlot</name></member>
      <member refid="class_q_c_p_graph_1ae1f3edd5eb41aa5782e61673488fd3e0" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>drawScatterPlot</name></member>
      <member refid="class_q_c_p_graph_1a5b071344b150359aadb7be0b10b0eae9" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>errorBarSize</name></member>
      <member refid="class_q_c_p_graph_1a810db049eff26150c0bcead1bfbcf931" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>errorBarSkipSymbol</name></member>
      <member refid="class_q_c_p_graph_1abcf453d2c0d7a751d3a311a8b919b8d9" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>errorPen</name></member>
      <member refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6af" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>ErrorType</name></member>
      <member refid="class_q_c_p_graph_1a1efa62c4b826f34716b505b15d2b2583" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>errorType</name></member>
      <member refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa761cb7d61670c1e2efecccd8974409ab" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>etBoth</name></member>
      <member refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa2a5d89cd76fb8b6b18d71b8f6f6c0f43" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>etKey</name></member>
      <member refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afaeae745e7cc1766bb8546e35d4b76a711" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>etNone</name></member>
      <member refid="class_q_c_p_graph_1ad23b514404bd2cb3216f57c90904d6afa147022ccdc49f6bd48f904cb4f61872e" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>etValue</name></member>
      <member refid="class_q_c_p_graph_1aaabd6c6a7200a2672c44e62bd2a1cafa" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>findIndexAboveX</name></member>
      <member refid="class_q_c_p_graph_1a8b952a5f937840dc242489585cc8000d" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>findIndexAboveY</name></member>
      <member refid="class_q_c_p_graph_1a8c3f15dd5a06633011a6ef36016d308b" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>findIndexBelowX</name></member>
      <member refid="class_q_c_p_graph_1a5b0291f248e8ca8eaa82833ab420dcd0" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>findIndexBelowY</name></member>
      <member refid="class_q_c_p_graph_1add26655bd2338adaa7fc99e27bd06550" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getChannelFillPolygon</name></member>
      <member refid="class_q_c_p_graph_1aae73c001a78cbe54e55e6779d7a70957" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getImpulsePlotData</name></member>
      <member refid="class_q_c_p_graph_1ad65bc571de3bd0af36296a3cbd0d77ee" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>getKeyRange</name></member>
      <member refid="class_q_c_p_graph_1ae6425d5df537c08159f794cb18c051c3" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>getKeyRange</name></member>
      <member refid="class_q_c_p_graph_1a77314984a7af578a66e939db0db48556" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getLinePlotData</name></member>
      <member refid="class_q_c_p_graph_1a5ec495f97b8185ba9712430cb1558f52" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getPlotData</name></member>
      <member refid="class_q_c_p_graph_1ae853c297da9d21b6720d2d1c3b0121bf" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getPreparedData</name></member>
      <member refid="class_q_c_p_graph_1a6ea929da420e6c104998060d19740ed6" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getScatterPlotData</name></member>
      <member refid="class_q_c_p_graph_1ab860d67ecc7e2d7253ab1f19032958c2" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getStepCenterPlotData</name></member>
      <member refid="class_q_c_p_graph_1a8f8ae9cb4aa312c2085c3f6f298f19d4" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getStepLeftPlotData</name></member>
      <member refid="class_q_c_p_graph_1a59fecb135f47db10e14d75018210bf80" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getStepRightPlotData</name></member>
      <member refid="class_q_c_p_graph_1ac205efd80b4a70d67b163429dc6cba8d" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>getValueRange</name></member>
      <member refid="class_q_c_p_graph_1ac23c7702ca836c7055f48e6fc3295ca4" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>getValueRange</name></member>
      <member refid="class_q_c_p_graph_1abda485a2f71ebe00d890840acbb91516" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getVisibleDataBounds</name></member>
      <member refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>initializeParentPlot</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>keyAxis</name></member>
      <member refid="class_q_c_p_layerable_1a5ff4862e8c784c9f5986dbc1533ba2a4" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>layer</name></member>
      <member refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>layerChanged</name></member>
      <member refid="class_q_c_p_graph_1ac3e6f4b3387338df45992b47691b2551" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lineStyle</name></member>
      <member refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>LineStyle</name></member>
      <member refid="class_q_c_p_graph_1ace7c17a07e9aa824853e469816a5aa1c" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>lowerFillBasePoint</name></member>
      <member refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lsImpulse</name></member>
      <member refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a3c42a27b15aa3c92d399082fad8b7515" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lsLine</name></member>
      <member refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lsNone</name></member>
      <member refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a5adf7b04da215a40a764c21294ea7366" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lsStepCenter</name></member>
      <member refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859ae10568bda57836487d9dec5eba1d6c6e" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lsStepLeft</name></member>
      <member refid="class_q_c_p_graph_1ad60175cd9b5cac937c5ee685c32c0859a9c37951f7d11aa070100fd16f2935c9e" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lsStepRight</name></member>
      <member refid="class_q_c_p_graph_1aa951e78aeba714cf443be6da2e52502e" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mAdaptiveSampling</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ac9147022a662e92b46c39e7cb821b0af" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mainBrush</name></member>
      <member refid="class_q_c_p_abstract_plottable_1abd790a3b229239f49067f136633a4b98" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mainPen</name></member>
      <member refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mAntialiased</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ad48660b2bd301576e92fb033d8f455ea" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mAntialiasedErrorBars</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a152ac765bedf927fb240545d11d453ea" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mAntialiasedFill</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aa115755e525a8e3a86dc683f9cab755b" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mAntialiasedScatters</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mBrush</name></member>
      <member refid="class_q_c_p_graph_1a2f1777c7accf8244fc640c33f0b04577" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mChannelFillGraph</name></member>
      <member refid="class_q_c_p_graph_1a8457c840f69a0ac49f61d30a509c5d08" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mData</name></member>
      <member refid="class_q_c_p_graph_1a7b51c8d09510f9d195b5e765ccbcf05b" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mErrorBarSize</name></member>
      <member refid="class_q_c_p_graph_1acf631d7dbd1055a69ab3b63094868557" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mErrorBarSkipSymbol</name></member>
      <member refid="class_q_c_p_graph_1aa35681a24165c2831301091a87b662ce" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mErrorPen</name></member>
      <member refid="class_q_c_p_graph_1a29e64273db201aeadebc61c870720a36" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mErrorType</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mKeyAxis</name></member>
      <member refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mLayer</name></member>
      <member refid="class_q_c_p_graph_1a8604fd98402035a63375849f7341ee25" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mLineStyle</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ac29ffef424e2488675930de18cde612a" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mName</name></member>
      <member refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>moveToLayer</name></member>
      <member refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mParentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mParentPlot</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mPen</name></member>
      <member refid="class_q_c_p_graph_1a4aa36241f166ccd1f75fc8f24e4a3247" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mScatterStyle</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mSelectable</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mSelected</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aea3c0da30c7a8be23ad5f2d9bca36762" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mSelectedBrush</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a10619472f5d5e10e9519a599f1cf5576" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mSelectedPen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mValueAxis</name></member>
      <member refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mVisible</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a52c226eefcb1920240eeabae574d28c0" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>name</name></member>
      <member refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>parentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a473edb813a4c1929d6b6a8fe3ff3faf7" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>parentPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab20b7dbd8e0249ed61adb9622c427382" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>parentPlotInitialized</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ad5972efc31344e5a7a78ab4f8864b2d3" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>pen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a3903c1120ab5c27e7fa46b597ef267bd" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>pixelsToCoords</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a28d32c0062b9450847851ffdee1c5f69" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>pixelsToCoords</name></member>
      <member refid="class_q_c_p_graph_1a96146099a5e68f49c7326a765f768da2" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>pointDistance</name></member>
      <member refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>QCPAbstractPlottable</name></member>
      <member refid="class_q_c_p_graph_1a0393a38cf7183cbf46348eb6cf9a5a6c" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>QCPGraph</name></member>
      <member refid="class_q_c_p_layerable_1a74c0fa237f29bf0e49565013fc5d1ec0" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>QCPLayerable</name></member>
      <member refid="class_q_c_p_graph_1a8429035e7adfbd7f05805a6530ad5e3b" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>QCPLegend</name></member>
      <member refid="class_q_c_p_graph_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>QCustomPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>realVisibility</name></member>
      <member refid="class_q_c_p_graph_1a4a0fde50b7db9db0a85b5c5b6b10098f" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>removeData</name></member>
      <member refid="class_q_c_p_graph_1a4a706020b4318f118381648ef18aca3f" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>removeData</name></member>
      <member refid="class_q_c_p_graph_1ae42d645ef617cfc75fc0df58e62c522a" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>removeDataAfter</name></member>
      <member refid="class_q_c_p_graph_1a9fe0b3e54e8c7b61319bd03337e21e99" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>removeDataBefore</name></member>
      <member refid="class_q_c_p_graph_1aff2ae149f6d319fc3ed2c7c6fb348553" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>removeFillBasePoints</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ac95fb2604d9106d0852ad9ceb326fe8c" prot="public" virt="virtual"><scope>QCPGraph</scope><name>removeFromLegend</name></member>
      <member refid="class_q_c_p_graph_1a9c3909d6116e9d03978f057d41174e6a" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>rescaleAxes</name></member>
      <member refid="class_q_c_p_graph_1a1491c4a606bccd2d09e65e11b79eb882" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>rescaleAxes</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a1491c4a606bccd2d09e65e11b79eb882" prot="public" virt="non-virtual" ambiguityscope="QCPAbstractPlottable::"><scope>QCPGraph</scope><name>rescaleAxes</name></member>
      <member refid="class_q_c_p_graph_1a051fb77b459ba1ae8d65552c67f45e94" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>rescaleKeyAxis</name></member>
      <member refid="class_q_c_p_graph_1ae96b83c961e257da116c6acf9c7da308" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>rescaleKeyAxis</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ae96b83c961e257da116c6acf9c7da308" prot="public" virt="non-virtual" ambiguityscope="QCPAbstractPlottable::"><scope>QCPGraph</scope><name>rescaleKeyAxis</name></member>
      <member refid="class_q_c_p_graph_1a9e0e620a56932c4df80a3762c2f93608" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>rescaleValueAxis</name></member>
      <member refid="class_q_c_p_graph_1aa1e408bb2d13999150c3f7f8a8579ca9" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>rescaleValueAxis</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aa1e408bb2d13999150c3f7f8a8579ca9" prot="public" virt="non-virtual" ambiguityscope="QCPAbstractPlottable::"><scope>QCPGraph</scope><name>rescaleValueAxis</name></member>
      <member refid="class_q_c_p_graph_1a36d5b641db08e27527827c212542bbbd" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>scatterStyle</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>sdBoth</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>sdNegative</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>sdPositive</name></member>
      <member refid="class_q_c_p_abstract_plottable_1adf896b8a213fea74440c7bc969cf6e4c" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>selectable</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a0059caa3f3581f3959660fef8cbb71c4" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>selectableChanged</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a0b3b514474fe93354fc74cfc144184b4" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>selected</name></member>
      <member refid="class_q_c_p_abstract_plottable_1afe5f3f74b09e89713ba39da04079a337" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>selectedBrush</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aafdfd0946b18364321ffce01cc6045a0" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>selectedPen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>selectEvent</name></member>
      <member refid="class_q_c_p_abstract_plottable_1afb5e4718c232a16d0fb06b00e172be9e" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>selectionCategory</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a3af66432b1dca93b28e00e78a8c7c1d9" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>selectionChanged</name></member>
      <member refid="class_q_c_p_graph_1a36011c34aca4f7a477de25961e2f6c13" prot="public" virt="virtual"><scope>QCPGraph</scope><name>selectTest</name></member>
      <member refid="class_q_c_p_graph_1ab468cd600160f327836aa0644291e64c" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setAdaptiveSampling</name></member>
      <member refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setAntialiased</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a757beb744b96cf1855cca5ab9d3ecf52" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setAntialiasedErrorBars</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a089d6b5577120239b55c39ed27c39536" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setAntialiasedFill</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a2f03f067ede2ed4da6f7d0e4777a3f02" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setAntialiasedScatters</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setBrush</name></member>
      <member refid="class_q_c_p_graph_1a2d03156df1b64037a2e36cfa50351ca3" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setChannelFillGraph</name></member>
      <member refid="class_q_c_p_graph_1a1df2fd710545c8ba3b2c99a39a27bf8b" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setData</name></member>
      <member refid="class_q_c_p_graph_1a4c55d8ac13bfa42c8c93747820891a76" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setData</name></member>
      <member refid="class_q_c_p_graph_1a873fe46bdb20be5710428e474ade8908" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setDataBothError</name></member>
      <member refid="class_q_c_p_graph_1abb75736ecdbf6e6a7501e1da64fb18cf" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setDataBothError</name></member>
      <member refid="class_q_c_p_graph_1abce9f07c0d722bc3e4fa7bd73c7e5dfa" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setDataKeyError</name></member>
      <member refid="class_q_c_p_graph_1ac15c749c5fedf740d5692c6fe67143b8" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setDataKeyError</name></member>
      <member refid="class_q_c_p_graph_1acba6296eadcb36b93267628b8dae3de5" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setDataValueError</name></member>
      <member refid="class_q_c_p_graph_1a3afbfd7222d739351c69387904776f93" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setDataValueError</name></member>
      <member refid="class_q_c_p_graph_1a10f50c5495ce45ef559ec2066194a335" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setErrorBarSize</name></member>
      <member refid="class_q_c_p_graph_1ab1c1ee03d8dd94676a564e5e5f11aac2" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setErrorBarSkipSymbol</name></member>
      <member refid="class_q_c_p_graph_1abd4c7f81939e10776ea64603a704f22a" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setErrorPen</name></member>
      <member refid="class_q_c_p_graph_1ac3614d799c3894f2bc646e99c7f73d38" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setErrorType</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a8524fa2994c63c0913ebd9bb2ffa3920" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setKeyAxis</name></member>
      <member refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_graph_1a513fecccff5b2a50ce53f665338c60ff" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setLineStyle</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ab79c7ba76bc7fa89a4b3580e12149f1f" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setName</name></member>
      <member refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>setParentLayerable</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setPen</name></member>
      <member refid="class_q_c_p_graph_1a12bd17a8ba21983163ec5d8f42a9fea5" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setScatterStyle</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a22c69299eb5569e0f6bf084877a37dc4" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setSelectable</name></member>
      <member refid="class_q_c_p_abstract_plottable_1afbd5428c2952f59d952e11ab5cd79176" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setSelected</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ae8c816874089f7a44001e8618e81a9dc" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setSelectedBrush</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a6911603cad23ab0469b108224517516f" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setSelectedPen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a71626a07367e241ec62ad2c34baf21cb" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setValueAxis</name></member>
      <member refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setVisible</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>SignDomain</name></member>
      <member refid="class_q_c_p_graph_1a7a255fc7260d96ed6f9d972839941f93" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>upperFillBasePoint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>valueAxis</name></member>
      <member refid="class_q_c_p_layerable_1af0297b944b6192b6d67d00bff41b6b70" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>visible</name></member>
      <member refid="class_q_c_p_graph_1ae9998cfb9d379ac0ef3fbd6995cfbd76" prot="public" virt="virtual"><scope>QCPGraph</scope><name>~QCPGraph</name></member>
      <member refid="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>~QCPLayerable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
