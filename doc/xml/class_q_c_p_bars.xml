<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_q_c_p_bars" kind="class" language="C++" prot="public">
    <compoundname>QCPBars</compoundname>
    <basecompoundref refid="class_q_c_p_abstract_plottable" prot="public" virt="non-virtual">QCPAbstractPlottable</basecompoundref>
    <includes refid="qcustomplot_8h" local="no">qcustomplot.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649" prot="public" static="no" strong="no">
        <type></type>
        <name>WidthType</name>
        <enumvalue id="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649ab74315c9aa77df593c58dd25dfc0de35" prot="public">
          <name>wtAbsolute</name>
          <briefdescription>
<para>Bar width is in absolute pixels. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649a90bc09899361ad3422ff277f7c790ffe" prot="public">
          <name>wtAxisRectRatio</name>
          <briefdescription>
<para>Bar width is given by a fraction of the axis rect size. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649aad3cc60ae1bfb1160a30237bee9eaf10" prot="public">
          <name>wtPlotCoords</name>
          <briefdescription>
<para>Bar width is in key coordinates and thus scales with the key axis range. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the ways the width of the bar can be specified. Thus it defines what the number passed to <ref refid="class_q_c_p_bars_1afec6116579d44d5b706e0fa5e5332507" kindref="member">setWidth</ref> actually means.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_bars_1adcaa3b41281bb2c0f7949b341592fcc0" kindref="member">setWidthType</ref>, <ref refid="class_q_c_p_bars_1afec6116579d44d5b706e0fa5e5332507" kindref="member">setWidth</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2841" column="3" bodyfile="qcustomplot.h" bodystart="2841" bodyend="2844"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" prot="protected" static="no" mutable="no">
        <type><ref refid="qcustomplot_8h_1aa846c77472cae93def9f1609d0c57191" kindref="member">QCPBarDataMap</ref> *</type>
        <definition>QCPBarDataMap* QCPBars::mData</definition>
        <argsstring></argsstring>
        <name>mData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2885" column="17" bodyfile="qcustomplot.h" bodystart="2885" bodyend="-1"/>
        <referencedby refid="class_q_c_p_bars_1a1f29cf08615040993209147fa68de3f2" compoundref="qcustomplot_8cpp" startline="18655" endline="18658">addData</referencedby>
        <referencedby refid="class_q_c_p_bars_1a11dbbd707132f07f862dff13c5789c2b" compoundref="qcustomplot_8cpp" startline="18754" endline="18757">clearData</referencedby>
        <referencedby refid="class_q_c_p_bars_1a42b894e34dac799f90ff3700706b31df" compoundref="qcustomplot_8cpp" startline="18780" endline="18812">draw</referencedby>
        <referencedby refid="class_q_c_p_bars_1a0161ff6af64e025543c66130bcaa7ffd" compoundref="qcustomplot_8cpp" startline="19048" endline="19095">getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_bars_1af71b8e6ee0b800f0b79f2b6e692afee2" compoundref="qcustomplot_8cpp" startline="19098" endline="19129">getValueRange</referencedby>
        <referencedby refid="class_q_c_p_bars_1adce71831920cf0426722fdd47ba34261" compoundref="qcustomplot_8cpp" startline="18840" endline="18886">getVisibleDataBounds</referencedby>
        <referencedby refid="class_q_c_p_bars_1a1fe9bcb57d670defea1bb65cadf43765" compoundref="qcustomplot_8cpp" startline="18728" endline="18735">removeData</referencedby>
        <referencedby refid="class_q_c_p_bars_1a99de6e7abbbf03fb41fa604c7f08aa8b" compoundref="qcustomplot_8cpp" startline="18713" endline="18719">removeDataAfter</referencedby>
        <referencedby refid="class_q_c_p_bars_1a9d12779a3fad4820aad2c428f368298d" compoundref="qcustomplot_8cpp" startline="18702" endline="18707">removeDataBefore</referencedby>
        <referencedby refid="class_q_c_p_bars_1a62d66cc8eedca6bedfc1f6513164d418" compoundref="qcustomplot_8cpp" startline="18760" endline="18777">selectTest</referencedby>
        <referencedby refid="class_q_c_p_bars_1aa3435aab19e0a49e4e7b41bd36a8d96b" compoundref="qcustomplot_8cpp" startline="18548" endline="18563">setData</referencedby>
        <referencedby refid="class_q_c_p_bars_1a4d880e28031ef120603f543379be2f22" compoundref="qcustomplot_8cpp" startline="18475" endline="18481">~QCPBars</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_bars_1a7c4e0f2246f8133f48a9c3f24cf5b920" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QCPBars::mWidth</definition>
        <argsstring></argsstring>
        <name>mWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2886" column="10" bodyfile="qcustomplot.h" bodystart="2886" bodyend="-1"/>
        <referencedby refid="class_q_c_p_bars_1ad87586cc5e9806740bc0e867667da409" compoundref="qcustomplot_8cpp" startline="18934" endline="18975">getPixelWidth</referencedby>
        <referencedby refid="class_q_c_p_bars_1afec6116579d44d5b706e0fa5e5332507" compoundref="qcustomplot_8cpp" startline="18489" endline="18492">setWidth</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_bars_1a94dba1309496c7601d01e2c59715cbb3" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649" kindref="member">WidthType</ref></type>
        <definition>WidthType QCPBars::mWidthType</definition>
        <argsstring></argsstring>
        <name>mWidthType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2887" column="13" bodyfile="qcustomplot.h" bodystart="2887" bodyend="-1"/>
        <referencedby refid="class_q_c_p_bars_1ad87586cc5e9806740bc0e867667da409" compoundref="qcustomplot_8cpp" startline="18934" endline="18975">getPixelWidth</referencedby>
        <referencedby refid="class_q_c_p_bars_1adcaa3b41281bb2c0f7949b341592fcc0" compoundref="qcustomplot_8cpp" startline="18502" endline="18505">setWidthType</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" prot="protected" static="no" mutable="no">
        <type><ref refid="class_q_c_p_bars_group" kindref="compound">QCPBarsGroup</ref> *</type>
        <definition>QCPBarsGroup* QCPBars::mBarsGroup</definition>
        <argsstring></argsstring>
        <name>mBarsGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2888" column="16" bodyfile="qcustomplot.h" bodystart="2888" bodyend="-1"/>
        <referencedby refid="class_q_c_p_bars_1a3a4ca0069f003929284763caef1856a8" compoundref="qcustomplot_8cpp" startline="18894" endline="18923">getBarPolygon</referencedby>
        <referencedby refid="class_q_c_p_bars_1a0161ff6af64e025543c66130bcaa7ffd" compoundref="qcustomplot_8cpp" startline="19048" endline="19095">getKeyRange</referencedby>
        <referencedby refid="class_q_c_p_bars_1aedd1709061f0b307c47ddb45e172ef9a" compoundref="qcustomplot_8cpp" startline="18513" endline="18522">setBarsGroup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_bars_1aa0515cf47fa6044cc28e59b1ae5ec759" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QCPBars::mBaseValue</definition>
        <argsstring></argsstring>
        <name>mBaseValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2889" column="10" bodyfile="qcustomplot.h" bodystart="2889" bodyend="-1"/>
        <referencedby refid="class_q_c_p_bars_1a0ffd6e043876e13e89eaa54e9f8a04b9" compoundref="qcustomplot_8cpp" startline="18986" endline="19008">getStackedBaseValue</referencedby>
        <referencedby refid="class_q_c_p_bars_1af71b8e6ee0b800f0b79f2b6e692afee2" compoundref="qcustomplot_8cpp" startline="19098" endline="19129">getValueRange</referencedby>
        <referencedby refid="class_q_c_p_bars_1a574ec7eb7537566df1a28ff085d75623" compoundref="qcustomplot_8cpp" startline="18536" endline="18539">setBaseValue</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" prot="protected" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> &gt;</type>
        <definition>QPointer&lt;QCPBars&gt; QCPBars::mBarBelow</definition>
        <argsstring></argsstring>
        <name>mBarBelow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2890" column="12" bodyfile="qcustomplot.h" bodystart="2890" bodyend="-1"/>
        <referencedby refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" compoundref="qcustomplot_8cpp" startline="19018" endline="19045">connectBars</referencedby>
        <referencedby refid="class_q_c_p_bars_1a0ffd6e043876e13e89eaa54e9f8a04b9" compoundref="qcustomplot_8cpp" startline="18986" endline="19008">getStackedBaseValue</referencedby>
        <referencedby refid="class_q_c_p_bars_1ac22e00a6a41509538c21b04f0a57318c" compoundref="qcustomplot_8cpp" startline="18632" endline="18649">moveAbove</referencedby>
        <referencedby refid="class_q_c_p_bars_1a69fc371346980f19177c3d1ecdad78ee" compoundref="qcustomplot_8cpp" startline="18599" endline="18616">moveBelow</referencedby>
        <referencedby refid="class_q_c_p_bars_1a4d880e28031ef120603f543379be2f22" compoundref="qcustomplot_8cpp" startline="18475" endline="18481">~QCPBars</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" prot="protected" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> &gt;</type>
        <definition>QPointer&lt;QCPBars&gt; QCPBars::mBarAbove</definition>
        <argsstring></argsstring>
        <name>mBarAbove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2890" column="22" bodyfile="qcustomplot.h" bodystart="2890" bodyend="-1"/>
        <referencedby refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" compoundref="qcustomplot_8cpp" startline="19018" endline="19045">connectBars</referencedby>
        <referencedby refid="class_q_c_p_bars_1ac22e00a6a41509538c21b04f0a57318c" compoundref="qcustomplot_8cpp" startline="18632" endline="18649">moveAbove</referencedby>
        <referencedby refid="class_q_c_p_bars_1a69fc371346980f19177c3d1ecdad78ee" compoundref="qcustomplot_8cpp" startline="18599" endline="18616">moveBelow</referencedby>
        <referencedby refid="class_q_c_p_bars_1a4d880e28031ef120603f543379be2f22" compoundref="qcustomplot_8cpp" startline="18475" endline="18481">~QCPBars</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_q_c_p_bars_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCustomPlot</definition>
        <argsstring></argsstring>
        <name>QCustomPlot</name>
        <param>
          <type><ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2905" column="3" bodyfile="qcustomplot.h" bodystart="2905" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_bars_1a8429035e7adfbd7f05805a6530ad5e3b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCPLegend</definition>
        <argsstring></argsstring>
        <name>QCPLegend</name>
        <param>
          <type><ref refid="class_q_c_p_legend" kindref="compound">QCPLegend</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2906" column="3" bodyfile="qcustomplot.h" bodystart="2906" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_q_c_p_bars_1ae1051b4d58a2786cb420367a586e2fee" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class QCPBarsGroup</definition>
        <argsstring></argsstring>
        <name>QCPBarsGroup</name>
        <param>
          <type><ref refid="class_q_c_p_bars_group" kindref="compound">QCPBarsGroup</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2907" column="3" bodyfile="qcustomplot.h" bodystart="2907" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_q_c_p_bars_1a64006999ad9dff308f40df41cef176ad" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPBars::QCPBars</definition>
        <argsstring>(QCPAxis *keyAxis, QCPAxis *valueAxis)</argsstring>
        <name>QCPBars</name>
        <param>
          <type><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref> *</type>
          <declname>keyAxis</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref> *</type>
          <declname>valueAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a bar chart which uses <emphasis>keyAxis</emphasis> as its key axis (&quot;x&quot;) and <emphasis>valueAxis</emphasis> as its value axis (&quot;y&quot;). <emphasis>keyAxis</emphasis> and <emphasis>valueAxis</emphasis> must reside in the same <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> instance and not have the same orientation. If either of these restrictions is violated, a corresponding message is printed to the debug output (qDebug), the construction is not aborted, though.</para>
<para>The constructed <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> can be added to the plot with <ref refid="class_q_custom_plot_1ab7ad9174f701f9c6f64e378df77927a6" kindref="member">QCustomPlot::addPlottable</ref>, <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> then takes ownership of the bar chart. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2847" column="12" bodyfile="qcustomplot.cpp" bodystart="18456" bodyend="18473"/>
        <references refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" compoundref="qcustomplot_8h" startline="1464">QCPAbstractPlottable::mBrush</references>
        <references refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" compoundref="qcustomplot_8h" startline="1463">QCPAbstractPlottable::mPen</references>
        <references refid="class_q_c_p_abstract_plottable_1aea3c0da30c7a8be23ad5f2d9bca36762" compoundref="qcustomplot_8h" startline="1464">QCPAbstractPlottable::mSelectedBrush</references>
        <references refid="class_q_c_p_abstract_plottable_1a10619472f5d5e10e9519a599f1cf5576" compoundref="qcustomplot_8h" startline="1463">QCPAbstractPlottable::mSelectedPen</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a4d880e28031ef120603f543379be2f22" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>QCPBars::~QCPBars</definition>
        <argsstring>()</argsstring>
        <name>~QCPBars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2848" column="11" bodyfile="qcustomplot.cpp" bodystart="18475" bodyend="18481"/>
        <references refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" compoundref="qcustomplot_8cpp" startline="19018" endline="19045">connectBars</references>
        <references refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" compoundref="qcustomplot_8h" startline="2890">mBarAbove</references>
        <references refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" compoundref="qcustomplot_8h" startline="2890">mBarBelow</references>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
        <references refid="class_q_c_p_bars_1aedd1709061f0b307c47ddb45e172ef9a" compoundref="qcustomplot_8cpp" startline="18513" endline="18522">setBarsGroup</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1abe7eb3987d8711f45829db879aee2280" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QCPBars::width</definition>
        <argsstring>() const</argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2851" column="10" bodyfile="qcustomplot.h" bodystart="2851" bodyend="2851"/>
        <referencedby refid="class_q_c_p_bars_1afec6116579d44d5b706e0fa5e5332507" compoundref="qcustomplot_8cpp" startline="18489" endline="18492">setWidth</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a4c103fb405a45f47853e0345f0c6e708" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649" kindref="member">WidthType</ref></type>
        <definition>WidthType QCPBars::widthType</definition>
        <argsstring>() const</argsstring>
        <name>widthType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2852" column="13" bodyfile="qcustomplot.h" bodystart="2852" bodyend="2852"/>
        <referencedby refid="class_q_c_p_bars_1adcaa3b41281bb2c0f7949b341592fcc0" compoundref="qcustomplot_8cpp" startline="18502" endline="18505">setWidthType</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a5eef59840b68d205df4e0c3df5f97633" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_bars_group" kindref="compound">QCPBarsGroup</ref> *</type>
        <definition>QCPBarsGroup* QCPBars::barsGroup</definition>
        <argsstring>() const</argsstring>
        <name>barsGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2853" column="16" bodyfile="qcustomplot.h" bodystart="2853" bodyend="2853"/>
        <referencedby refid="class_q_c_p_bars_1aedd1709061f0b307c47ddb45e172ef9a" compoundref="qcustomplot_8cpp" startline="18513" endline="18522">setBarsGroup</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a29a7b3b86f80b2a04bd1f9ec0ebaf422" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QCPBars::baseValue</definition>
        <argsstring>() const</argsstring>
        <name>baseValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2854" column="10" bodyfile="qcustomplot.h" bodystart="2854" bodyend="2854"/>
        <referencedby refid="class_q_c_p_bars_1a574ec7eb7537566df1a28ff085d75623" compoundref="qcustomplot_8cpp" startline="18536" endline="18539">setBaseValue</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a1b58664864b141f45e02044a855b3213" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> *</type>
        <definition>QCPBars * QCPBars::barBelow</definition>
        <argsstring>() const</argsstring>
        <name>barBelow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the bars plottable that is directly below this bars plottable. If there is no such plottable, returns 0.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_bars_1ab97f2acd9f6cb40d2cc3c33d278f0e78" kindref="member">barAbove</ref>, <ref refid="class_q_c_p_bars_1a69fc371346980f19177c3d1ecdad78ee" kindref="member">moveBelow</ref>, <ref refid="class_q_c_p_bars_1ac22e00a6a41509538c21b04f0a57318c" kindref="member">moveAbove</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2855" column="11" bodyfile="qcustomplot.h" bodystart="2855" bodyend="2855"/>
        <references refid="class_q_c_p_bars_1a185bcee5f2d96fbc336a2d270687d016" compoundref="qcustomplot_8h" startline="2857" endline="2857">data</references>
        <referencedby refid="class_q_c_p_bars_group_1a8e2ca6002e7bab49670144d048a2bcc9" compoundref="qcustomplot_8cpp" startline="18245" endline="18318">QCPBarsGroup::keyPixelOffset</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1ab97f2acd9f6cb40d2cc3c33d278f0e78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> *</type>
        <definition>QCPBars * QCPBars::barAbove</definition>
        <argsstring>() const</argsstring>
        <name>barAbove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the bars plottable that is directly above this bars plottable. If there is no such plottable, returns 0.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_bars_1a1b58664864b141f45e02044a855b3213" kindref="member">barBelow</ref>, <ref refid="class_q_c_p_bars_1a69fc371346980f19177c3d1ecdad78ee" kindref="member">moveBelow</ref>, <ref refid="class_q_c_p_bars_1ac22e00a6a41509538c21b04f0a57318c" kindref="member">moveAbove</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2856" column="11" bodyfile="qcustomplot.h" bodystart="2856" bodyend="2856"/>
        <references refid="class_q_c_p_bars_1a185bcee5f2d96fbc336a2d270687d016" compoundref="qcustomplot_8h" startline="2857" endline="2857">data</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a185bcee5f2d96fbc336a2d270687d016" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="qcustomplot_8h_1aa846c77472cae93def9f1609d0c57191" kindref="member">QCPBarDataMap</ref> *</type>
        <definition>QCPBarDataMap* QCPBars::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2857" column="17" bodyfile="qcustomplot.h" bodystart="2857" bodyend="2857"/>
        <referencedby refid="class_q_c_p_bars_1a142158b1addefd53259002dd3ab22c3a" compoundref="qcustomplot_8cpp" startline="18664" endline="18667">addData</referencedby>
        <referencedby refid="class_q_c_p_bars_1ab97f2acd9f6cb40d2cc3c33d278f0e78" compoundref="qcustomplot_8h" startline="2856" endline="2856">barAbove</referencedby>
        <referencedby refid="class_q_c_p_bars_1a1b58664864b141f45e02044a855b3213" compoundref="qcustomplot_8h" startline="2855" endline="2855">barBelow</referencedby>
        <referencedby refid="class_q_c_p_bars_1aa3435aab19e0a49e4e7b41bd36a8d96b" compoundref="qcustomplot_8cpp" startline="18548" endline="18563">setData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1afec6116579d44d5b706e0fa5e5332507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::setWidth</definition>
        <argsstring>(double width)</argsstring>
        <name>setWidth</name>
        <param>
          <type>double</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the width of the bars.</para>
<para>How the number passed as <emphasis>width</emphasis> is interpreted (e.g. screen pixels, plot coordinates,...), depends on the currently set width type, see <ref refid="class_q_c_p_bars_1adcaa3b41281bb2c0f7949b341592fcc0" kindref="member">setWidthType</ref> and <ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649" kindref="member">WidthType</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2860" column="8" bodyfile="qcustomplot.cpp" bodystart="18489" bodyend="18492"/>
        <references refid="class_q_c_p_bars_1a7c4e0f2246f8133f48a9c3f24cf5b920" compoundref="qcustomplot_8h" startline="2886">mWidth</references>
        <references refid="class_q_c_p_bars_1abe7eb3987d8711f45829db879aee2280" compoundref="qcustomplot_8h" startline="2851" endline="2851">width</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1adcaa3b41281bb2c0f7949b341592fcc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::setWidthType</definition>
        <argsstring>(WidthType widthType)</argsstring>
        <name>setWidthType</name>
        <param>
          <type><ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649" kindref="member">WidthType</ref></type>
          <declname>widthType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets how the width of the bars is defined. See the documentation of <ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649" kindref="member">WidthType</ref> for an explanation of the possible values for <emphasis>widthType</emphasis>.</para>
<para>The default value is <ref refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649aad3cc60ae1bfb1160a30237bee9eaf10" kindref="member">wtPlotCoords</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_bars_1afec6116579d44d5b706e0fa5e5332507" kindref="member">setWidth</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2861" column="8" bodyfile="qcustomplot.cpp" bodystart="18502" bodyend="18505"/>
        <references refid="class_q_c_p_bars_1a94dba1309496c7601d01e2c59715cbb3" compoundref="qcustomplot_8h" startline="2887">mWidthType</references>
        <references refid="class_q_c_p_bars_1a4c103fb405a45f47853e0345f0c6e708" compoundref="qcustomplot_8h" startline="2852" endline="2852">widthType</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1aedd1709061f0b307c47ddb45e172ef9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::setBarsGroup</definition>
        <argsstring>(QCPBarsGroup *barsGroup)</argsstring>
        <name>setBarsGroup</name>
        <param>
          <type><ref refid="class_q_c_p_bars_group" kindref="compound">QCPBarsGroup</ref> *</type>
          <declname>barsGroup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets to which <ref refid="class_q_c_p_bars_group" kindref="compound">QCPBarsGroup</ref> this <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> instance belongs to. Alternatively, you can also use <ref refid="class_q_c_p_bars_group_1a809ed63cc4ff7cd5b0b8c96b470163d3" kindref="member">QCPBarsGroup::append</ref>.</para>
<para>To remove this <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> from any group, set <emphasis>barsGroup</emphasis> to 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2862" column="8" bodyfile="qcustomplot.cpp" bodystart="18513" bodyend="18522"/>
        <references refid="class_q_c_p_bars_1a5eef59840b68d205df4e0c3df5f97633" compoundref="qcustomplot_8h" startline="2853" endline="2853">barsGroup</references>
        <references refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" compoundref="qcustomplot_8h" startline="2888">mBarsGroup</references>
        <references refid="class_q_c_p_bars_group_1a7b00514f19ad58d0bb3fd5246a67fae2" compoundref="qcustomplot_8cpp" startline="18221" endline="18225">QCPBarsGroup::registerBars</references>
        <references refid="class_q_c_p_bars_group_1ac7073cdd7b1a40c6cb4b5f908145f8c4" compoundref="qcustomplot_8cpp" startline="18234" endline="18237">QCPBarsGroup::unregisterBars</references>
        <referencedby refid="class_q_c_p_bars_1a4d880e28031ef120603f543379be2f22" compoundref="qcustomplot_8cpp" startline="18475" endline="18481">~QCPBars</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a574ec7eb7537566df1a28ff085d75623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::setBaseValue</definition>
        <argsstring>(double baseValue)</argsstring>
        <name>setBaseValue</name>
        <param>
          <type>double</type>
          <declname>baseValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the base value of this bars plottable.</para>
<para>The base value defines where on the value coordinate the bars start. How far the bars extend from the base value is given by their individual value data. For example, if the base value is set to 1, a bar with data value 2 will have its lowest point at value coordinate 1 and highest point at 3.</para>
<para>For stacked bars, only the base value of the bottom-most <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> has meaning.</para>
<para>The default base value is 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2863" column="8" bodyfile="qcustomplot.cpp" bodystart="18536" bodyend="18539"/>
        <references refid="class_q_c_p_bars_1a29a7b3b86f80b2a04bd1f9ec0ebaf422" compoundref="qcustomplot_8h" startline="2854" endline="2854">baseValue</references>
        <references refid="class_q_c_p_bars_1aa0515cf47fa6044cc28e59b1ae5ec759" compoundref="qcustomplot_8h" startline="2889">mBaseValue</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1aa3435aab19e0a49e4e7b41bd36a8d96b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::setData</definition>
        <argsstring>(QCPBarDataMap *data, bool copy=false)</argsstring>
        <name>setData</name>
        <param>
          <type><ref refid="qcustomplot_8h_1aa846c77472cae93def9f1609d0c57191" kindref="member">QCPBarDataMap</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces the current data with the provided <emphasis>data</emphasis>.</para>
<para>If <emphasis>copy</emphasis> is set to true, data points in <emphasis>data</emphasis> will only be copied. if false, the plottable takes ownership of the passed data and replaces the internal data pointer with it. This is significantly faster than copying for large datasets. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2864" column="8" bodyfile="qcustomplot.cpp" bodystart="18548" bodyend="18563"/>
        <references refid="class_q_c_p_bars_1a185bcee5f2d96fbc336a2d270687d016" compoundref="qcustomplot_8h" startline="2857" endline="2857">data</references>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a3efded5df4a82ecb201f7c28099fa2e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::setData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value)</argsstring>
        <name>setData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Replaces the current data with the provided points in <emphasis>key</emphasis> and <emphasis>value</emphasis> tuples. The provided vectors should have equal length. Else, the number of added points will be the size of the smallest vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2865" column="8" bodyfile="qcustomplot.cpp" bodystart="18571" bodyend="18583"/>
        <references refid="class_q_c_p_bar_data_1afe544b035ef19027ea3d65adeaf81b42" compoundref="qcustomplot_8h" startline="2807">QCPBarData::key</references>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
        <references refid="class_q_c_p_bar_data_1acab57005d8916d61b64e9ddef6113b60" compoundref="qcustomplot_8h" startline="2807">QCPBarData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a69fc371346980f19177c3d1ecdad78ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::moveBelow</definition>
        <argsstring>(QCPBars *bars)</argsstring>
        <name>moveBelow</name>
        <param>
          <type><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> *</type>
          <declname>bars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves this bars plottable below <emphasis>bars</emphasis>. In other words, the bars of this plottable will appear below the bars of <emphasis>bars</emphasis>. The move target <emphasis>bars</emphasis> must use the same key and value axis as this plottable.</para>
<para>Inserting into and removing from existing bar stacking is handled gracefully. If <emphasis>bars</emphasis> already has a bars object below itself, this bars object is inserted between the two. If this bars object is already between two other bars, the two other bars will be stacked on top of each other after the operation.</para>
<para>To remove this bars plottable from any stacking, set <emphasis>bars</emphasis> to 0.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_bars_1a69fc371346980f19177c3d1ecdad78ee" kindref="member">moveBelow</ref>, <ref refid="class_q_c_p_bars_1ab97f2acd9f6cb40d2cc3c33d278f0e78" kindref="member">barAbove</ref>, <ref refid="class_q_c_p_bars_1a1b58664864b141f45e02044a855b3213" kindref="member">barBelow</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2868" column="8" bodyfile="qcustomplot.cpp" bodystart="18599" bodyend="18616"/>
        <references refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" compoundref="qcustomplot_8cpp" startline="19018" endline="19045">connectBars</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" compoundref="qcustomplot_8h" startline="2890">mBarAbove</references>
        <references refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" compoundref="qcustomplot_8h" startline="2890">mBarBelow</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1ac22e00a6a41509538c21b04f0a57318c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::moveAbove</definition>
        <argsstring>(QCPBars *bars)</argsstring>
        <name>moveAbove</name>
        <param>
          <type><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> *</type>
          <declname>bars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Moves this bars plottable above <emphasis>bars</emphasis>. In other words, the bars of this plottable will appear above the bars of <emphasis>bars</emphasis>. The move target <emphasis>bars</emphasis> must use the same key and value axis as this plottable.</para>
<para>Inserting into and removing from existing bar stacking is handled gracefully. If <emphasis>bars</emphasis> already has a bars object above itself, this bars object is inserted between the two. If this bars object is already between two other bars, the two other bars will be stacked on top of each other after the operation.</para>
<para>To remove this bars plottable from any stacking, set <emphasis>bars</emphasis> to 0.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_bars_1a69fc371346980f19177c3d1ecdad78ee" kindref="member">moveBelow</ref>, <ref refid="class_q_c_p_bars_1a1b58664864b141f45e02044a855b3213" kindref="member">barBelow</ref>, <ref refid="class_q_c_p_bars_1ab97f2acd9f6cb40d2cc3c33d278f0e78" kindref="member">barAbove</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2869" column="8" bodyfile="qcustomplot.cpp" bodystart="18632" bodyend="18649"/>
        <references refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" compoundref="qcustomplot_8cpp" startline="19018" endline="19045">connectBars</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" compoundref="qcustomplot_8h" startline="2890">mBarAbove</references>
        <references refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" compoundref="qcustomplot_8h" startline="2890">mBarBelow</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a1f29cf08615040993209147fa68de3f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::addData</definition>
        <argsstring>(const QCPBarDataMap &amp;dataMap)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="qcustomplot_8h_1aa846c77472cae93def9f1609d0c57191" kindref="member">QCPBarDataMap</ref> &amp;</type>
          <declname>dataMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds the provided data points in <emphasis>dataMap</emphasis> to the current data. <simplesect kind="see"><para><ref refid="class_q_c_p_bars_1a1fe9bcb57d670defea1bb65cadf43765" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2870" column="8" bodyfile="qcustomplot.cpp" bodystart="18655" bodyend="18658"/>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a142158b1addefd53259002dd3ab22c3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::addData</definition>
        <argsstring>(const QCPBarData &amp;data)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="class_q_c_p_bar_data" kindref="compound">QCPBarData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Adds the provided single data point in <emphasis>data</emphasis> to the current data. <simplesect kind="see"><para><ref refid="class_q_c_p_bars_1a1fe9bcb57d670defea1bb65cadf43765" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2871" column="8" bodyfile="qcustomplot.cpp" bodystart="18664" bodyend="18667"/>
        <references refid="class_q_c_p_bars_1a185bcee5f2d96fbc336a2d270687d016" compoundref="qcustomplot_8h" startline="2857" endline="2857">data</references>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a684dd105403a5497fda42f2094fecbb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::addData</definition>
        <argsstring>(double key, double value)</argsstring>
        <name>addData</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Adds the provided single data point as <emphasis>key</emphasis> and <emphasis>value</emphasis> tuple to the current data <simplesect kind="see"><para><ref refid="class_q_c_p_bars_1a1fe9bcb57d670defea1bb65cadf43765" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2872" column="8" bodyfile="qcustomplot.cpp" bodystart="18673" bodyend="18679"/>
        <references refid="class_q_c_p_bar_data_1afe544b035ef19027ea3d65adeaf81b42" compoundref="qcustomplot_8h" startline="2807">QCPBarData::key</references>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
        <references refid="class_q_c_p_bar_data_1acab57005d8916d61b64e9ddef6113b60" compoundref="qcustomplot_8h" startline="2807">QCPBarData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a3679a0a9decab0fa03f8f4c6e3344d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::addData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;keys, const QVector&lt; double &gt; &amp;values)</argsstring>
        <name>addData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Adds the provided data points as <emphasis>key</emphasis> and <emphasis>value</emphasis> tuples to the current data. <simplesect kind="see"><para><ref refid="class_q_c_p_bars_1a1fe9bcb57d670defea1bb65cadf43765" kindref="member">removeData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2873" column="8" bodyfile="qcustomplot.cpp" bodystart="18685" bodyend="18696"/>
        <references refid="class_q_c_p_bar_data_1afe544b035ef19027ea3d65adeaf81b42" compoundref="qcustomplot_8h" startline="2807">QCPBarData::key</references>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
        <references refid="class_q_c_p_bar_data_1acab57005d8916d61b64e9ddef6113b60" compoundref="qcustomplot_8h" startline="2807">QCPBarData::value</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a9d12779a3fad4820aad2c428f368298d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::removeDataBefore</definition>
        <argsstring>(double key)</argsstring>
        <name>removeDataBefore</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all data points with key smaller than <emphasis>key</emphasis>. <simplesect kind="see"><para><ref refid="class_q_c_p_bars_1a1f29cf08615040993209147fa68de3f2" kindref="member">addData</ref>, <ref refid="class_q_c_p_bars_1a11dbbd707132f07f862dff13c5789c2b" kindref="member">clearData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2874" column="8" bodyfile="qcustomplot.cpp" bodystart="18702" bodyend="18707"/>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a99de6e7abbbf03fb41fa604c7f08aa8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::removeDataAfter</definition>
        <argsstring>(double key)</argsstring>
        <name>removeDataAfter</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all data points with key greater than <emphasis>key</emphasis>. <simplesect kind="see"><para><ref refid="class_q_c_p_bars_1a1f29cf08615040993209147fa68de3f2" kindref="member">addData</ref>, <ref refid="class_q_c_p_bars_1a11dbbd707132f07f862dff13c5789c2b" kindref="member">clearData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2875" column="8" bodyfile="qcustomplot.cpp" bodystart="18713" bodyend="18719"/>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a1fe9bcb57d670defea1bb65cadf43765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::removeData</definition>
        <argsstring>(double fromKey, double toKey)</argsstring>
        <name>removeData</name>
        <param>
          <type>double</type>
          <declname>fromKey</declname>
        </param>
        <param>
          <type>double</type>
          <declname>toKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all data points with key between <emphasis>fromKey</emphasis> and <emphasis>toKey</emphasis>. if <emphasis>fromKey</emphasis> is greater or equal to <emphasis>toKey</emphasis>, the function does nothing. To remove a single data point with known key, use <ref refid="class_q_c_p_bars_1a837cc9848ad3edd40a6130b508493f93" kindref="member">removeData(double key)</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_bars_1a1f29cf08615040993209147fa68de3f2" kindref="member">addData</ref>, <ref refid="class_q_c_p_bars_1a11dbbd707132f07f862dff13c5789c2b" kindref="member">clearData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2876" column="8" bodyfile="qcustomplot.cpp" bodystart="18728" bodyend="18735"/>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a837cc9848ad3edd40a6130b508493f93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::removeData</definition>
        <argsstring>(double key)</argsstring>
        <name>removeData</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Removes a single data point at <emphasis>key</emphasis>. If the position is not known with absolute precision, consider using <ref refid="class_q_c_p_bars_1a1fe9bcb57d670defea1bb65cadf43765" kindref="member">removeData(double fromKey, double toKey)</ref> with a small fuzziness interval around the suspected position, depeding on the precision with which the key is known.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_bars_1a1f29cf08615040993209147fa68de3f2" kindref="member">addData</ref>, <ref refid="class_q_c_p_bars_1a11dbbd707132f07f862dff13c5789c2b" kindref="member">clearData</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2877" column="8" bodyfile="qcustomplot.cpp" bodystart="18745" bodyend="18748"/>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a11dbbd707132f07f862dff13c5789c2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPBars::clearData</definition>
        <argsstring>()</argsstring>
        <name>clearData</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1a86e5b8fd4b6ff4f4084e7ea4c573fc53">clearData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes all data points. <simplesect kind="see"><para><ref refid="class_q_c_p_bars_1a1fe9bcb57d670defea1bb65cadf43765" kindref="member">removeData</ref>, <ref refid="class_q_c_p_bars_1a99de6e7abbbf03fb41fa604c7f08aa8b" kindref="member">removeDataAfter</ref>, <ref refid="class_q_c_p_bars_1a9d12779a3fad4820aad2c428f368298d" kindref="member">removeDataBefore</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2880" column="16" bodyfile="qcustomplot.cpp" bodystart="18754" bodyend="18757"/>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a62d66cc8eedca6bedfc1f6513164d418" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double QCPBars::selectTest</definition>
        <argsstring>(const QPointF &amp;pos, bool onlySelectable, QVariant *details=0) const</argsstring>
        <name>selectTest</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1a38efe9641d972992a3d44204bc80ec1d">selectTest</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelectable</declname>
        </param>
        <param>
          <type>QVariant *</type>
          <declname>details</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is used to decide whether a click hits a layerable object or not.</para>
<para><emphasis>pos</emphasis> is a point in pixel coordinates on the <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> surface. This function returns the shortest pixel distance of this point to the object. If the object is either invisible or the distance couldn&apos;t be determined, -1.0 is returned. Further, if <emphasis>onlySelectable</emphasis> is true and the object is not selectable, -1.0 is returned, too.</para>
<para>If the object is represented not by single lines but by an area like a <ref refid="class_q_c_p_item_text" kindref="compound">QCPItemText</ref> or the bars of a <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> plottable, a click inside the area should also be considered a hit. In these cases this function thus returns a constant value greater zero but still below the parent plot&apos;s selection tolerance. (typically the selectionTolerance multiplied by 0.99).</para>
<para>Providing a constant value for area objects allows selecting line objects even when they are obscured by such area objects, by clicking close to the lines (i.e. closer than 0.99*selectionTolerance).</para>
<para>The actual setting of the selection state is not done by this function. This is handled by the parent <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> when the mouseReleaseEvent occurs, and the finally selected object is notified via the selectEvent/deselectEvent methods.</para>
<para><emphasis>details</emphasis> is an optional output parameter. Every layerable subclass may place any information in <emphasis>details</emphasis>. This information will be passed to <ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">selectEvent</ref> when the parent <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> decides on the basis of this selectTest call, that the object was successfully selected. The subsequent call to <ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">selectEvent</ref> will carry the <emphasis>details</emphasis>. This is useful for multi-part objects (like <ref refid="class_q_c_p_axis" kindref="compound">QCPAxis</ref>). This way, a possibly complex calculation to decide which part was clicked is only done once in <ref refid="class_q_c_p_bars_1a62d66cc8eedca6bedfc1f6513164d418" kindref="member">selectTest</ref>. The result (i.e. the actually clicked part) can then be placed in <emphasis>details</emphasis>. So in the subsequent <ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">selectEvent</ref>, the decision which part was selected doesn&apos;t have to be done a second time for a single selection operation.</para>
<para>You may pass 0 as <emphasis>details</emphasis> to indicate that you are not interested in those selection details.</para>
<para><simplesect kind="see"><para><ref refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" kindref="member">selectEvent</ref>, <ref refid="class_q_c_p_abstract_plottable_1a6fa0d0f95560ea8b01ee13f296dab2b1" kindref="member">deselectEvent</ref>, <ref refid="class_q_custom_plot_1a5ee1e2f6ae27419deca53e75907c27e5" kindref="member">QCustomPlot::setInteractions</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2881" column="18" bodyfile="qcustomplot.cpp" bodystart="18760" bodyend="18777"/>
        <references refid="class_q_c_p_bars_1a3a4ca0069f003929284763caef1856a8" compoundref="qcustomplot_8cpp" startline="18894" endline="18923">getBarPolygon</references>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" compoundref="qcustomplot_8h" startline="447">QCPLayerable::mParentPlot</references>
        <references refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" compoundref="qcustomplot_8h" startline="1466">QCPAbstractPlottable::mSelectable</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_custom_plot_1a5441d11013afeaf4b8f2ea06e8624a25" compoundref="qcustomplot_8h" startline="1728" endline="1728">QCustomPlot::selectionTolerance</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_q_c_p_bars_1a42b894e34dac799f90ff3700706b31df" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPBars::draw</definition>
        <argsstring>(QCPPainter *painter)</argsstring>
        <name>draw</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1acbab5e30dcd04fd302b4a5902ac2c482">draw</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2893" column="16" bodyfile="qcustomplot.cpp" bodystart="18780" bodyend="18812"/>
        <references refid="class_q_c_p_abstract_plottable_1a59a80773c5cefc05a0646ac8e1149ed5" compoundref="qcustomplot_8cpp" startline="7297" endline="7300">QCPAbstractPlottable::applyDefaultAntialiasingHint</references>
        <references refid="class_q_c_p_abstract_plottable_1a8d06a59ea23324cce6330ebf2262c0ed" compoundref="qcustomplot_8cpp" startline="7313" endline="7316">QCPAbstractPlottable::applyFillAntialiasingHint</references>
        <references refid="class_q_c_p_bars_1a3a4ca0069f003929284763caef1856a8" compoundref="qcustomplot_8cpp" startline="18894" endline="18923">getBarPolygon</references>
        <references refid="class_q_c_p_bars_1adce71831920cf0426722fdd47ba34261" compoundref="qcustomplot_8cpp" startline="18840" endline="18886">getVisibleDataBounds</references>
        <references refid="namespace_q_c_p_1a07ab701c05329089f933b9cae2638a63" compoundref="qcustomplot_8h" startline="172" endline="175">QCP::isInvalidData</references>
        <references refid="class_q_c_p_abstract_plottable_1ac9147022a662e92b46c39e7cb821b0af" compoundref="qcustomplot_8cpp" startline="7279" endline="7282">QCPAbstractPlottable::mainBrush</references>
        <references refid="class_q_c_p_abstract_plottable_1abd790a3b229239f49067f136633a4b98" compoundref="qcustomplot_8cpp" startline="7269" endline="7272">QCPAbstractPlottable::mainPen</references>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a52c226eefcb1920240eeabae574d28c0" compoundref="qcustomplot_8h" startline="1409" endline="1409">QCPAbstractPlottable::name</references>
        <references refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" compoundref="qcustomplot_8cpp" startline="86" endline="91">QCPPainter::setPen</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1ad466f06b0fa561b6e12c92fdb8fa3c7f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QCPBars::drawLegendIcon</definition>
        <argsstring>(QCPPainter *painter, const QRectF &amp;rect) const</argsstring>
        <name>drawLegendIcon</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1a9a450783fd9ed539e589999fd390cdf7">drawLegendIcon</reimplements>
        <param>
          <type><ref refid="class_q_c_p_painter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2894" column="16" bodyfile="qcustomplot.cpp" bodystart="18815" bodyend="18824"/>
        <references refid="class_q_c_p_abstract_plottable_1a59a80773c5cefc05a0646ac8e1149ed5" compoundref="qcustomplot_8cpp" startline="7297" endline="7300">QCPAbstractPlottable::applyDefaultAntialiasingHint</references>
        <references refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" compoundref="qcustomplot_8h" startline="1464">QCPAbstractPlottable::mBrush</references>
        <references refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" compoundref="qcustomplot_8h" startline="1463">QCPAbstractPlottable::mPen</references>
        <references refid="class_q_c_p_painter_1af9c7a4cd1791403901f8c5b82a150195" compoundref="qcustomplot_8cpp" startline="86" endline="91">QCPPainter::setPen</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a0161ff6af64e025543c66130bcaa7ffd" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>QCPRange QCPBars::getKeyRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain=sdBoth) const</argsstring>
        <name>getKeyRange</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1a345d702b2e7e12c8cfdddff65ba85e8c">getKeyRange</reimplements>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
          <defval><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2895" column="20" bodyfile="qcustomplot.cpp" bodystart="19048" bodyend="19095"/>
        <references refid="class_q_c_p_bars_1ad87586cc5e9806740bc0e867667da409" compoundref="qcustomplot_8cpp" startline="18934" endline="18975">getPixelWidth</references>
        <references refid="class_q_c_p_bars_group_1a8e2ca6002e7bab49670144d048a2bcc9" compoundref="qcustomplot_8cpp" startline="18245" endline="18318">QCPBarsGroup::keyPixelOffset</references>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">QCPRange::lower</references>
        <references refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" compoundref="qcustomplot_8h" startline="2888">mBarsGroup</references>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" compoundref="qcustomplot_8h" startline="1456">QCPAbstractPlottable::sdBoth</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" compoundref="qcustomplot_8h" startline="1455">QCPAbstractPlottable::sdNegative</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" compoundref="qcustomplot_8h" startline="1457">QCPAbstractPlottable::sdPositive</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">QCPRange::upper</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1af71b8e6ee0b800f0b79f2b6e692afee2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_q_c_p_range" kindref="compound">QCPRange</ref></type>
        <definition>QCPRange QCPBars::getValueRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain=sdBoth) const</argsstring>
        <name>getValueRange</name>
        <reimplements refid="class_q_c_p_abstract_plottable_1aa3331b415b5939fe4df60b78831b2799">getValueRange</reimplements>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
          <defval><ref refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2896" column="20" bodyfile="qcustomplot.cpp" bodystart="19098" bodyend="19129"/>
        <references refid="class_q_c_p_bars_1a0ffd6e043876e13e89eaa54e9f8a04b9" compoundref="qcustomplot_8cpp" startline="18986" endline="19008">getStackedBaseValue</references>
        <references refid="class_q_c_p_range_1aa3aca3edb14f7ca0c85d912647b91745" compoundref="qcustomplot_8h" startline="479">QCPRange::lower</references>
        <references refid="class_q_c_p_bars_1aa0515cf47fa6044cc28e59b1ae5ec759" compoundref="qcustomplot_8h" startline="2889">mBaseValue</references>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" compoundref="qcustomplot_8h" startline="1456">QCPAbstractPlottable::sdBoth</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" compoundref="qcustomplot_8h" startline="1455">QCPAbstractPlottable::sdNegative</references>
        <references refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" compoundref="qcustomplot_8h" startline="1457">QCPAbstractPlottable::sdPositive</references>
        <references refid="class_q_c_p_range_1ae44eb3aafe1d0e2ed34b499b6d2e074f" compoundref="qcustomplot_8h" startline="479">QCPRange::upper</references>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1adce71831920cf0426722fdd47ba34261" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::getVisibleDataBounds</definition>
        <argsstring>(QCPBarDataMap::const_iterator &amp;lower, QCPBarDataMap::const_iterator &amp;upperEnd) const</argsstring>
        <name>getVisibleDataBounds</name>
        <param>
          <type>QCPBarDataMap::const_iterator &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>QCPBarDataMap::const_iterator &amp;</type>
          <declname>upperEnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2899" column="8" bodyfile="qcustomplot.cpp" bodystart="18840" bodyend="18886"/>
        <references refid="class_q_c_p_bars_1a3a4ca0069f003929284763caef1856a8" compoundref="qcustomplot_8cpp" startline="18894" endline="18923">getBarPolygon</references>
        <references refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" compoundref="qcustomplot_8h" startline="2885">mData</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <referencedby refid="class_q_c_p_bars_1a42b894e34dac799f90ff3700706b31df" compoundref="qcustomplot_8cpp" startline="18780" endline="18812">draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a3a4ca0069f003929284763caef1856a8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPolygonF</type>
        <definition>QPolygonF QCPBars::getBarPolygon</definition>
        <argsstring>(double key, double value) const</argsstring>
        <name>getBarPolygon</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2900" column="13" bodyfile="qcustomplot.cpp" bodystart="18894" bodyend="18923"/>
        <references refid="class_q_c_p_axis_1af15d1b3a7f7e9b53d759d3ccff1fe4b4" compoundref="qcustomplot_8cpp" startline="5324" endline="5371">QCPAxis::coordToPixel</references>
        <references refid="class_q_c_p_bars_1ad87586cc5e9806740bc0e867667da409" compoundref="qcustomplot_8cpp" startline="18934" endline="18975">getPixelWidth</references>
        <references refid="class_q_c_p_bars_1a0ffd6e043876e13e89eaa54e9f8a04b9" compoundref="qcustomplot_8cpp" startline="18986" endline="19008">getStackedBaseValue</references>
        <references refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" compoundref="qcustomplot_8h" startline="1417" endline="1417">QCPAbstractPlottable::keyAxis</references>
        <references refid="class_q_c_p_bars_group_1a8e2ca6002e7bab49670144d048a2bcc9" compoundref="qcustomplot_8cpp" startline="18245" endline="18318">QCPBarsGroup::keyPixelOffset</references>
        <references refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" compoundref="qcustomplot_8h" startline="2888">mBarsGroup</references>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mValueAxis</references>
        <references refid="class_q_c_p_axis_1ab988ef4538e2655bb77bd138189cd42e" compoundref="qcustomplot_8h" startline="1206" endline="1206">QCPAxis::orientation</references>
        <references refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" compoundref="qcustomplot_8h" startline="1418" endline="1418">QCPAbstractPlottable::valueAxis</references>
        <referencedby refid="class_q_c_p_bars_1a42b894e34dac799f90ff3700706b31df" compoundref="qcustomplot_8cpp" startline="18780" endline="18812">draw</referencedby>
        <referencedby refid="class_q_c_p_bars_1adce71831920cf0426722fdd47ba34261" compoundref="qcustomplot_8cpp" startline="18840" endline="18886">getVisibleDataBounds</referencedby>
        <referencedby refid="class_q_c_p_bars_1a62d66cc8eedca6bedfc1f6513164d418" compoundref="qcustomplot_8cpp" startline="18760" endline="18777">selectTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1ad87586cc5e9806740bc0e867667da409" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::getPixelWidth</definition>
        <argsstring>(double key, double &amp;lower, double &amp;upper) const</argsstring>
        <name>getPixelWidth</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2901" column="8" bodyfile="qcustomplot.cpp" bodystart="18934" bodyend="18975"/>
        <references refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" compoundref="qcustomplot_8h" startline="1465">QCPAbstractPlottable::mKeyAxis</references>
        <references refid="class_q_c_p_bars_1a7c4e0f2246f8133f48a9c3f24cf5b920" compoundref="qcustomplot_8h" startline="2886">mWidth</references>
        <references refid="class_q_c_p_bars_1a94dba1309496c7601d01e2c59715cbb3" compoundref="qcustomplot_8h" startline="2887">mWidthType</references>
        <references refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649ab74315c9aa77df593c58dd25dfc0de35" compoundref="qcustomplot_8h" startline="2841">wtAbsolute</references>
        <references refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649a90bc09899361ad3422ff277f7c790ffe" compoundref="qcustomplot_8h" startline="2842">wtAxisRectRatio</references>
        <references refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649aad3cc60ae1bfb1160a30237bee9eaf10" compoundref="qcustomplot_8h" startline="2843">wtPlotCoords</references>
        <referencedby refid="class_q_c_p_bars_1a3a4ca0069f003929284763caef1856a8" compoundref="qcustomplot_8cpp" startline="18894" endline="18923">getBarPolygon</referencedby>
        <referencedby refid="class_q_c_p_bars_1a0161ff6af64e025543c66130bcaa7ffd" compoundref="qcustomplot_8cpp" startline="19048" endline="19095">getKeyRange</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_q_c_p_bars_1a0ffd6e043876e13e89eaa54e9f8a04b9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QCPBars::getStackedBaseValue</definition>
        <argsstring>(double key, bool positive) const</argsstring>
        <name>getStackedBaseValue</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>positive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2902" column="10" bodyfile="qcustomplot.cpp" bodystart="18986" bodyend="19008"/>
        <references refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" compoundref="qcustomplot_8h" startline="2890">mBarBelow</references>
        <references refid="class_q_c_p_bars_1aa0515cf47fa6044cc28e59b1ae5ec759" compoundref="qcustomplot_8h" startline="2889">mBaseValue</references>
        <referencedby refid="class_q_c_p_bars_1a3a4ca0069f003929284763caef1856a8" compoundref="qcustomplot_8cpp" startline="18894" endline="18923">getBarPolygon</referencedby>
        <referencedby refid="class_q_c_p_bars_1af71b8e6ee0b800f0b79f2b6e692afee2" compoundref="qcustomplot_8cpp" startline="19098" endline="19129">getValueRange</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPBars::connectBars</definition>
        <argsstring>(QCPBars *lower, QCPBars *upper)</argsstring>
        <name>connectBars</name>
        <param>
          <type><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> *</type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> *</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="qcustomplot.h" line="2903" column="15" bodyfile="qcustomplot.cpp" bodystart="19018" bodyend="19045"/>
        <references refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" compoundref="qcustomplot_8h" startline="2890">mBarAbove</references>
        <references refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" compoundref="qcustomplot_8h" startline="2890">mBarBelow</references>
        <referencedby refid="class_q_c_p_bars_1ac22e00a6a41509538c21b04f0a57318c" compoundref="qcustomplot_8cpp" startline="18632" endline="18649">moveAbove</referencedby>
        <referencedby refid="class_q_c_p_bars_1a69fc371346980f19177c3d1ecdad78ee" compoundref="qcustomplot_8cpp" startline="18599" endline="18616">moveBelow</referencedby>
        <referencedby refid="class_q_c_p_bars_1a4d880e28031ef120603f543379be2f22" compoundref="qcustomplot_8cpp" startline="18475" endline="18481">~QCPBars</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A plottable representing a bar chart in a plot. </para>
    </briefdescription>
    <detaileddescription>
<para><image type="html" name="QCPBars.png"></image>
</para>
<para>To plot data, assign it with the <ref refid="class_q_c_p_bars_1aa3435aab19e0a49e4e7b41bd36a8d96b" kindref="member">setData</ref> or <ref refid="class_q_c_p_bars_1a1f29cf08615040993209147fa68de3f2" kindref="member">addData</ref> functions.</para>
<sect1 id="class_q_c_p_statistical_box_1appearance">
<title>Changing the appearance</title>
<para>The appearance of the bars is determined by the pen and the brush (<ref refid="class_q_c_p_abstract_plottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" kindref="member">setPen</ref>, <ref refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" kindref="member">setBrush</ref>). The width of the individual bars can be controlled with <ref refid="class_q_c_p_bars_1adcaa3b41281bb2c0f7949b341592fcc0" kindref="member">setWidthType</ref> and <ref refid="class_q_c_p_bars_1afec6116579d44d5b706e0fa5e5332507" kindref="member">setWidth</ref>.</para>
<para>Bar charts are stackable. This means, two <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> plottables can be placed on top of each other (see <ref refid="class_q_c_p_bars_1ac22e00a6a41509538c21b04f0a57318c" kindref="member">QCPBars::moveAbove</ref>). So when two bars are at the same key position, they will appear stacked.</para>
<para>If you would like to group multiple <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> plottables together so they appear side by side as shown below, use <ref refid="class_q_c_p_bars_group" kindref="compound">QCPBarsGroup</ref>.</para>
<para><image type="html" name="QCPBarsGroup.png"></image>
</para>
</sect1>
<sect1 id="class_q_c_p_statistical_box_1usage">
<title>Usage</title>
<para>Like all data representing objects in <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref>, the <ref refid="class_q_c_p_bars" kindref="compound">QCPBars</ref> is a plottable (<ref refid="class_q_c_p_abstract_plottable" kindref="compound">QCPAbstractPlottable</ref>). So the plottable-interface of <ref refid="class_q_custom_plot" kindref="compound">QCustomPlot</ref> applies (<ref refid="class_q_custom_plot_1a32de81ff53e263e785b83b52ecd99d6f" kindref="member">QCustomPlot::plottable</ref>, <ref refid="class_q_custom_plot_1ab7ad9174f701f9c6f64e378df77927a6" kindref="member">QCustomPlot::addPlottable</ref>, <ref refid="class_q_custom_plot_1af3dafd56884208474f311d6226513ab2" kindref="member">QCustomPlot::removePlottable</ref>, etc.)</para>
<para>Usually, you first create an instance: <programlisting filename="documentation/doc-code-snippets/mainwindow.cpp"></programlisting>add it to the customPlot with <ref refid="class_q_custom_plot_1ab7ad9174f701f9c6f64e378df77927a6" kindref="member">QCustomPlot::addPlottable</ref>: <programlisting filename="documentation/doc-code-snippets/mainwindow.cpp"></programlisting>and then modify the properties of the newly created plottable, e.g.: <programlisting filename="documentation/doc-code-snippets/mainwindow.cpp"></programlisting></para>
</sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>QCPBars</label>
        <link refid="class_q_c_p_bars"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QCPAbstractPlottable</label>
        <link refid="class_q_c_p_abstract_plottable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="17">
        <label>QCPLayoutInset</label>
        <link refid="class_q_c_p_layout_inset"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QCPLayoutElement</label>
        <link refid="class_q_c_p_layout_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>#mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>QCPBars</label>
        <link refid="class_q_c_p_bars"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>#mBarsGroup</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>QCPRange</label>
        <link refid="class_q_c_p_range"/>
      </node>
      <node id="18">
        <label>QCPLegend</label>
        <link refid="class_q_c_p_legend"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QCPAbstractPlottable</label>
        <link refid="class_q_c_p_abstract_plottable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QCPLineEnding</label>
        <link refid="class_q_c_p_line_ending"/>
      </node>
      <node id="19">
        <label>QCPBarsGroup</label>
        <link refid="class_q_c_p_bars_group"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>QCPLayout</label>
        <link refid="class_q_c_p_layout"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QCPGrid</label>
        <link refid="class_q_c_p_grid"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>#mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>QCPAxisPainterPrivate</label>
        <link refid="class_q_c_p_axis_painter_private"/>
        <childnode refid="14" relation="usage">
          <edgelabel>+lowerEnding</edgelabel>
          <edgelabel>+upperEnding</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QWidget</label>
      </node>
      <node id="5">
        <label>QCPLayer</label>
        <link refid="class_q_c_p_layer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QCPLayoutGrid</label>
        <link refid="class_q_c_p_layout_grid"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QCPLayerable</label>
        <link refid="class_q_c_p_layerable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#mLayer</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>#mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>QCPAxis</label>
        <link refid="class_q_c_p_axis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#mRange</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>#mAxisPainter</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>#mGrid</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>#mAxisRect</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>QCPAxisRect</label>
        <link refid="class_q_c_p_axis_rect"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>#mInsetLayout</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>#mDragStartHorzRange</edgelabel>
          <edgelabel>#mDragStartVertRange</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QCustomPlot</label>
        <link refid="class_q_custom_plot"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>#mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>#mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>+xAxis</edgelabel>
          <edgelabel>+xAxis2</edgelabel>
          <edgelabel>+yAxis</edgelabel>
          <edgelabel>+yAxis2</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>+legend</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="qcustomplot.h" line="2823" column="1" bodyfile="qcustomplot.h" bodystart="2824" bodyend="2908"/>
    <listofallmembers>
      <member refid="class_q_c_p_bars_1a1f29cf08615040993209147fa68de3f2" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>addData</name></member>
      <member refid="class_q_c_p_bars_1a142158b1addefd53259002dd3ab22c3a" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>addData</name></member>
      <member refid="class_q_c_p_bars_1a684dd105403a5497fda42f2094fecbb7" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>addData</name></member>
      <member refid="class_q_c_p_bars_1a3679a0a9decab0fa03f8f4c6e3344d52" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>addData</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a70f8cabfd808f7d5204b9f18c45c13f5" prot="public" virt="virtual"><scope>QCPBars</scope><name>addToLegend</name></member>
      <member refid="class_q_c_p_layerable_1a71cbd212fde2703cee076e204a475709" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>antialiased</name></member>
      <member refid="class_q_c_p_abstract_plottable_1add06e122d84deb9f451ace9bb8ad9c96" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>antialiasedErrorBars</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a022717896dc57b638a7b5a7be7212ba9" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>antialiasedFill</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a795370db6b1309de0ab60b633efb5ec2" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>antialiasedScatters</name></member>
      <member refid="class_q_c_p_layerable_1acb663e375d2d36dc5c55021ee5a2119b" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>applyAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a59a80773c5cefc05a0646ac8e1149ed5" prot="protected" virt="virtual"><scope>QCPBars</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a0889abc8dbfd357053f40bfafff8bf7d" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>applyErrorBarsAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a8d06a59ea23324cce6330ebf2262c0ed" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>applyFillAntialiasingHint</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ac95f26b15a1e5d9c7bd2c0a46d760fc9" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>applyScattersAntialiasingHint</name></member>
      <member refid="class_q_c_p_bars_1ab97f2acd9f6cb40d2cc3c33d278f0e78" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>barAbove</name></member>
      <member refid="class_q_c_p_bars_1a1b58664864b141f45e02044a855b3213" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>barBelow</name></member>
      <member refid="class_q_c_p_bars_1a5eef59840b68d205df4e0c3df5f97633" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>barsGroup</name></member>
      <member refid="class_q_c_p_bars_1a29a7b3b86f80b2a04bd1f9ec0ebaf422" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>baseValue</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a893b4896dfd92b68b05b2600b80f5826" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>brush</name></member>
      <member refid="class_q_c_p_bars_1a11dbbd707132f07f862dff13c5789c2b" prot="public" virt="virtual"><scope>QCPBars</scope><name>clearData</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aafb817dbea97d2798967f3371a701413" prot="protected" virt="virtual"><scope>QCPBars</scope><name>clipRect</name></member>
      <member refid="class_q_c_p_bars_1a6ea37802cd22f97235cab614b14b9f19" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>connectBars</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a7ad84a36472441cf1f555c5683d0da93" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>coordsToPixels</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a5acb50ae984eef09a7ab92315d2ad708" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>coordsToPixels</name></member>
      <member refid="class_q_c_p_bars_1a185bcee5f2d96fbc336a2d270687d016" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>data</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a6fa0d0f95560ea8b01ee13f296dab2b1" prot="protected" virt="virtual"><scope>QCPBars</scope><name>deselectEvent</name></member>
      <member refid="class_q_c_p_abstract_plottable_1af7e992b638c8aa688abceac579bb90d7" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>distSqrToLine</name></member>
      <member refid="class_q_c_p_bars_1a42b894e34dac799f90ff3700706b31df" prot="protected" virt="virtual"><scope>QCPBars</scope><name>draw</name></member>
      <member refid="class_q_c_p_bars_1ad466f06b0fa561b6e12c92fdb8fa3c7f" prot="protected" virt="virtual"><scope>QCPBars</scope><name>drawLegendIcon</name></member>
      <member refid="class_q_c_p_bars_1a3a4ca0069f003929284763caef1856a8" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>getBarPolygon</name></member>
      <member refid="class_q_c_p_bars_1a0161ff6af64e025543c66130bcaa7ffd" prot="protected" virt="virtual"><scope>QCPBars</scope><name>getKeyRange</name></member>
      <member refid="class_q_c_p_bars_1ad87586cc5e9806740bc0e867667da409" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>getPixelWidth</name></member>
      <member refid="class_q_c_p_bars_1a0ffd6e043876e13e89eaa54e9f8a04b9" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>getStackedBaseValue</name></member>
      <member refid="class_q_c_p_bars_1af71b8e6ee0b800f0b79f2b6e692afee2" prot="protected" virt="virtual"><scope>QCPBars</scope><name>getValueRange</name></member>
      <member refid="class_q_c_p_bars_1adce71831920cf0426722fdd47ba34261" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>getVisibleDataBounds</name></member>
      <member refid="class_q_c_p_layerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>initializeParentPlot</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a2cdd6f0dd5e9a979037f86b4000d9cfe" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>keyAxis</name></member>
      <member refid="class_q_c_p_layerable_1a5ff4862e8c784c9f5986dbc1533ba2a4" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>layer</name></member>
      <member refid="class_q_c_p_layerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>layerChanged</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ac9147022a662e92b46c39e7cb821b0af" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mainBrush</name></member>
      <member refid="class_q_c_p_abstract_plottable_1abd790a3b229239f49067f136633a4b98" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mainPen</name></member>
      <member refid="class_q_c_p_layerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mAntialiased</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ad48660b2bd301576e92fb033d8f455ea" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mAntialiasedErrorBars</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a152ac765bedf927fb240545d11d453ea" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mAntialiasedFill</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aa115755e525a8e3a86dc683f9cab755b" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mAntialiasedScatters</name></member>
      <member refid="class_q_c_p_bars_1a0c1c46076c41a478dbb373cfd35929aa" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mBarAbove</name></member>
      <member refid="class_q_c_p_bars_1ad51db970eed7e286f2753b0216fc56de" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mBarBelow</name></member>
      <member refid="class_q_c_p_bars_1a9f59c255f3739182ca9744dff75beaa9" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mBarsGroup</name></member>
      <member refid="class_q_c_p_bars_1aa0515cf47fa6044cc28e59b1ae5ec759" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mBaseValue</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a33f00674c0161c13315ab9da0895418e" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mBrush</name></member>
      <member refid="class_q_c_p_bars_1aef28d29d51ef84b608ecd22c55d531ff" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mData</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a426f42e254d0f8ce5436a868c61a6827" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mKeyAxis</name></member>
      <member refid="class_q_c_p_layerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mLayer</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ac29ffef424e2488675930de18cde612a" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mName</name></member>
      <member refid="class_q_c_p_bars_1ac22e00a6a41509538c21b04f0a57318c" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>moveAbove</name></member>
      <member refid="class_q_c_p_bars_1a69fc371346980f19177c3d1ecdad78ee" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>moveBelow</name></member>
      <member refid="class_q_c_p_layerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>moveToLayer</name></member>
      <member refid="class_q_c_p_layerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mParentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mParentPlot</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a67bc0622fd1b9fa14e54c14922dcec66" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mPen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aceee52342c8e75727abcbd164986fdcb" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mSelectable</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mSelected</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aea3c0da30c7a8be23ad5f2d9bca36762" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mSelectedBrush</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a10619472f5d5e10e9519a599f1cf5576" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mSelectedPen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a2901452ca4aea911a1827717934a4bda" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mValueAxis</name></member>
      <member refid="class_q_c_p_layerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mVisible</name></member>
      <member refid="class_q_c_p_bars_1a7c4e0f2246f8133f48a9c3f24cf5b920" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mWidth</name></member>
      <member refid="class_q_c_p_bars_1a94dba1309496c7601d01e2c59715cbb3" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>mWidthType</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a52c226eefcb1920240eeabae574d28c0" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>name</name></member>
      <member refid="class_q_c_p_layerable_1aa78b7e644d2c519e1a9a6f2ac5fcd858" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>parentLayerable</name></member>
      <member refid="class_q_c_p_layerable_1a473edb813a4c1929d6b6a8fe3ff3faf7" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>parentPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab20b7dbd8e0249ed61adb9622c427382" prot="protected" virt="virtual"><scope>QCPBars</scope><name>parentPlotInitialized</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ad5972efc31344e5a7a78ab4f8864b2d3" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>pen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a3903c1120ab5c27e7fa46b597ef267bd" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>pixelsToCoords</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a28d32c0062b9450847851ffdee1c5f69" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>pixelsToCoords</name></member>
      <member refid="class_q_c_p_abstract_plottable_1af78a036e40db6f53a31abadc5323715a" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>QCPAbstractPlottable</name></member>
      <member refid="class_q_c_p_bars_1a64006999ad9dff308f40df41cef176ad" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>QCPBars</name></member>
      <member refid="class_q_c_p_bars_1ae1051b4d58a2786cb420367a586e2fee" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>QCPBarsGroup</name></member>
      <member refid="class_q_c_p_layerable_1a74c0fa237f29bf0e49565013fc5d1ec0" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>QCPLayerable</name></member>
      <member refid="class_q_c_p_bars_1a8429035e7adfbd7f05805a6530ad5e3b" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>QCPLegend</name></member>
      <member refid="class_q_c_p_bars_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>QCustomPlot</name></member>
      <member refid="class_q_c_p_layerable_1ab054e88f15d485defcb95e7376f119e7" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>realVisibility</name></member>
      <member refid="class_q_c_p_bars_1a1fe9bcb57d670defea1bb65cadf43765" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>removeData</name></member>
      <member refid="class_q_c_p_bars_1a837cc9848ad3edd40a6130b508493f93" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>removeData</name></member>
      <member refid="class_q_c_p_bars_1a99de6e7abbbf03fb41fa604c7f08aa8b" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>removeDataAfter</name></member>
      <member refid="class_q_c_p_bars_1a9d12779a3fad4820aad2c428f368298d" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>removeDataBefore</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ac95fb2604d9106d0852ad9ceb326fe8c" prot="public" virt="virtual"><scope>QCPBars</scope><name>removeFromLegend</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a1491c4a606bccd2d09e65e11b79eb882" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>rescaleAxes</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ae96b83c961e257da116c6acf9c7da308" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>rescaleKeyAxis</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aa1e408bb2d13999150c3f7f8a8579ca9" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>rescaleValueAxis</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>sdBoth</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>sdNegative</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>sdPositive</name></member>
      <member refid="class_q_c_p_abstract_plottable_1adf896b8a213fea74440c7bc969cf6e4c" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>selectable</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a0059caa3f3581f3959660fef8cbb71c4" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>selectableChanged</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a0b3b514474fe93354fc74cfc144184b4" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>selected</name></member>
      <member refid="class_q_c_p_abstract_plottable_1afe5f3f74b09e89713ba39da04079a337" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>selectedBrush</name></member>
      <member refid="class_q_c_p_abstract_plottable_1aafdfd0946b18364321ffce01cc6045a0" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>selectedPen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a16aaad02456aa23a759efd1ac90c79bf" prot="protected" virt="virtual"><scope>QCPBars</scope><name>selectEvent</name></member>
      <member refid="class_q_c_p_abstract_plottable_1afb5e4718c232a16d0fb06b00e172be9e" prot="protected" virt="virtual"><scope>QCPBars</scope><name>selectionCategory</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a3af66432b1dca93b28e00e78a8c7c1d9" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>selectionChanged</name></member>
      <member refid="class_q_c_p_bars_1a62d66cc8eedca6bedfc1f6513164d418" prot="public" virt="virtual"><scope>QCPBars</scope><name>selectTest</name></member>
      <member refid="class_q_c_p_layerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setAntialiased</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a757beb744b96cf1855cca5ab9d3ecf52" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setAntialiasedErrorBars</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a089d6b5577120239b55c39ed27c39536" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setAntialiasedFill</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a2f03f067ede2ed4da6f7d0e4777a3f02" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setAntialiasedScatters</name></member>
      <member refid="class_q_c_p_bars_1aedd1709061f0b307c47ddb45e172ef9a" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setBarsGroup</name></member>
      <member refid="class_q_c_p_bars_1a574ec7eb7537566df1a28ff085d75623" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setBaseValue</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a7a4b92144dca6453a1f0f210e27edc74" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setBrush</name></member>
      <member refid="class_q_c_p_bars_1aa3435aab19e0a49e4e7b41bd36a8d96b" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setData</name></member>
      <member refid="class_q_c_p_bars_1a3efded5df4a82ecb201f7c28099fa2e5" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setData</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a8524fa2994c63c0913ebd9bb2ffa3920" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setKeyAxis</name></member>
      <member refid="class_q_c_p_layerable_1ab0d0da6d2de45a118886d2c8e16d5a54" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_layerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setLayer</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ab79c7ba76bc7fa89a4b3580e12149f1f" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setName</name></member>
      <member refid="class_q_c_p_layerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>setParentLayerable</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setPen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a22c69299eb5569e0f6bf084877a37dc4" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setSelectable</name></member>
      <member refid="class_q_c_p_abstract_plottable_1afbd5428c2952f59d952e11ab5cd79176" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setSelected</name></member>
      <member refid="class_q_c_p_abstract_plottable_1ae8c816874089f7a44001e8618e81a9dc" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setSelectedBrush</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a6911603cad23ab0469b108224517516f" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setSelectedPen</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a71626a07367e241ec62ad2c34baf21cb" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setValueAxis</name></member>
      <member refid="class_q_c_p_layerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setVisible</name></member>
      <member refid="class_q_c_p_bars_1afec6116579d44d5b706e0fa5e5332507" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setWidth</name></member>
      <member refid="class_q_c_p_bars_1adcaa3b41281bb2c0f7949b341592fcc0" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>setWidthType</name></member>
      <member refid="class_q_c_p_abstract_plottable_1a661743478a1d3c09d28ec2711d7653d8" prot="protected" virt="non-virtual"><scope>QCPBars</scope><name>SignDomain</name></member>
      <member refid="class_q_c_p_abstract_plottable_1af47809a644a68ffd955fb30b01fb4f2f" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>valueAxis</name></member>
      <member refid="class_q_c_p_layerable_1af0297b944b6192b6d67d00bff41b6b70" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>visible</name></member>
      <member refid="class_q_c_p_bars_1abe7eb3987d8711f45829db879aee2280" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>width</name></member>
      <member refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>WidthType</name></member>
      <member refid="class_q_c_p_bars_1a4c103fb405a45f47853e0345f0c6e708" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>widthType</name></member>
      <member refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649ab74315c9aa77df593c58dd25dfc0de35" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>wtAbsolute</name></member>
      <member refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649a90bc09899361ad3422ff277f7c790ffe" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>wtAxisRectRatio</name></member>
      <member refid="class_q_c_p_bars_1a65dbbf1ab41cbe993d71521096ed4649aad3cc60ae1bfb1160a30237bee9eaf10" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>wtPlotCoords</name></member>
      <member refid="class_q_c_p_bars_1a4d880e28031ef120603f543379be2f22" prot="public" virt="virtual"><scope>QCPBars</scope><name>~QCPBars</name></member>
      <member refid="class_q_c_p_layerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="non-virtual"><scope>QCPBars</scope><name>~QCPLayerable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
